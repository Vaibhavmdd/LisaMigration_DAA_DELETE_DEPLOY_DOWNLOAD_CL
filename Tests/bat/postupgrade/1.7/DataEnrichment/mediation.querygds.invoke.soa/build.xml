<project default="test">

	<property name="TIBCO_HOME"
		   value="${basedir}/../../../../../"/>

	<property name="props.file" location="${basedir}/../../CLI/remote_props.properties"/>

	<import file="${TIBCO_HOME}/administrator/3.2/bin/taskdef.xml"/>

	<target name="test" depends="upload.daa, create.rt, create.ri, install.ri, create.app, map.app.to.node, deploy.app"/>
	<target name="clean" depends="undeploy.app, delete.app, delete.daa, uninstall.ri, delete.ri, delete.rt"/>

	<target name="upload.daa">
		<AMXAdminTask
			remote="true"
			propsFile="${props.file}"
			action="add"
			dataFile="${basedir}/cli_data.xml"
			objectSelector="DAA"
			overwrite="true"
			merge="true"
			createIfNotExists="true"
			force="true"
			failOnError="true"/>		
	</target>

	<target name="create.rt">
		<AMXAdminTask
			remote="true"
			propsFile="${props.file}"
			action="add"
			dataFile="${basedir}/cli_data.xml"
			objectSelector="ResourceTemplate"
			overwrite="false"
			merge="false"
			createIfNotExists="true"
			force="false"
			failOnError="true"/>
	</target>

	<target name="create.ri">
		<AMXAdminTask
			remote="true"
			propsFile="${props.file}"
			action="add"
			dataFile="${basedir}/cli_data.xml"
			objectSelector="Host/ResourceInstance | Environment/Node/ResourceInstance"
			overwrite="false"
			merge="false"
			createIfNotExists="true"
			force="false"
			failOnError="true"/>
	</target>

	<target name="install.ri">
		<AMXAdminTask
			remote="true"
			propsFile="${props.file}"
			action="install"
			dataFile="${basedir}/cli_data.xml"
			objectSelector="Host/ResourceInstance | Environment/Node/ResourceInstance"
			overwrite="false"
			merge="false"
			createIfNotExists="true"
			force="false"
			failOnError="true"/>
	</target>


	<target name="create.app">
		<AMXAdminTask
			remote="true"
			propsFile="${props.file}"
			action="add"
			dataFile="${basedir}/cli_data.xml"
			objectSelector="Environment//Application"
			overwrite="true"
			merge="true"
			createIfNotExists="true"
			force="true"
			failOnError="true"/>
	</target>


	<target name="map.app.to.node">
		<AMXAdminTask
			remote="true"
			propsFile="${props.file}"
			action="add"
			dataFile="${basedir}/cli_data.xml"
			objectSelector="Environment//Application/Node"
			overwrite="true"
			merge="true"
			createIfNotExists="true"
			force="true"
			failOnError="true"/>
	</target>


	<target name="deploy.app">
		<AMXAdminTask
			remote="true"
			propsFile="${props.file}"
			action="deploy"
			dataFile="${basedir}/cli_data.xml"
			objectSelector="Environment//Application"
			overwrite="true"
			merge="true"
			createIfNotExists="true"
			force="true"
			failOnError="true"/>
	</target>


	<target name="undeploy.app">
		<AMXAdminTask
			remote="true"
			propsFile="${props.file}"
			action="undeploy"
			dataFile="${basedir}/cli_data.xml"
			objectSelector="Environment//Application"
			overwrite="true"
			merge="true"
			createIfNotExists="true"
			force="true"
			failOnError="false"/>
	</target>


	<target name="delete.app">
		<AMXAdminTask
			remote="true"
			propsFile="${props.file}"
			action="delete"
			dataFile="${basedir}/cli_data.xml"
			objectSelector="Environment//Application"
			overwrite="true"
			merge="true"
			createIfNotExists="true"
			force="true"
			failOnError="false"/>
	</target>

	<target name="delete.daa">
		<AMXAdminTask
			remote="true"
			propsFile="${props.file}"
			action="delete"
			dataFile="${basedir}/cli_data.xml"
			objectSelector="DAA"
			overwrite="true"
			merge="true"
			createIfNotExists="true"
			force="true"
			failOnError="false"/>
	</target>


	<target name="uninstall.ri">
		<AMXAdminTask
			remote="true"
			propsFile="${props.file}"
			action="uninstall"
			dataFile="${basedir}/cli_data.xml"
			objectSelector="Host/ResourceInstance | Environment/Node/ResourceInstance"
			overwrite="true"
			merge="true"
			createIfNotExists="true"
			force="true"
			failOnError="false"/>
	</target>


	<target name="delete.ri">
		<AMXAdminTask
			remote="true"
			propsFile="${props.file}"
			action="delete"
			dataFile="${basedir}/cli_data.xml"
			objectSelector="Host/ResourceInstance | Environment/Node/ResourceInstance"
			overwrite="true"
			merge="true"
			createIfNotExists="true"
			force="true"
			failOnError="false"/>
	</target>

	<target name="delete.rt">
               <AMXAdminTask
		        remote="true"
		        propsFile="${props.file}"
		        action="delete"
		        dataFile="${basedir}/cli_data.xml"
		        objectSelector="ResourceTemplate"
		        overwrite="true"
		        merge="true"
		        createIfNotExists="true"
		        force="true"
		        failOnError="false"/>
	</target>

</project>

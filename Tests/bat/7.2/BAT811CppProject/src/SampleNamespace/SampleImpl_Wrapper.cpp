/*<?xml version="1.0" encoding="UTF-8" standalone="no"?><header>*/
/* <!-- */
//(c) Copyright 2008, TIBCO Software Inc.  All rights reserved.
//LEGAL NOTICE:  This source code is provided to specific authorized end
//users pursuant to a separate license agreement.  You MAY NOT use this
//source code if you do not have a separate license from TIBCO Software
//Inc.  Except as expressly set forth in such license agreement, this
//source code, or any portion thereof, may not be used, modified,
//reproduced, transmitted, or distributed in any form or by any means,
//electronic or mechanical, without written permission from  TIBCO
//Software Inc.
//THIS CODE HAS BEEN GENERATED BY A TOOL. DO NOT EDIT.

#include "SampleImpl_Wrapper.h"
#define BAT811CPPPROJECT_NAMESPACE SampleNamespace
using TIBAMX_CORE_NAMESPACE::ServiceInvocationException;

namespace BAT811CPPPROJECT_NAMESPACE
{
	/* -->
	<constantVariablesSection>
	<service generated="YES" name="WSDL_COM_TIBCO_AMX_EJBBT_IQATEST_COMPANYADDRESS::AddressRemotePortTypeService">
		<!--*/

	 const XMLCh* SampleImpl_Wrapper::NS_ADDRESSREQUESTRESPONSE=XmlUtils::transcode("ns:addressRequestResponse");
	 const XMLCh* SampleImpl_Wrapper::ADDRESSREQUESTARGS0=XmlUtils::transcode("addressRequestargs0");
	 const XMLCh* SampleImpl_Wrapper::HTTP___COMPANYADDRESS_IQATEST_EJBBT_AMX_TIBCO_COM=XmlUtils::transcode("http://companyaddress.iqatest.ejbbt.amx.tibco.com");
	 const XMLCh* SampleImpl_Wrapper::NS_ADDRESSREQUEST=XmlUtils::transcode("ns:addressRequest");
	 const XMLCh* SampleImpl_Wrapper::NS_REMOTEEXCEPTION=XmlUtils::transcode("ns:RemoteException");
		/*-->
		</service>
		</constantVariablesSection>
	<!-- */
		
	void SampleImpl_Wrapper::invoke(TIBAMX_CPP_NAMESPACE::Operation& cx_operation) throw (TIBAMX_CORE_NAMESPACE::TibcoRuntimeException)
	{
		// Argument creation from Document object.
		XERCES_CPP_NAMESPACE::DOMDocument* cx_requestDoc = (XERCES_CPP_NAMESPACE::DOMDocument*)cx_operation.getParameterValue("RequestDocument");

		// Remove "Request" node from the dom.
		XERCES_CPP_NAMESPACE::DOMElement* cx_root = cx_requestDoc->getDocumentElement();

		TIBAMX_CORE_NAMESPACE::DOMElementIterator cx_elementItr(cx_root->getChildNodes());
		const std::string& cx_operationName = cx_operation.getName();
		TIBAMX_CORE_NAMESPACE::DeSerializerPtr cx_deserializer;
		TIBAMX_CORE_NAMESPACE::SerializerPtr cx_serializer;
		SampleImpl& cx_appImpl = (SampleImpl&)getApplication();
		
		/* -->
		<generatedSection>
		<service generated="YES" name="WSDL_COM_TIBCO_AMX_EJBBT_IQATEST_COMPANYADDRESS::AddressRemotePortTypeService">
		<!--*/
		if (cx_operationName == "addressRequest")
		{
			cx_operation.addParameter("serviceName","AddressRemotePortType");
			cx_deserializer = &XSD_COM_TIBCO_AMX_EJBBT_IQATEST_COMPANYADDRESS_XSD::AddressRequestSerializer::deserialize;
			XSD_COM_TIBCO_AMX_EJBBT_IQATEST_COMPANYADDRESS_XSD::AddressRequest* addressRequestargs0  = (XSD_COM_TIBCO_AMX_EJBBT_IQATEST_COMPANYADDRESS_XSD::AddressRequest*)TIBAMX_CORE_NAMESPACE::SerializerUtils::ProcessNonDefaultElement(cx_elementItr,ADDRESSREQUESTARGS0,cx_deserializer);
			XSD_COM_TIBCO_AMX_EJBBT_IQATEST_COMPANYADDRESS::AddressRequestResponseElement*cx_returnValue = NULL;
			try {
				cx_returnValue = cx_appImpl.addressRequest(*addressRequestargs0);
				// Creating return document.
				XERCES_CPP_NAMESPACE::DOMDocument* cx_doc =  TIBAMX_CORE_NAMESPACE::XmlUtils::createDocument(NS_ADDRESSREQUEST,HTTP___COMPANYADDRESS_IQATEST_EJBBT_AMX_TIBCO_COM);
		
				cx_serializer = &XSD_COM_TIBCO_AMX_EJBBT_IQATEST_COMPANYADDRESS::AddressRequestResponseElementSerializer::serialize;
			
				TIBAMX_CORE_NAMESPACE::SerializerUtils::createReturnDocumentForPartElement(cx_doc, NS_ADDRESSREQUESTRESPONSE,HTTP___COMPANYADDRESS_IQATEST_EJBBT_AMX_TIBCO_COM, cx_serializer, cx_returnValue,false);
			
				cx_operation.setReturnValue((XERCES_CPP_NAMESPACE::DOMDocument*)cx_doc);
			} catch(XSD_COM_TIBCO_AMX_EJBBT_IQATEST_COMPANYADDRESS::RemoteExceptionFault& cx_ex){
				
				XERCES_CPP_NAMESPACE::DOMDocument* cx_doc =  TIBAMX_CORE_NAMESPACE::XmlUtils::createDocument(NS_ADDRESSREQUEST,HTTP___COMPANYADDRESS_IQATEST_EJBBT_AMX_TIBCO_COM);
				
				cx_serializer = &XSD_COM_TIBCO_AMX_EJBBT_IQATEST_COMPANYADDRESS::RemoteExceptionFaultSerializer::serialize;
				
				TIBAMX_CORE_NAMESPACE::SerializerUtils::createReturnDocumentForPartElement(cx_doc, NS_REMOTEEXCEPTION,HTTP___COMPANYADDRESS_IQATEST_EJBBT_AMX_TIBCO_COM, cx_serializer, &cx_ex,false);
				
				cx_operation.setFaultValue((XERCES_CPP_NAMESPACE::DOMDocument*)cx_doc);

				TIBAMX_CPP_NAMESPACE::StringRequestContext* requestCtx = cx_appImpl.getComponentContext().getRequestContext();
				TIBAMX_CPP_NAMESPACE::StringReplyContext* replyCtx = requestCtx->getReplyContext();
				replyCtx->setFaultName("RemoteException","XSD_COM_TIBCO_AMX_EJBBT_IQATEST_COMPANYADDRESS");
			} catch(TIBAMX_CORE_NAMESPACE::TibcoRuntimeException& cx_ex) {
				SAFE_DELETE(cx_returnValue);
				SAFE_DELETE(addressRequestargs0);
				rethrowException(cx_ex);
			} catch(...) {
				SAFE_DELETE(cx_returnValue);
				SAFE_DELETE(addressRequestargs0);
				throwRuntimeException(ServiceInvocationException,"Error invoking service!");
			}
			SAFE_DELETE(cx_returnValue);
			SAFE_DELETE(addressRequestargs0);
			return;
		} // End of (cx_operationName == "addressRequest")		
		/*-->
		</service>
		</generatedSection>
		<!-- */

	} //END of SampleImpl_Wrapper::invokeService
} //END of BAT811CPPPROJECT_NAMESPACE
/* --> */
//</header>

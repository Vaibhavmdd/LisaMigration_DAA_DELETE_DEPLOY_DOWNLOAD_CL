//(c) Copyright 2008, TIBCO Software Inc.  All rights reserved.
//LEGAL NOTICE:  This source code is provided to specific authorized end
//users pursuant to a separate license agreement.  You MAY NOT use this
//source code if you do not have a separate license from TIBCO Software
//Inc.  Except as expressly set forth in such license agreement, this
//source code, or any portion thereof, may not be used, modified,
//reproduced, transmitted, or distributed in any form or by any means,
//electronic or mechanical, without written permission from  TIBCO
//Software Inc.
//THIS CODE HAS BEEN GENERATED BY A TOOL. DO NOT EDIT.

#include "AddressRemotePortTypeAddressRemotePortTypeProxy.h"

namespace WSDL_COM_TIBCO_AMX_EJBBT_IQATEST_COMPANYADDRESS
{

	 const XMLCh* AddressRemotePortTypeAddressRemotePortTypeProxy::NS_ADDRESSREQUESTARGS0=XmlUtils::transcode("ns:addressRequestargs0");
	 const XMLCh* AddressRemotePortTypeAddressRemotePortTypeProxy::HTTP___COMPANYADDRESS_IQATEST_EJBBT_AMX_TIBCO_COM=XmlUtils::transcode("http://companyaddress.iqatest.ejbbt.amx.tibco.com");
	 const XMLCh* AddressRemotePortTypeAddressRemotePortTypeProxy::NS_ADDRESSREQUEST=XmlUtils::transcode("ns:addressRequest");
	 const XMLCh* AddressRemotePortTypeAddressRemotePortTypeProxy::ADDRESSREQUESTRESPONSE=XmlUtils::transcode("addressRequestResponse");
	 const XMLCh* AddressRemotePortTypeAddressRemotePortTypeProxy::REMOTEEXCEPTION=XmlUtils::transcode("RemoteException");

	XSD_COM_TIBCO_AMX_EJBBT_IQATEST_COMPANYADDRESS::AddressRequestResponseElement*  AddressRemotePortTypeAddressRemotePortTypeProxy::addressRequest(const XSD_COM_TIBCO_AMX_EJBBT_IQATEST_COMPANYADDRESS_XSD::AddressRequest& addressRequestargs0) throw (TIBAMX_CORE_NAMESPACE::TibcoRuntimeException,XSD_COM_TIBCO_AMX_EJBBT_IQATEST_COMPANYADDRESS::RemoteExceptionFault)
	{
		TIBAMX_CORE_NAMESPACE::SerializerPtr cx_serializer;

		TIBAMX_CPP_NAMESPACE::Operation cx_operation("addressRequest");
		cx_operation.addParameter("referenceName", "AddressRemotePortType");
		cx_operation.addParameter("mep", "REQUEST_RESPONSE");
		cx_operation.addParameter("namespaceUri", "http://companyaddress.iqatest.ejbbt.amx.tibco.com");
		cx_operation.addParameter("localPart", "AddressRemotePortType");
		XERCES_CPP_NAMESPACE::DOMDocument* cx_doc =  TIBAMX_CORE_NAMESPACE::XmlUtils::createDocument(NS_ADDRESSREQUEST,HTTP___COMPANYADDRESS_IQATEST_EJBBT_AMX_TIBCO_COM);
		
		XERCES_CPP_NAMESPACE::DOMElement* cx_rootElement = cx_doc->getDocumentElement();

			
		XERCES_CPP_NAMESPACE::DOMElement* cx_element0 = TIBAMX_CORE_NAMESPACE::XmlUtils::createElementNS(cx_doc,NS_ADDRESSREQUESTARGS0,HTTP___COMPANYADDRESS_IQATEST_EJBBT_AMX_TIBCO_COM);
			
		cx_rootElement->appendChild(cx_element0);
		if(&addressRequestargs0 != NULL)
		{
			cx_serializer = &XSD_COM_TIBCO_AMX_EJBBT_IQATEST_COMPANYADDRESS_XSD::AddressRequestSerializer::serialize;
			(*cx_serializer)(cx_element0,&addressRequestargs0, NULL);
		}
		else 
		{
			TIBAMX_CORE_NAMESPACE::XmlUtils::markElementNull(cx_element0);
		}
		cx_operation.addParameter("RequestDocument",(XERCES_CPP_NAMESPACE::DOMDocument*)cx_doc);
		try 
		{
			// Call the external code. IN_OUT Call
			TIBAMX_CORE_NAMESPACE::DeSerializerPtr cx_deserializer;
			send(cx_operation, true);

			XERCES_CPP_NAMESPACE::DOMDocument* cx_responseDoc = (XERCES_CPP_NAMESPACE::DOMDocument*)cx_operation.getReturnValue();
			XERCES_CPP_NAMESPACE::DOMElement* root = cx_responseDoc->getDocumentElement();

			DOMElementIterator cx_elementItr(root->getChildNodes());
			if(cx_operation.hasFault()) 
			{
				const char* faultName = cx_elementItr.getNextElementName();
				if(strcmp(faultName,"RemoteException") == 0) 
				{
					cx_deserializer = &XSD_COM_TIBCO_AMX_EJBBT_IQATEST_COMPANYADDRESS::RemoteExceptionFaultSerializer::deserialize;
					XSD_COM_TIBCO_AMX_EJBBT_IQATEST_COMPANYADDRESS::RemoteExceptionFault* cx_returnVal  = (XSD_COM_TIBCO_AMX_EJBBT_IQATEST_COMPANYADDRESS::RemoteExceptionFault*)TIBAMX_CORE_NAMESPACE::SerializerUtils::ProcessNonDefaultElement(cx_elementItr,REMOTEEXCEPTION,cx_deserializer);
					XSD_COM_TIBCO_AMX_EJBBT_IQATEST_COMPANYADDRESS::RemoteExceptionFault cx_newReturnVal(*cx_returnVal);

					delete cx_returnVal;
					cx_doc->release();
					cx_responseDoc->release();
					throw cx_newReturnVal;
				}
			}
			cx_deserializer = &XSD_COM_TIBCO_AMX_EJBBT_IQATEST_COMPANYADDRESS::AddressRequestResponseElementSerializer::deserialize;
			XSD_COM_TIBCO_AMX_EJBBT_IQATEST_COMPANYADDRESS::AddressRequestResponseElement* cx_returnVal  = (XSD_COM_TIBCO_AMX_EJBBT_IQATEST_COMPANYADDRESS::AddressRequestResponseElement*)TIBAMX_CORE_NAMESPACE::SerializerUtils::ProcessNonDefaultElement(cx_elementItr,ADDRESSREQUESTRESPONSE,cx_deserializer);

			cx_doc->release();
			cx_responseDoc->release();
			return cx_returnVal;
		}
		catch (TIBAMX_CORE_NAMESPACE::ServiceRuntimeException& cx_exp)
		{
			cx_doc->release();
			rethrowException(cx_exp);
		}
	}
} //END of WSDL_COM_TIBCO_AMX_EJBBT_IQATEST_COMPANYADDRESS

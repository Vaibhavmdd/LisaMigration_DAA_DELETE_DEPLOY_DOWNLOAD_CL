//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.1433
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------



[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
[System.ServiceModel.ServiceContractAttribute(Namespace="http://qa.tibco.com/", ConfigurationName="IMyCalculator")]
public interface IMyCalculator
{
    
    // CODEGEN: Generating message contract since the wrapper namespace (http://tempuri.org/) of message AddRequest does not match the default value (qa.tibco.com)
    [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISimpleCalculator/Add", ReplyAction="http://tempuri.org/ISimpleCalculator/AddResponse")]
    AddResponse Add(AddRequest request);
    
    [System.ServiceModel.OperationContractAttribute(Action="http://qa.tibco.com/IMyCalculator/Multiply", ReplyAction="http://qa.tibco.com/IMyCalculator/MultiplyResponse")]
    int Multiply(int arg1, int arg2);
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
[System.ServiceModel.MessageContractAttribute(WrapperName="Add", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
public partial class AddRequest
{
    
    [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
    public int arg1;
    
    [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=1)]
    public int arg2;
    
    public AddRequest()
    {
    }
    
    public AddRequest(int arg1, int arg2)
    {
        this.arg1 = arg1;
        this.arg2 = arg2;
    }
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
[System.ServiceModel.MessageContractAttribute(WrapperName="AddResponse", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
public partial class AddResponse
{
    
    [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
    public int AddResult;
    
    public AddResponse()
    {
    }
    
    public AddResponse(int AddResult)
    {
        this.AddResult = AddResult;
    }
}

[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
public interface IMyCalculatorChannel : IMyCalculator, System.ServiceModel.IClientChannel
{
}

[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "3.0.0.0")]
public partial class MyCalculatorClient : System.ServiceModel.ClientBase<IMyCalculator>, IMyCalculator
{
    
    public MyCalculatorClient()
    {
    }
    
    public MyCalculatorClient(string endpointConfigurationName) : 
            base(endpointConfigurationName)
    {
    }
    
    public MyCalculatorClient(string endpointConfigurationName, string remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public MyCalculatorClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(endpointConfigurationName, remoteAddress)
    {
    }
    
    public MyCalculatorClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
            base(binding, remoteAddress)
    {
    }
    
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    AddResponse IMyCalculator.Add(AddRequest request)
    {
        return base.Channel.Add(request);
    }
    
    public int Add(int arg1, int arg2)
    {
        AddRequest inValue = new AddRequest();
        inValue.arg1 = arg1;
        inValue.arg2 = arg2;
        AddResponse retVal = ((IMyCalculator)(this)).Add(inValue);
        return retVal.AddResult;
    }
    
    public int Multiply(int arg1, int arg2)
    {
        return base.Channel.Multiply(arg1, arg2);
    }
}

<project name="amx-macrodefs" basedir=".">
	
	<!--
		If user passes a custom scripts-base (scripts-base-location), we take it (see comment below)
		A custom scripts-base can be from any product on top of AMX like BWSE, etc...
	-->
	<condition property="scripts-base-final" value="${scripts-base-location}">
		<isset property="scripts-base-location" />
	</condition>
	<!-- 
		Properties in ant are immutable, so the following assignment will only take place if scripts-base-location is *not* set (and default basic_cli will be imported). '
		If scripts-base-location is set, it will be imported.
	-->
	<property name="scripts-base-final" value="${TIBCO_AMXADMIN_HOME}/scripts/basic_cli.xml"/>
	<echo>Script base is: "${scripts-base-final}"</echo>
	<import file="${scripts-base-final}" optional="true" />
	
	<taskdef resource="net/sf/antcontrib/antcontrib.properties">
		
	</taskdef>

	
	<macrodef name="add.user" backtrace="true" description="Create new user from specified data file. 
		If objectSelector attribute is specified, the some attributes are ignored.">
		<attribute name="userName" default="" description="the name of the user. Optional. If not specified all users in data file are selected." />
		<attribute name="dataFile" description="The data file used as input for this admin CLI task. Required." />
		<attribute name="remotePropsFile" default="${remotePropsFile}" description="The remote properties file. Optional. By default the value of the property remotePropsFile defined will be used." />
		<attribute name="action" default="add" description="action to pass to admin task. Default is add." />
		<attribute name="overwrite" default="true" description="overwrite flag passed to the admin task. Optional. Default is true" />
		<attribute name="merge" default="true" description="merge flag passed to the admin task. Optional. Default is true" />
		<attribute name="createIfNotExists" default="true" description="The createIfNotExists flag passed to the admin task. Optional. Default is true" />
		<attribute name="force" default="false" description="force flag passed to the admin task. Optional. Default is false" />
		<attribute name="failOnError" default="true" description="failOnError flag passed to the admin task. Optional. Default is true" />
		<attribute name="objectSelector" default="" description="The object selector to be used with the admin task. Optional. By default, the macrodef tries to construct the objectselector based on the other input attributes. If this is specified, most other attributes like envName etc will be ignored." />
		<sequential>
			<echo>${line.separator}${line.separator}</echo>
			<echo>Creating User using:</echo>
			<echo>userName: @{userName}</echo>
			<echo>dataFile: @{dataFile}</echo>
			<echo>remotePropsFile: @{remotePropsFile}</echo>
			<echo>objectSelector: @{objectSelector}</echo>
			<echo>action: @{action}</echo>
			<echo>overwrite: @{overwrite}</echo>
			<echo>merge: @{merge}</echo>
			<echo>createIfNotExists: @{createIfNotExists}</echo>
			<echo>force: @{force}</echo>
			<echo>failOnError: @{failOnError}</echo>

			<if>
				<not>
					<equals arg1="@{objectSelector}" arg2="" />
				</not>
				<then>
					<var name="obj.sel" value="@{objectSelector}" />
				</then>
				<elseif>
					<not>
						<equals arg1="@{userName}" arg2="" />
					</not>
					<then>
						<var name="obj.sel" value="User[@username='@{userName}']" />
					</then>
				</elseif>
				<else>
					<var name="obj.sel" value="User" />
				</else>
			</if>
			<echo message="Invoking Admin task using the objectselector: ${obj.sel}" />
			<AMXAdminTask remote="true" propsFile="@{remotePropsFile}" action="@{action}" dataFile="@{dataFile}" objectSelector="${obj.sel}" overwrite="@{overwrite}" merge="@{merge}" createIfNotExists="@{createIfNotExists}" force="@{force}" failOnError="@{failOnError}" />
			<echo>${line.separator}${line.separator}</echo>
		</sequential>
	</macrodef>
	
	<macrodef name="delete.user" backtrace="true" description="Delete user from specified data file. 
		If objectSelector attribute is specified, the some attributes are ignored.">
		<attribute name="userName" default="" description="the name of the user. Optional. If not specified all users in data file are selected." />
		<attribute name="dataFile" description="The data file used as input for this admin CLI task. Required." />
		<attribute name="remotePropsFile" default="${remotePropsFile}" description="The remote properties file. Optional. By default the value of the property remotePropsFile defined will be used." />
		<attribute name="action" default="delete" description="action to pass to admin task. Default is delete." />
		<attribute name="overwrite" default="true" description="overwrite flag passed to the admin task. Optional. Default is true" />
		<attribute name="merge" default="true" description="merge flag passed to the admin task. Optional. Default is true" />
		<attribute name="createIfNotExists" default="true" description="The createIfNotExists flag passed to the admin task. Optional. Default is true" />
		<attribute name="force" default="false" description="force flag passed to the admin task. Optional. Default is false" />
		<attribute name="failOnError" default="true" description="failOnError flag passed to the admin task. Optional. Default is true" />
		<attribute name="objectSelector" default="" description="The object selector to be used with the admin task. Optional. By default, the macrodef tries to construct the objectselector based on the other input attributes. If this is specified, most other attributes like envName etc will be ignored." />
		<sequential>
			<echo>${line.separator}${line.separator}</echo>
			<echo>Deleting User using:</echo>
			<echo>userName: @{userName}</echo>
			<echo>dataFile: @{dataFile}</echo>
			<echo>remotePropsFile: @{remotePropsFile}</echo>
			<echo>objectSelector: @{objectSelector}</echo>
			<echo>action: @{action}</echo>
			<echo>overwrite: @{overwrite}</echo>
			<echo>merge: @{merge}</echo>
			<echo>createIfNotExists: @{createIfNotExists}</echo>
			<echo>force: @{force}</echo>
			<echo>failOnError: @{failOnError}</echo>

			<if>
				<not>
					<equals arg1="@{objectSelector}" arg2="" />
				</not>
				<then>
					<var name="obj.sel" value="@{objectSelector}" />
				</then>
				<elseif>
					<not>
						<equals arg1="@{userName}" arg2="" />
					</not>
					<then>
						<var name="obj.sel" value="User[@username='@{userName}']" />
					</then>
				</elseif>
				<else>
					<var name="obj.sel" value="User" />
				</else>
			</if>
			<echo message="Invoking Admin task using the objectselector: ${obj.sel}" />
			<AMXAdminTask remote="true" propsFile="@{remotePropsFile}" action="@{action}" dataFile="@{dataFile}" objectSelector="${obj.sel}" overwrite="@{overwrite}" merge="@{merge}" createIfNotExists="@{createIfNotExists}" force="@{force}" failOnError="@{failOnError}" />
			<echo>${line.separator}${line.separator}</echo>
		</sequential>
	</macrodef>
	
	<macrodef name="reset.pwd.user" backtrace="true" description="Reset user password from specified data file. 
		If objectSelector attribute is specified, the some attributes are ignored.">
		<attribute name="userName" default="" description="the name of the user. Optional. If not specified all users in data file are selected." />
		<attribute name="dataFile" description="The data file used as input for this admin CLI task. Required." />
		<attribute name="remotePropsFile" default="${remotePropsFile}" description="The remote properties file. Optional. By default the value of the property remotePropsFile defined will be used." />
		<attribute name="action" default="resetPassword" description="action to pass to admin task." />
		<attribute name="overwrite" default="true" description="overwrite flag passed to the admin task. Optional. Default is true" />
		<attribute name="merge" default="true" description="merge flag passed to the admin task. Optional. Default is true" />
		<attribute name="createIfNotExists" default="true" description="The createIfNotExists flag passed to the admin task. Optional. Default is true" />
		<attribute name="force" default="false" description="force flag passed to the admin task. Optional. Default is false" />
		<attribute name="failOnError" default="true" description="failOnError flag passed to the admin task. Optional. Default is true" />
		<attribute name="objectSelector" default="" description="The object selector to be used with the admin task. Optional. By default, the macrodef tries to construct the objectselector based on the other input attributes. If this is specified, most other attributes like envName etc will be ignored." />
		<sequential>
			<echo>${line.separator}${line.separator}</echo>
			<echo>Reset User Password using:</echo>
			<echo>userName: @{userName}</echo>
			<echo>dataFile: @{dataFile}</echo>
			<echo>remotePropsFile: @{remotePropsFile}</echo>
			<echo>objectSelector: @{objectSelector}</echo>
			<echo>action: @{action}</echo>
			<echo>overwrite: @{overwrite}</echo>
			<echo>merge: @{merge}</echo>
			<echo>createIfNotExists: @{createIfNotExists}</echo>
			<echo>force: @{force}</echo>
			<echo>failOnError: @{failOnError}</echo>

			<if>
				<not>
					<equals arg1="@{objectSelector}" arg2="" />
				</not>
				<then>
					<var name="obj.sel" value="@{objectSelector}" />
				</then>
				<elseif>
					<not>
						<equals arg1="@{userName}" arg2="" />
					</not>
					<then>
						<var name="obj.sel" value="User[@username='@{userName}']" />
					</then>
				</elseif>
				<else>
					<var name="obj.sel" value="User" />
				</else>
			</if>
			<echo message="Invoking Admin task using the objectselector: ${obj.sel}" />
			<AMXAdminTask remote="true" propsFile="@{remotePropsFile}" action="@{action}" dataFile="@{dataFile}" objectSelector="${obj.sel}" overwrite="@{overwrite}" merge="@{merge}" createIfNotExists="@{createIfNotExists}" force="@{force}" failOnError="@{failOnError}" />
			<echo>${line.separator}${line.separator}</echo>
		</sequential>
	</macrodef>
	
	<macrodef name="add.superuser" backtrace="true" description="Create new super users from specified data file. 
		If objectSelector attribute is specified, the some attributes are ignored.">
		<attribute name="dataFile" description="The data file used as input for this admin CLI task. Required." />
		<attribute name="remotePropsFile" default="${remotePropsFile}" description="The remote properties file. Optional. By default the value of the property remotePropsFile defined will be used." />
		<attribute name="action" default="addSuperUsers" description="action to pass to admin task." />
		<attribute name="overwrite" default="true" description="overwrite flag passed to the admin task. Optional. Default is true" />
		<attribute name="merge" default="true" description="merge flag passed to the admin task. Optional. Default is true" />
		<attribute name="createIfNotExists" default="true" description="The createIfNotExists flag passed to the admin task. Optional. Default is true" />
		<attribute name="force" default="false" description="force flag passed to the admin task. Optional. Default is false" />
		<attribute name="failOnError" default="true" description="failOnError flag passed to the admin task. Optional. Default is true" />
		<attribute name="objectSelector" default="ListOfSuperUser" description="The object selector to be used with the admin task." />
		<sequential>
			<echo>${line.separator}${line.separator}</echo>
			<echo>Creating Super Users using:</echo>
			<echo>dataFile: @{dataFile}</echo>
			<echo>remotePropsFile: @{remotePropsFile}</echo>
			<echo>objectSelector: @{objectSelector}</echo>
			<echo>action: @{action}</echo>
			<echo>overwrite: @{overwrite}</echo>
			<echo>merge: @{merge}</echo>
			<echo>createIfNotExists: @{createIfNotExists}</echo>
			<echo>force: @{force}</echo>
			<echo>failOnError: @{failOnError}</echo>
			<AMXAdminTask remote="true" propsFile="@{remotePropsFile}" action="@{action}" dataFile="@{dataFile}" objectSelector="@{objectSelector}" overwrite="@{overwrite}" merge="@{merge}" createIfNotExists="@{createIfNotExists}" force="@{force}" failOnError="@{failOnError}" />
			<echo>${line.separator}${line.separator}</echo>
		</sequential>
	</macrodef>
	
	<macrodef name="delete.superuser" backtrace="true" description="Delete super users from specified data file. 
		If objectSelector attribute is specified, the some attributes are ignored.">
		<attribute name="dataFile" description="The data file used as input for this admin CLI task. Required." />
		<attribute name="remotePropsFile" default="${remotePropsFile}" description="The remote properties file. Optional. By default the value of the property remotePropsFile defined will be used." />
		<attribute name="action" default="deleteSuperUsers" description="action to pass to admin task." />
		<attribute name="overwrite" default="true" description="overwrite flag passed to the admin task. Optional. Default is true" />
		<attribute name="merge" default="true" description="merge flag passed to the admin task. Optional. Default is true" />
		<attribute name="createIfNotExists" default="true" description="The createIfNotExists flag passed to the admin task. Optional. Default is true" />
		<attribute name="force" default="false" description="force flag passed to the admin task. Optional. Default is false" />
		<attribute name="failOnError" default="true" description="failOnError flag passed to the admin task. Optional. Default is true" />
		<attribute name="objectSelector" default="ListOfSuperUser" description="The object selector to be used with the admin task." />
		<sequential>
			<echo>${line.separator}${line.separator}</echo>
			<echo>Deleting Super Users using:</echo>
			<echo>dataFile: @{dataFile}</echo>
			<echo>remotePropsFile: @{remotePropsFile}</echo>
			<echo>objectSelector: @{objectSelector}</echo>
			<echo>action: @{action}</echo>
			<echo>overwrite: @{overwrite}</echo>
			<echo>merge: @{merge}</echo>
			<echo>createIfNotExists: @{createIfNotExists}</echo>
			<echo>force: @{force}</echo>
			<echo>failOnError: @{failOnError}</echo>
			<AMXAdminTask remote="true" propsFile="@{remotePropsFile}" action="@{action}" dataFile="@{dataFile}" objectSelector="@{objectSelector}" overwrite="@{overwrite}" merge="@{merge}" createIfNotExists="@{createIfNotExists}" force="@{force}" failOnError="@{failOnError}" />
			<echo>${line.separator}${line.separator}</echo>
		</sequential>
	</macrodef>
	
	<macrodef name="add.group" backtrace="true" description="Create new group from specified data file. 
		If objectSelector attribute is specified, the some attributes are ignored.">
		<attribute name="groupName" default="" description="the name of the group. Optional. If not specified all groups in data file are selected." />
		<attribute name="dataFile" description="The data file used as input for this admin CLI task. Required." />
		<attribute name="remotePropsFile" default="${remotePropsFile}" description="The remote properties file. Optional. By default the value of the property remotePropsFile defined will be used." />
		<attribute name="action" default="add" description="action to pass to admin task. Default is add." />
		<attribute name="overwrite" default="true" description="overwrite flag passed to the admin task. Optional. Default is true" />
		<attribute name="merge" default="true" description="merge flag passed to the admin task. Optional. Default is true" />
		<attribute name="createIfNotExists" default="true" description="The createIfNotExists flag passed to the admin task. Optional. Default is true" />
		<attribute name="force" default="false" description="force flag passed to the admin task. Optional. Default is false" />
		<attribute name="failOnError" default="true" description="failOnError flag passed to the admin task. Optional. Default is true" />
		<attribute name="objectSelector" default="" description="The object selector to be used with the admin task. Optional. By default, the macrodef tries to construct the objectselector based on the other input attributes. If this is specified, most other attributes like envName etc will be ignored." />
		<sequential>
			<echo>${line.separator}${line.separator}</echo>
			<echo>Creating Group using:</echo>
			<echo>groupName: @{groupName}</echo>
			<echo>dataFile: @{dataFile}</echo>
			<echo>remotePropsFile: @{remotePropsFile}</echo>
			<echo>objectSelector: @{objectSelector}</echo>
			<echo>action: @{action}</echo>
			<echo>overwrite: @{overwrite}</echo>
			<echo>merge: @{merge}</echo>
			<echo>createIfNotExists: @{createIfNotExists}</echo>
			<echo>force: @{force}</echo>
			<echo>failOnError: @{failOnError}</echo>

			<if>
				<not>
					<equals arg1="@{objectSelector}" arg2="" />
				</not>
				<then>
					<var name="obj.sel" value="@{objectSelector}" />
				</then>
				<elseif>
					<not>
						<equals arg1="@{groupName}" arg2="" />
					</not>
					<then>
						<var name="obj.sel" value="//Group[@name='@{groupName}']" />
					</then>
				</elseif>
				<else>
					<var name="obj.sel" value="//Group" />
				</else>
			</if>
			<echo message="Invoking Admin task using the objectselector: ${obj.sel}" />
			<AMXAdminTask remote="true" propsFile="@{remotePropsFile}" action="@{action}" dataFile="@{dataFile}" objectSelector="${obj.sel}" overwrite="@{overwrite}" merge="@{merge}" createIfNotExists="@{createIfNotExists}" force="@{force}" failOnError="@{failOnError}" />
			<echo>${line.separator}${line.separator}</echo>
		</sequential>
	</macrodef>
	
	<macrodef name="delete.group" backtrace="true" description="Delete group from specified data file. 
		If objectSelector attribute is specified, the some attributes are ignored.">
		<attribute name="groupName" default="" description="the name of the group. Optional. If not specified all groups in data file are selected." />
		<attribute name="dataFile" description="The data file used as input for this admin CLI task. Required." />
		<attribute name="remotePropsFile" default="${remotePropsFile}" description="The remote properties file. Optional. By default the value of the property remotePropsFile defined will be used." />
		<attribute name="action" default="delete" description="action to pass to admin task. Default is delete." />
		<attribute name="overwrite" default="true" description="overwrite flag passed to the admin task. Optional. Default is true" />
		<attribute name="merge" default="true" description="merge flag passed to the admin task. Optional. Default is true" />
		<attribute name="createIfNotExists" default="true" description="The createIfNotExists flag passed to the admin task. Optional. Default is true" />
		<attribute name="force" default="false" description="force flag passed to the admin task. Optional. Default is false" />
		<attribute name="failOnError" default="true" description="failOnError flag passed to the admin task. Optional. Default is true" />
		<attribute name="objectSelector" default="" description="The object selector to be used with the admin task. Optional. By default, the macrodef tries to construct the objectselector based on the other input attributes. If this is specified, most other attributes like envName etc will be ignored." />
		<sequential>
			<echo>${line.separator}${line.separator}</echo>
			<echo>Deleting Group using:</echo>
			<echo>groupName: @{groupName}</echo>
			<echo>dataFile: @{dataFile}</echo>
			<echo>remotePropsFile: @{remotePropsFile}</echo>
			<echo>objectSelector: @{objectSelector}</echo>
			<echo>action: @{action}</echo>
			<echo>overwrite: @{overwrite}</echo>
			<echo>merge: @{merge}</echo>
			<echo>createIfNotExists: @{createIfNotExists}</echo>
			<echo>force: @{force}</echo>
			<echo>failOnError: @{failOnError}</echo>

			<if>
				<not>
					<equals arg1="@{objectSelector}" arg2="" />
				</not>
				<then>
					<var name="obj.sel" value="@{objectSelector}" />
				</then>
				<elseif>
					<not>
						<equals arg1="@{groupName}" arg2="" />
					</not>
					<then>
						<var name="obj.sel" value="//Group[@name='@{groupName}']" />
					</then>
				</elseif>
				<else>
					<var name="obj.sel" value="//Group" />
				</else>
			</if>
			<echo message="Invoking Admin task using the objectselector: ${obj.sel}" />
			<AMXAdminTask remote="true" propsFile="@{remotePropsFile}" action="@{action}" dataFile="@{dataFile}" objectSelector="${obj.sel}" overwrite="@{overwrite}" merge="@{merge}" createIfNotExists="@{createIfNotExists}" force="@{force}" failOnError="@{failOnError}" />
			<echo>${line.separator}${line.separator}</echo>
		</sequential>
	</macrodef>
	
	<macrodef name="add.user.to.group" backtrace="true" description="Add User to group from specified data file. 
		If objectSelector attribute is specified, the some attributes are ignored.">
		<attribute name="groupName" default="" description="the name of the group. Optional. If not specified all groups in data file are selected." />
		<attribute name="dataFile" description="The data file used as input for this admin CLI task. Required." />
		<attribute name="remotePropsFile" default="${remotePropsFile}" description="The remote properties file. Optional. By default the value of the property remotePropsFile defined will be used." />
		<attribute name="action" default="addUsersToGroup" description="action to pass to admin task." />
		<attribute name="overwrite" default="true" description="overwrite flag passed to the admin task. Optional. Default is true" />
		<attribute name="merge" default="true" description="merge flag passed to the admin task. Optional. Default is true" />
		<attribute name="createIfNotExists" default="true" description="The createIfNotExists flag passed to the admin task. Optional. Default is true" />
		<attribute name="force" default="false" description="force flag passed to the admin task. Optional. Default is false" />
		<attribute name="failOnError" default="true" description="failOnError flag passed to the admin task. Optional. Default is true" />
		<attribute name="objectSelector" default="" description="The object selector to be used with the admin task. Optional. By default, the macrodef tries to construct the objectselector based on the other input attributes. If this is specified, most other attributes like envName etc will be ignored." />
		<sequential>
			<echo>${line.separator}${line.separator}</echo>
			<echo>Add USer to Group using:</echo>
			<echo>groupName: @{groupName}</echo>
			<echo>dataFile: @{dataFile}</echo>
			<echo>remotePropsFile: @{remotePropsFile}</echo>
			<echo>objectSelector: @{objectSelector}</echo>
			<echo>action: @{action}</echo>
			<echo>overwrite: @{overwrite}</echo>
			<echo>merge: @{merge}</echo>
			<echo>createIfNotExists: @{createIfNotExists}</echo>
			<echo>force: @{force}</echo>
			<echo>failOnError: @{failOnError}</echo>

			<if>
				<not>
					<equals arg1="@{objectSelector}" arg2="" />
				</not>
				<then>
					<var name="obj.sel" value="@{objectSelector}" />
				</then>
				<elseif>
					<not>
						<equals arg1="@{groupName}" arg2="" />
					</not>
					<then>
						<var name="obj.sel" value="//Group[@name='@{groupName}']" />
					</then>
				</elseif>
				<else>
					<var name="obj.sel" value="//Group" />
				</else>
			</if>
			<echo message="Invoking Admin task using the objectselector: ${obj.sel}" />
			<AMXAdminTask remote="true" propsFile="@{remotePropsFile}" action="@{action}" dataFile="@{dataFile}" objectSelector="${obj.sel}" overwrite="@{overwrite}" merge="@{merge}" createIfNotExists="@{createIfNotExists}" force="@{force}" failOnError="@{failOnError}" />
			<echo>${line.separator}${line.separator}</echo>
		</sequential>
	</macrodef>
	
	<macrodef name="delete.user.from.group" backtrace="true" description="Delete User from group from specified data file. 
		If objectSelector attribute is specified, the some attributes are ignored.">
		<attribute name="groupName" default="" description="the name of the group. Optional. If not specified all groups in data file are selected." />
		<attribute name="dataFile" description="The data file used as input for this admin CLI task. Required." />
		<attribute name="remotePropsFile" default="${remotePropsFile}" description="The remote properties file. Optional. By default the value of the property remotePropsFile defined will be used." />
		<attribute name="action" default="deleteUsersFromGroup" description="action to pass to admin task." />
		<attribute name="overwrite" default="true" description="overwrite flag passed to the admin task. Optional. Default is true" />
		<attribute name="merge" default="true" description="merge flag passed to the admin task. Optional. Default is true" />
		<attribute name="createIfNotExists" default="true" description="The createIfNotExists flag passed to the admin task. Optional. Default is true" />
		<attribute name="force" default="false" description="force flag passed to the admin task. Optional. Default is false" />
		<attribute name="failOnError" default="true" description="failOnError flag passed to the admin task. Optional. Default is true" />
		<attribute name="objectSelector" default="" description="The object selector to be used with the admin task. Optional. By default, the macrodef tries to construct the objectselector based on the other input attributes. If this is specified, most other attributes like envName etc will be ignored." />
		<sequential>
			<echo>${line.separator}${line.separator}</echo>
			<echo>Delete User from Group using:</echo>
			<echo>groupName: @{groupName}</echo>
			<echo>dataFile: @{dataFile}</echo>
			<echo>remotePropsFile: @{remotePropsFile}</echo>
			<echo>objectSelector: @{objectSelector}</echo>
			<echo>action: @{action}</echo>
			<echo>overwrite: @{overwrite}</echo>
			<echo>merge: @{merge}</echo>
			<echo>createIfNotExists: @{createIfNotExists}</echo>
			<echo>force: @{force}</echo>
			<echo>failOnError: @{failOnError}</echo>

			<if>
				<not>
					<equals arg1="@{objectSelector}" arg2="" />
				</not>
				<then>
					<var name="obj.sel" value="@{objectSelector}" />
				</then>
				<elseif>
					<not>
						<equals arg1="@{groupName}" arg2="" />
					</not>
					<then>
						<var name="obj.sel" value="//Group[@name='@{groupName}']" />
					</then>
				</elseif>
				<else>
					<var name="obj.sel" value="//Group" />
				</else>
			</if>
			<echo message="Invoking Admin task using the objectselector: ${obj.sel}" />
			<AMXAdminTask remote="true" propsFile="@{remotePropsFile}" action="@{action}" dataFile="@{dataFile}" objectSelector="${obj.sel}" overwrite="@{overwrite}" merge="@{merge}" createIfNotExists="@{createIfNotExists}" force="@{force}" failOnError="@{failOnError}" />
			<echo>${line.separator}${line.separator}</echo>
		</sequential>
	</macrodef>
	
	<macrodef name="map.logicalnode.to.node" backtrace="true" description="Mapping logical node to node. 
		If objectSelector attribute is specified, some attributes are ignored.">
		<attribute name="envName" default="" description="the name of the environment. Optional. If not specified all environments in data file are selected." />
		<attribute name="appName" default="" description="The name of the application. Optional. If not specified all the applications will be selected." />
		<attribute name="lNodeName" default="" description="The logical node name. Optional. If not specified all the logical nodes in data file will be selected" />
		<attribute name="nodeName" default="" description="the name of the node. Optional. If not specified all nodes in data file are selected." />
		<attribute name="dataFile" description="The data file used as input for this admin CLI task. Required." />
		<attribute name="remotePropsFile" default="${remotePropsFile}" description="The remote properties file. Optional. By default the value of the property remotePropsFile defined will be used." />
		<attribute name="objectSelector" default="" description="The object selector to be used with the admin task. Optional. By default, the macrodef tries to construct the objectselector based on the other input attributes. If this is specified, most other attributes like envName etc will be ignored." />
		<attribute name="overwrite" default="true" description="overwrite flag passed to the admin task. Optional. Default is true" />
		<attribute name="merge" default="true" description="merge flag passed to the admin task. Optional. Default is true" />
		<attribute name="createIfNotExists" default="true" description="The createIfNotExists flag passed to the admin task. Optional. Default is true" />
		<attribute name="force" default="false" description="force flag passed to the admin task. Optional. Default is false" />
		<attribute name="action" default="add" description="action to pass to admin task. Default is add." />
		<attribute name="failOnError" default="true" description="failOnError flag passed to the admin task. Optional. Default is true" />
		<sequential>
			<echo>${line.separator}${line.separator}</echo>
			<echo>Map an Application Logical Node to actual node in Admin:</echo>
			<echo>envName: @{envName}</echo>
			<echo>lNodeName: @{lNodeName}</echo>
			<echo>nodeName: @{nodeName}</echo>
			<echo>appName: @{appName}</echo>
			<echo>dataFile: @{dataFile}</echo>
			<echo>remotePropsFile: @{remotePropsFile}</echo>
			<echo>objectSelector: @{objectSelector}</echo>
			<echo>overwrite: @{overwrite}</echo>
			<echo>action: @{action}</echo>
			<echo>merge: @{merge}</echo>
			<echo>createIfNotExists: @{createIfNotExists}</echo>
			<echo>force: @{force}</echo>
			<echo>failOnError: @{failOnError}</echo>
			<if>
				<not>
					<equals arg1="@{objectSelector}" arg2="" />
				</not>
				<then>
					<var name="obj.sel" value="@{objectSelector}" />
				</then>
				<else>
					<if>
						<equals arg1="@{envName}" arg2="" />
						<then>
							<var name="obj.sel" value="Environment" />
						</then>
						<else>
							<var name="obj.sel" value="Environment[@name='@{envName}']" />
						</else>
					</if>
					<if>
						<equals arg1="@{appName}" arg2="" />
						<then>
							<var name="obj.sel" value="${obj.sel}//Application" />
						</then>
						<else>
							<var name="obj.sel" value="${obj.sel}//Application[@name='@{appName}']" />
						</else>
					</if>
					<if>
						<equals arg1="@{lNodeName}" arg2="" />
						<then>
							<var name="obj.sel" value="${obj.sel}/LogicalNode" />
						</then>
						<else>
							<var name="obj.sel" value="${obj.sel}/LogicalNode[@name='@{lNodeName}']" />
						</else>
					</if>
					<if>
						<equals arg1="@{nodeName}" arg2="" />
						<then>
							<var name="obj.sel" value="${obj.sel}/Node" />
						</then>
						<else>
							<var name="obj.sel" value="${obj.sel}/Node[@name='@{nodeName}']" />
						</else>
					</if>
				</else>
			</if>
			<echo message="Invoking Admin task using the objectselector: ${obj.sel}" />
			<AMXAdminTask remote="true" propsFile="@{remotePropsFile}" action="@{action}" dataFile="@{dataFile}" objectSelector="${obj.sel}" overwrite="@{overwrite}" merge="@{merge}" createIfNotExists="@{createIfNotExists}" force="@{force}" failOnError="@{failOnError}" />
			<echo>${line.separator}${line.separator}</echo>
		</sequential>
	</macrodef>
	<macrodef name="start.component" backtrace="true" description="Stopping component in application.">
		<attribute name="envName" default="" description="the name of the environment. Optional. If not specified all environments in data file are selected." />
		<attribute name="appName" default="" description="The name of the application. Optional. If not specified all the applications will be selected." />
		<attribute name="componentName" default="" description="name of the componet. Optional. If not specified all the components in dat a file will be selected." />
		<attribute name="nodeName" default="" description="the name of the node. Optional. If not specified all nodes in data file are selected." />
		<attribute name="dataFile" description="The data file used as input for this admin CLI task. Required." />
		<attribute name="remotePropsFile" default="${remotePropsFile}" description="The remote properties file. Optional. By default the value of the property remotePropsFile defined will be used." />
		<attribute name="objectSelector" default="" description="The object selector to be used with the admin task. Optional. By default, the macrodef tries to construct the objectselector based on the other input attributes. If this is specified, most other attributes like envName etc will be ignored." />
		<attribute name="overwrite" default="true" description="overwrite flag passed to the admin task. Optional. Default is true" />
		<attribute name="merge" default="true" description="merge flag passed to the admin task. Optional. Default is true" />
		<attribute name="createIfNotExists" default="true" description="The createIfNotExists flag passed to the admin task. Optional. Default is true" />
		<attribute name="force" default="false" description="force flag passed to the admin task. Optional. Default is false" />
		<attribute name="action" default="start" description="action to pass to admin task. Default is add." />
		<attribute name="failOnError" default="true" description="failOnError flag passed to the admin task. Optional. Default is true" />
		<sequential>
			<echo>${line.separator}${line.separator}</echo>
			<echo>Start component to a node explicitly:</echo>
			<echo>envName: @{envName}</echo>
			<echo>componentName: @{componentName}</echo>
			<echo>nodeName: @{nodeName}</echo>
			<echo>appName: @{appName}</echo>
			<echo>dataFile: @{dataFile}</echo>
			<echo>remotePropsFile: @{remotePropsFile}</echo>
			<echo>objectSelector: @{objectSelector}</echo>
			<echo>overwrite: @{overwrite}</echo>
			<echo>action: @{action}</echo>
			<echo>merge: @{merge}</echo>
			<echo>createIfNotExists: @{createIfNotExists}</echo>
			<echo>force: @{force}</echo>
			<echo>failOnError: @{failOnError}</echo>
			<if>
				<not>
					<equals arg1="@{objectSelector}" arg2="" />
				</not>
				<then>
					<var name="obj.sel" value="@{objectSelector}" />
				</then>
				<else>
					<if>
						<equals arg1="@{envName}" arg2="" />
						<then>
							<var name="obj.sel" value="Environment" />
						</then>
						<else>
							<var name="obj.sel" value="Environment[@name='@{envName}']" />
						</else>
					</if>
					<if>
						<equals arg1="@{appName}" arg2="" />
						<then>
							<var name="obj.sel" value="${obj.sel}//Application" />
						</then>
						<else>
							<var name="obj.sel" value="${obj.sel}//Application[@name='@{appName}']" />
						</else>
					</if>
					<if>
						<equals arg1="@{componentName}" arg2="" />
						<then>
							<var name="obj.sel" value="${obj.sel}/Component" />
						</then>
						<else>
							<var name="obj.sel" value="${obj.sel}/Component[@name='@{componentName}']" />
						</else>
					</if>
					<if>
						<equals arg1="@{nodeName}" arg2="" />
						<then>
							<var name="obj.sel" value="${obj.sel}/Node" />
						</then>
						<else>
							<var name="obj.sel" value="${obj.sel}/Node[@name='@{nodeName}']" />
						</else>
					</if>
				</else>
			</if>
			<echo message="Invoking Admin task using the objectselector: ${obj.sel}" />
			<AMXAdminTask remote="true" propsFile="@{remotePropsFile}" action="@{action}" dataFile="@{dataFile}" objectSelector="${obj.sel}" overwrite="@{overwrite}" merge="@{merge}" createIfNotExists="@{createIfNotExists}" force="@{force}" failOnError="@{failOnError}" />
			<echo>${line.separator}${line.separator}</echo>
		</sequential>
	</macrodef>
	
	<macrodef name="stop.component" backtrace="true" description="Stopping component in application.">
		<attribute name="envName" default="" description="the name of the environment. Optional. If not specified all environments in data file are selected." />
		<attribute name="appName" default="" description="The name of the application. Optional. If not specified all the applications will be selected." />
		<attribute name="componentName" default="" description="name of the componet. Optional. If not specified all the components in dat a file will be selected." />
		<attribute name="nodeName" default="" description="the name of the node. Optional. If not specified all nodes in data file are selected." />
		<attribute name="dataFile" description="The data file used as input for this admin CLI task. Required." />
		<attribute name="remotePropsFile" default="${remotePropsFile}" description="The remote properties file. Optional. By default the value of the property remotePropsFile defined will be used." />
		<attribute name="objectSelector" default="" description="The object selector to be used with the admin task. Optional. By default, the macrodef tries to construct the objectselector based on the other input attributes. If this is specified, most other attributes like envName etc will be ignored." />
		<attribute name="overwrite" default="true" description="overwrite flag passed to the admin task. Optional. Default is true" />
		<attribute name="merge" default="true" description="merge flag passed to the admin task. Optional. Default is true" />
		<attribute name="createIfNotExists" default="true" description="The createIfNotExists flag passed to the admin task. Optional. Default is true" />
		<attribute name="force" default="false" description="force flag passed to the admin task. Optional. Default is false" />
		<attribute name="action" default="stop" description="action to pass to admin task. Default is add." />
		<attribute name="failOnError" default="true" description="failOnError flag passed to the admin task. Optional. Default is true" />
		<sequential>
			<echo>${line.separator}${line.separator}</echo>
			<echo>Stop component to a node explicitly:</echo>
			<echo>envName: @{envName}</echo>
			<echo>componentName: @{componentName}</echo>
			<echo>nodeName: @{nodeName}</echo>
			<echo>appName: @{appName}</echo>
			<echo>dataFile: @{dataFile}</echo>
			<echo>remotePropsFile: @{remotePropsFile}</echo>
			<echo>objectSelector: @{objectSelector}</echo>
			<echo>overwrite: @{overwrite}</echo>
			<echo>action: @{action}</echo>
			<echo>merge: @{merge}</echo>
			<echo>createIfNotExists: @{createIfNotExists}</echo>
			<echo>force: @{force}</echo>
			<echo>failOnError: @{failOnError}</echo>
			<if>
				<not>
					<equals arg1="@{objectSelector}" arg2="" />
				</not>
				<then>
					<var name="obj.sel" value="@{objectSelector}" />
				</then>
				<else>
					<if>
						<equals arg1="@{envName}" arg2="" />
						<then>
							<var name="obj.sel" value="Environment" />
						</then>
						<else>
							<var name="obj.sel" value="Environment[@name='@{envName}']" />
						</else>
					</if>
					<if>
						<equals arg1="@{appName}" arg2="" />
						<then>
							<var name="obj.sel" value="${obj.sel}//Application" />
						</then>
						<else>
							<var name="obj.sel" value="${obj.sel}//Application[@name='@{appName}']" />
						</else>
					</if>
					<if>
						<equals arg1="@{componentName}" arg2="" />
						<then>
							<var name="obj.sel" value="${obj.sel}/Component" />
						</then>
						<else>
							<var name="obj.sel" value="${obj.sel}/Component[@name='@{componentName}']" />
						</else>
					</if>
					<if>
						<equals arg1="@{nodeName}" arg2="" />
						<then>
							<var name="obj.sel" value="${obj.sel}/Node" />
						</then>
						<else>
							<var name="obj.sel" value="${obj.sel}/Node[@name='@{nodeName}']" />
						</else>
					</if>
				</else>
			</if>
			<echo message="Invoking Admin task using the objectselector: ${obj.sel}" />
			<AMXAdminTask remote="true" propsFile="@{remotePropsFile}" action="@{action}" dataFile="@{dataFile}" objectSelector="${obj.sel}" overwrite="@{overwrite}" merge="@{merge}" createIfNotExists="@{createIfNotExists}" force="@{force}" failOnError="@{failOnError}" />
			<echo>${line.separator}${line.separator}</echo>
		</sequential>
	</macrodef>
	

	<macrodef name="map.component.to.node" backtrace="true" description="Mapping application component to node.">
		<attribute name="envName" default="" description="the name of the environment. Optional. If not specified all environments in data file are selected." />
		<attribute name="appName" default="" description="The name of the application. Optional. If not specified all the applications will be selected." />
		<attribute name="componentName" default="" description="name of the componet. Optional. If not specified all the components in dat a file will be selected." />
		<attribute name="nodeName" default="" description="the name of the node. Optional. If not specified all nodes in data file are selected." />
		<attribute name="dataFile" description="The data file used as input for this admin CLI task. Required." />
		<attribute name="remotePropsFile" default="${remotePropsFile}" description="The remote properties file. Optional. By default the value of the property remotePropsFile defined will be used." />
		<attribute name="objectSelector" default="" description="The object selector to be used with the admin task. Optional. By default, the macrodef tries to construct the objectselector based on the other input attributes. If this is specified, most other attributes like envName etc will be ignored." />
		<attribute name="overwrite" default="true" description="overwrite flag passed to the admin task. Optional. Default is true" />
		<attribute name="merge" default="true" description="merge flag passed to the admin task. Optional. Default is true" />
		<attribute name="createIfNotExists" default="true" description="The createIfNotExists flag passed to the admin task. Optional. Default is true" />
		<attribute name="force" default="false" description="force flag passed to the admin task. Optional. Default is false" />
		<attribute name="action" default="add" description="action to pass to admin task. Default is add." />
		<attribute name="failOnError" default="true" description="failOnError flag passed to the admin task. Optional. Default is true" />
		<sequential>
			<echo>${line.separator}${line.separator}</echo>
			<echo>Map an application component to a node explicitly:</echo>
			<echo>envName: @{envName}</echo>
			<echo>componentName: @{componentName}</echo>
			<echo>nodeName: @{nodeName}</echo>
			<echo>appName: @{appName}</echo>
			<echo>dataFile: @{dataFile}</echo>
			<echo>remotePropsFile: @{remotePropsFile}</echo>
			<echo>objectSelector: @{objectSelector}</echo>
			<echo>overwrite: @{overwrite}</echo>
			<echo>action: @{action}</echo>
			<echo>merge: @{merge}</echo>
			<echo>createIfNotExists: @{createIfNotExists}</echo>
			<echo>force: @{force}</echo>
			<echo>failOnError: @{failOnError}</echo>
			<if>
				<not>
					<equals arg1="@{objectSelector}" arg2="" />
				</not>
				<then>
					<var name="obj.sel" value="@{objectSelector}" />
				</then>
				<else>
					<if>
						<equals arg1="@{envName}" arg2="" />
						<then>
							<var name="obj.sel" value="Environment" />
						</then>
						<else>
							<var name="obj.sel" value="Environment[@name='@{envName}']" />
						</else>
					</if>
					<if>
						<equals arg1="@{appName}" arg2="" />
						<then>
							<var name="obj.sel" value="${obj.sel}//Application" />
						</then>
						<else>
							<var name="obj.sel" value="${obj.sel}//Application[@name='@{appName}']" />
						</else>
					</if>
					<if>
						<equals arg1="@{componentName}" arg2="" />
						<then>
							<var name="obj.sel" value="${obj.sel}/Component" />
						</then>
						<else>
							<var name="obj.sel" value="${obj.sel}/Component[@name='@{componentName}']" />
						</else>
					</if>
					<if>
						<equals arg1="@{nodeName}" arg2="" />
						<then>
							<var name="obj.sel" value="${obj.sel}/Node" />
						</then>
						<else>
							<var name="obj.sel" value="${obj.sel}/Node[@name='@{nodeName}']" />
						</else>
					</if>
				</else>
			</if>
			<echo message="Invoking Admin task using the objectselector: ${obj.sel}" />
			<AMXAdminTask remote="true" propsFile="@{remotePropsFile}" action="@{action}" dataFile="@{dataFile}" objectSelector="${obj.sel}" overwrite="@{overwrite}" merge="@{merge}" createIfNotExists="@{createIfNotExists}" force="@{force}" failOnError="@{failOnError}" />
			<echo>${line.separator}${line.separator}</echo>
		</sequential>
	</macrodef>


	<macrodef name="unmap.component.from.node" backtrace="true" description="Unmapping/Deleting application component from node.">
		<attribute name="envName" default="" description="the name of the environment. Optional. If not specified all environments in data file are selected." />
		<attribute name="appName" default="" description="The name of the application. Optional. If not specified all the applications will be selected." />
		<attribute name="componentName" default="" description="name of the componet. Optional. If not specified all the components in dat a file will be selected." />
		<attribute name="nodeName" default="" description="the name of the node. Optional. If not specified all nodes in data file are selected." />
		<attribute name="dataFile" description="The data file used as input for this admin CLI task. Required." />
		<attribute name="remotePropsFile" default="${remotePropsFile}" description="The remote properties file. Optional. By default the value of the property remotePropsFile defined will be used." />
		<attribute name="objectSelector" default="" description="The object selector to be used with the admin task. Optional. By default, the macrodef tries to construct the objectselector based on the other input attributes. If this is specified, most other attributes like envName etc will be ignored." />
		<attribute name="overwrite" default="true" description="overwrite flag passed to the admin task. Optional. Default is true" />
		<attribute name="merge" default="true" description="merge flag passed to the admin task. Optional. Default is true" />
		<attribute name="createIfNotExists" default="true" description="The createIfNotExists flag passed to the admin task. Optional. Default is true" />
		<attribute name="force" default="false" description="force flag passed to the admin task. Optional. Default is false" />
		<attribute name="action" default="delete" description="action to pass to admin task. Default is delete." />
		<attribute name="failOnError" default="true" description="failOnError flag passed to the admin task. Optional. Default is true" />
		<sequential>
			<echo>${line.separator}${line.separator}</echo>
			<echo>Unmap/Delete an application component from a node explicitly:</echo>
			<echo>envName: @{envName}</echo>
			<echo>componentName: @{componentName}</echo>
			<echo>nodeName: @{nodeName}</echo>
			<echo>appName: @{appName}</echo>
			<echo>dataFile: @{dataFile}</echo>
			<echo>remotePropsFile: @{remotePropsFile}</echo>
			<echo>objectSelector: @{objectSelector}</echo>
			<echo>overwrite: @{overwrite}</echo>
			<echo>action: @{action}</echo>
			<echo>merge: @{merge}</echo>
			<echo>createIfNotExists: @{createIfNotExists}</echo>
			<echo>force: @{force}</echo>
			<echo>failOnError: @{failOnError}</echo>
			<if>
				<not>
					<equals arg1="@{objectSelector}" arg2="" />
				</not>
				<then>
					<var name="obj.sel" value="@{objectSelector}" />
				</then>
				<else>
					<if>
						<equals arg1="@{envName}" arg2="" />
						<then>
							<var name="obj.sel" value="Environment" />
						</then>
						<else>
							<var name="obj.sel" value="Environment[@name='@{envName}']" />
						</else>
					</if>
					<if>
						<equals arg1="@{appName}" arg2="" />
						<then>
							<var name="obj.sel" value="${obj.sel}//Application" />
						</then>
						<else>
							<var name="obj.sel" value="${obj.sel}//Application[@name='@{appName}']" />
						</else>
					</if>
					<if>
						<equals arg1="@{componentName}" arg2="" />
						<then>
							<var name="obj.sel" value="${obj.sel}/Component" />
						</then>
						<else>
							<var name="obj.sel" value="${obj.sel}/Component[@name='@{componentName}']" />
						</else>
					</if>
					<if>
						<equals arg1="@{nodeName}" arg2="" />
						<then>
							<var name="obj.sel" value="${obj.sel}/Node" />
						</then>
						<else>
							<var name="obj.sel" value="${obj.sel}/Node[@name='@{nodeName}']" />
						</else>
					</if>
				</else>
			</if>
			<echo message="Invoking Admin task using the objectselector: ${obj.sel}" />
			<AMXAdminTask remote="true" propsFile="@{remotePropsFile}" action="@{action}" dataFile="@{dataFile}" objectSelector="${obj.sel}" overwrite="@{overwrite}" merge="@{merge}" createIfNotExists="@{createIfNotExists}" force="@{force}" failOnError="@{failOnError}" />
			<echo>${line.separator}${line.separator}</echo>
		</sequential>
	</macrodef>

	<macrodef name="map.service.binding.to.node" backtrace="true" description="Mapping application service binding to node.">
		<attribute name="envName" default="" description="the name of the environment. Optional. If not specified all environments in data file are selected." />
		<attribute name="appName" default="" description="The name of the application. Optional. If not specified all the applications will be selected." />
		<attribute name="serviceName" default="" description="The service name. Optional. If not specified all the services for the application in data file are selected." />
		<attribute name="bindingName" default="" description="The name of the binding. Optional. If not selected all the bindings in data file will be selected." />
		<attribute name="nodeName" default="" description="the name of the node. Optional. If not specified all nodes in data file are selected." />
		<attribute name="dataFile" description="The data file used as input for this admin CLI task. Required." />
		<attribute name="remotePropsFile" default="${remotePropsFile}" description="The remote properties file. Optional. By default the value of the property remotePropsFile defined will be used." />
		<attribute name="objectSelector" default="" description="The object selector to be used with the admin task. Optional. By default, the macrodef tries to construct the objectselector based on the other input attributes. If this is specified, most other attributes like envName etc will be ignored." />
		<attribute name="overwrite" default="true" description="overwrite flag passed to the admin task. Optional. Default is true" />
		<attribute name="merge" default="true" description="merge flag passed to the admin task. Optional. Default is true" />
		<attribute name="createIfNotExists" default="true" description="The createIfNotExists flag passed to the admin task. Optional. Default is true" />
		<attribute name="force" default="false" description="force flag passed to the admin task. Optional. Default is false" />
		<attribute name="action" default="add" description="action to pass to admin task. Default is add." />
		<attribute name="failOnError" default="true" description="failOnError flag passed to the admin task. Optional. Default is true" />
		<sequential>
			<echo>${line.separator}${line.separator}</echo>
			<echo>Map an application service to a node explicitly:</echo>
			<echo>envName: @{envName}</echo>
			<echo>appName: @{appName}</echo>
			<echo>serviceName: @{serviceName}</echo>
			<echo>bindingName: @{bindingName}</echo>
			<echo>nodeName: @{nodeName}</echo>
			<echo>dataFile: @{dataFile}</echo>
			<echo>remotePropsFile: @{remotePropsFile}</echo>
			<echo>objectSelector: @{objectSelector}</echo>
			<echo>overwrite: @{overwrite}</echo>
			<echo>action: @{action}</echo>
			<echo>merge: @{merge}</echo>
			<echo>createIfNotExists: @{createIfNotExists}</echo>
			<echo>force: @{force}</echo>
			<echo>failOnError: @{failOnError}</echo>
			<if>
				<not>
					<equals arg1="@{objectSelector}" arg2="" />
				</not>
				<then>
					<var name="obj.sel" value="@{objectSelector}" />
				</then>
				<else>
					<if>
						<equals arg1="@{envName}" arg2="" />
						<then>
							<var name="obj.sel" value="Environment" />
						</then>
						<else>
							<var name="obj.sel" value="Environment[@name='@{envName}']" />
						</else>
					</if>
					<if>
						<equals arg1="@{appName}" arg2="" />
						<then>
							<var name="obj.sel" value="${obj.sel}//Application" />
						</then>
						<else>
							<var name="obj.sel" value="${obj.sel}//Application[@name='@{appName}']" />
						</else>
					</if>
					<if>
						<equals arg1="@{serviceName}" arg2="" />
						<then>
							<var name="obj.sel" value="${obj.sel}/PromotedService" />
						</then>
						<else>
							<var name="obj.sel" value="${obj.sel}/PromotedService[@name='@{serviceName}']" />
						</else>
					</if>
					<if>
						<equals arg1="@{bindingName}" arg2="" />
						<then>
							<var name="obj.sel" value="${obj.sel}/Binding" />
						</then>
						<else>
							<var name="obj.sel" value="${obj.sel}/Binding[@name='@{bindingName}']" />
						</else>
					</if>
					<if>
						<equals arg1="@{nodeName}" arg2="" />
						<then>
							<var name="obj.sel" value="${obj.sel}/Node" />
						</then>
						<else>
							<var name="obj.sel" value="${obj.sel}/Node[@name='@{nodeName}']" />
						</else>
					</if>
				</else>
			</if>
			<echo message="Invoking Admin task using the objectselector: ${obj.sel}" />
			<AMXAdminTask remote="true" propsFile="@{remotePropsFile}" action="@{action}" dataFile="@{dataFile}" objectSelector="${obj.sel}" overwrite="@{overwrite}" merge="@{merge}" createIfNotExists="@{createIfNotExists}" force="@{force}" failOnError="@{failOnError}" />
			<echo>${line.separator}${line.separator}</echo>
		</sequential>
	</macrodef>



	<macrodef name="map.reference.binding.to.node" backtrace="true" description="Mapping application reference binding to node.">
		<attribute name="envName" default="" description="the name of the environment. Optional. If not specified all environments in data file are selected." />
		<attribute name="appName" default="" description="The name of the application. Optional. If not specified all the applications will be selected." />
		<attribute name="referenceName" default="" description="The reference name. Optional. If not specified all the references for the application in data file will be selected." />
		<attribute name="bindingName" default="" description="The name of the binding. Optional. If not selected all the bindings in data file will be selected." />
		<attribute name="nodeName" default="" description="the name of the node. Optional. If not specified all nodes in data file are selected." />
		<attribute name="dataFile" description="The data file used as input for this admin CLI task. Required." />
		<attribute name="remotePropsFile" default="${remotePropsFile}" description="The remote properties file. Optional. By default the value of the property remotePropsFile defined will be used." />
		<attribute name="objectSelector" default="" description="The object selector to be used with the admin task. Optional. By default, the macrodef tries to construct the objectselector based on the other input attributes. If this is specified, most other attributes like envName etc will be ignored." />
		<attribute name="overwrite" default="true" description="overwrite flag passed to the admin task. Optional. Default is true" />
		<attribute name="merge" default="true" description="merge flag passed to the admin task. Optional. Default is true" />
		<attribute name="createIfNotExists" default="true" description="The createIfNotExists flag passed to the admin task. Optional. Default is true" />
		<attribute name="force" default="false" description="force flag passed to the admin task. Optional. Default is false" />
		<attribute name="action" default="add" description="action to pass to admin task. Default is add." />
		<attribute name="failOnError" default="true" description="failOnError flag passed to the admin task. Optional. Default is true" />
		<sequential>
			<echo>${line.separator}${line.separator}</echo>
			<echo>Map an application reference to a node explicitly:</echo>
			<echo>envName: @{envName}</echo>
			<echo>appName: @{appName}</echo>
			<echo>referenceName: @{referenceName}</echo>
			<echo>bindingName: @{bindingName}</echo>
			<echo>nodeName: @{nodeName}</echo>
			<echo>dataFile: @{dataFile}</echo>
			<echo>remotePropsFile: @{remotePropsFile}</echo>
			<echo>objectSelector: @{objectSelector}</echo>
			<echo>overwrite: @{overwrite}</echo>
			<echo>action: @{action}</echo>
			<echo>merge: @{merge}</echo>
			<echo>createIfNotExists: @{createIfNotExists}</echo>
			<echo>force: @{force}</echo>
			<echo>failOnError: @{failOnError}</echo>
			<if>
				<not>
					<equals arg1="@{objectSelector}" arg2="" />
				</not>
				<then>
					<var name="obj.sel" value="@{objectSelector}" />
				</then>
				<else>
					<if>
						<equals arg1="@{envName}" arg2="" />
						<then>
							<var name="obj.sel" value="Environment" />
						</then>
						<else>
							<var name="obj.sel" value="Environment[@name='@{envName}']" />
						</else>
					</if>
					<if>
						<equals arg1="@{appName}" arg2="" />
						<then>
							<var name="obj.sel" value="${obj.sel}//Application" />
						</then>
						<else>
							<var name="obj.sel" value="${obj.sel}//Application[@name='@{appName}']" />
						</else>
					</if>
					<if>
						<equals arg1="@{referenceName}" arg2="" />
						<then>
							<var name="obj.sel" value="${obj.sel}/PromotedReference" />
						</then>
						<else>
							<var name="obj.sel" value="${obj.sel}/PromotedReference[@name='@{referenceName}']" />
						</else>
					</if>
					<if>
						<equals arg1="@{bindingName}" arg2="" />
						<then>
							<var name="obj.sel" value="${obj.sel}/Binding" />
						</then>
						<else>
							<var name="obj.sel" value="${obj.sel}/Binding[@name='@{bindingName}']" />
						</else>
					</if>
					<if>
						<equals arg1="@{nodeName}" arg2="" />
						<then>
							<var name="obj.sel" value="${obj.sel}/Node" />
						</then>
						<else>
							<var name="obj.sel" value="${obj.sel}/Node[@name='@{nodeName}']" />
						</else>
					</if>
				</else>
			</if>
			<echo message="Invoking Admin task using the objectselector: ${obj.sel}" />
			<AMXAdminTask remote="true" propsFile="@{remotePropsFile}" action="@{action}" dataFile="@{dataFile}" objectSelector="${obj.sel}" overwrite="@{overwrite}" merge="@{merge}" createIfNotExists="@{createIfNotExists}" force="@{force}" failOnError="@{failOnError}" />
			<echo>${line.separator}${line.separator}</echo>
		</sequential>
	</macrodef>




	<macrodef name="create.service.binding" backtrace="true" description="Create service binding for an application.">
		<attribute name="envName" default="" description="the name of the environment. Optional. If not specified all environments in data file are selected." />
		<attribute name="appName" default="" description="The name of the application. Optional. If not specified all the applications will be selected." />
		<attribute name="serviceName" default="" description="The service name. Optional. If not specified all the services for the application in data file are selected." />
		<attribute name="bindingName" default="" description="The name of the binding. Optional. If not selected all the bindings in data file will be selected." />
		<attribute name="dataFile" description="The data file used as input for this admin CLI task. Required." />
		<attribute name="remotePropsFile" default="${remotePropsFile}" description="The remote properties file. Optional. By default the value of the property remotePropsFile defined will be used." />
		<attribute name="objectSelector" default="" description="The object selector to be used with the admin task. Optional. By default, the macrodef tries to construct the objectselector based on the other input attributes. If this is specified, most other attributes like envName etc will be ignored." />
		<attribute name="overwrite" default="true" description="overwrite flag passed to the admin task. Optional. Default is true" />
		<attribute name="merge" default="true" description="merge flag passed to the admin task. Optional. Default is true" />
		<attribute name="createIfNotExists" default="true" description="The createIfNotExists flag passed to the admin task. Optional. Default is true" />
		<attribute name="force" default="false" description="force flag passed to the admin task. Optional. Default is false" />
		<attribute name="action" default="add" description="action to pass to admin task. Default is add." />
		<attribute name="failOnError" default="true" description="failOnError flag passed to the admin task. Optional. Default is true" />
		<sequential>
			<echo>${line.separator}${line.separator}</echo>
			<echo>Create service binding for an application using:</echo>
			<echo>envName: @{envName}</echo>
			<echo>appName: @{appName}</echo>
			<echo>serviceName: @{serviceName}</echo>
			<echo>bindingName: @{bindingName}</echo>
			<echo>dataFile: @{dataFile}</echo>
			<echo>remotePropsFile: @{remotePropsFile}</echo>
			<echo>objectSelector: @{objectSelector}</echo>
			<echo>overwrite: @{overwrite}</echo>
			<echo>action: @{action}</echo>
			<echo>merge: @{merge}</echo>
			<echo>createIfNotExists: @{createIfNotExists}</echo>
			<echo>force: @{force}</echo>
			<echo>failOnError: @{failOnError}</echo>
			<if>
				<not>
					<equals arg1="@{objectSelector}" arg2="" />
				</not>
				<then>
					<var name="obj.sel" value="@{objectSelector}" />
				</then>
				<else>
					<if>
						<equals arg1="@{envName}" arg2="" />
						<then>
							<var name="obj.sel" value="Environment" />
						</then>
						<else>
							<var name="obj.sel" value="Environment[@name='@{envName}']" />
						</else>
					</if>
					<if>
						<equals arg1="@{appName}" arg2="" />
						<then>
							<var name="obj.sel" value="${obj.sel}//Application" />
						</then>
						<else>
							<var name="obj.sel" value="${obj.sel}//Application[@name='@{appName}']" />
						</else>
					</if>
					<if>
						<equals arg1="@{serviceName}" arg2="" />
						<then>
							<var name="obj.sel" value="${obj.sel}/PromotedService" />
						</then>
						<else>
							<var name="obj.sel" value="${obj.sel}/PromotedService[@name='@{serviceName}']" />
						</else>
					</if>
					<if>
						<equals arg1="@{bindingName}" arg2="" />
						<then>
							<var name="obj.sel" value="${obj.sel}/Binding" />
						</then>
						<else>
							<var name="obj.sel" value="${obj.sel}/Binding[@name='@{bindingName}']" />
						</else>
					</if>
				</else>
			</if>
			<echo message="Invoking Admin task using the objectselector: ${obj.sel}" />
			<AMXAdminTask remote="true" propsFile="@{remotePropsFile}" action="@{action}" dataFile="@{dataFile}" objectSelector="${obj.sel}" overwrite="@{overwrite}" merge="@{merge}" createIfNotExists="@{createIfNotExists}" force="@{force}" failOnError="@{failOnError}" />
			<echo>${line.separator}${line.separator}</echo>
		</sequential>
	</macrodef>


	<macrodef name="update.service.binding" backtrace="true" description="Update/Edit service binding for an application.">
		<attribute name="envName" default="" description="the name of the environment. Optional. If not specified all environments in data file are selected." />
		<attribute name="appName" default="" description="The name of the application. Optional. If not specified all the applications will be selected." />
		<attribute name="serviceName" default="" description="The service name. Optional. If not specified all the services for the application in data file are selected." />
		<attribute name="bindingName" default="" description="The name of the binding. Optional. If not selected all the bindings in data file will be selected." />
		<attribute name="dataFile" description="The data file used as input for this admin CLI task. Required." />
		<attribute name="remotePropsFile" default="${remotePropsFile}" description="The remote properties file. Optional. By default the value of the property remotePropsFile defined will be used." />
		<attribute name="objectSelector" default="" description="The object selector to be used with the admin task. Optional. By default, the macrodef tries to construct the objectselector based on the other input attributes. If this is specified, most other attributes like envName etc will be ignored." />
		<attribute name="overwrite" default="true" description="overwrite flag passed to the admin task. Optional. Default is true" />
		<attribute name="merge" default="true" description="merge flag passed to the admin task. Optional. Default is true" />
		<attribute name="createIfNotExists" default="true" description="The createIfNotExists flag passed to the admin task. Optional. Default is true" />
		<attribute name="force" default="false" description="force flag passed to the admin task. Optional. Default is false" />
		<attribute name="action" default="edit" description="action to pass to admin task. Default is edit." />
		<attribute name="failOnError" default="true" description="failOnError flag passed to the admin task. Optional. Default is true" />
		<sequential>
			<echo>${line.separator}${line.separator}</echo>
			<echo>Update/Edit service binding for an application using:</echo>
			<echo>envName: @{envName}</echo>
			<echo>appName: @{appName}</echo>
			<echo>serviceName: @{serviceName}</echo>
			<echo>bindingName: @{bindingName}</echo>
			<echo>dataFile: @{dataFile}</echo>
			<echo>remotePropsFile: @{remotePropsFile}</echo>
			<echo>objectSelector: @{objectSelector}</echo>
			<echo>overwrite: @{overwrite}</echo>
			<echo>action: @{action}</echo>
			<echo>merge: @{merge}</echo>
			<echo>createIfNotExists: @{createIfNotExists}</echo>
			<echo>force: @{force}</echo>
			<echo>failOnError: @{failOnError}</echo>
			<if>
				<not>
					<equals arg1="@{objectSelector}" arg2="" />
				</not>
				<then>
					<var name="obj.sel" value="@{objectSelector}" />
				</then>
				<else>
					<if>
						<equals arg1="@{envName}" arg2="" />
						<then>
							<var name="obj.sel" value="Environment" />
						</then>
						<else>
							<var name="obj.sel" value="Environment[@name='@{envName}']" />
						</else>
					</if>
					<if>
						<equals arg1="@{appName}" arg2="" />
						<then>
							<var name="obj.sel" value="${obj.sel}//Application" />
						</then>
						<else>
							<var name="obj.sel" value="${obj.sel}//Application[@name='@{appName}']" />
						</else>
					</if>
					<if>
						<equals arg1="@{serviceName}" arg2="" />
						<then>
							<var name="obj.sel" value="${obj.sel}/PromotedService" />
						</then>
						<else>
							<var name="obj.sel" value="${obj.sel}/PromotedService[@name='@{serviceName}']" />
						</else>
					</if>
					<if>
						<equals arg1="@{bindingName}" arg2="" />
						<then>
							<var name="obj.sel" value="${obj.sel}/Binding" />
						</then>
						<else>
							<var name="obj.sel" value="${obj.sel}/Binding[@name='@{bindingName}']" />
						</else>
					</if>
				</else>
			</if>
			<echo message="Invoking Admin task using the objectselector: ${obj.sel}" />
			<AMXAdminTask remote="true" propsFile="@{remotePropsFile}" action="@{action}" dataFile="@{dataFile}" objectSelector="${obj.sel}" overwrite="@{overwrite}" merge="@{merge}" createIfNotExists="@{createIfNotExists}" force="@{force}" failOnError="@{failOnError}" />
			<echo>${line.separator}${line.separator}</echo>
		</sequential>
	</macrodef>


	<macrodef name="delete.service.binding" backtrace="true" description="Delete service binding for an application.">
		<attribute name="envName" default="" description="the name of the environment. Optional. If not specified all environments in data file are selected." />
		<attribute name="appName" default="" description="The name of the application. Optional. If not specified all the applications will be selected." />
		<attribute name="serviceName" default="" description="The service name. Optional. If not specified all the services for the application in data file are selected." />
		<attribute name="bindingName" default="" description="The name of the binding. Optional. If not selected all the bindings in data file will be selected." />
		<attribute name="dataFile" description="The data file used as input for this admin CLI task. Required." />
		<attribute name="remotePropsFile" default="${remotePropsFile}" description="The remote properties file. Optional. By default the value of the property remotePropsFile defined will be used." />
		<attribute name="objectSelector" default="" description="The object selector to be used with the admin task. Optional. By default, the macrodef tries to construct the objectselector based on the other input attributes. If this is specified, most other attributes like envName etc will be ignored." />
		<attribute name="overwrite" default="true" description="overwrite flag passed to the admin task. Optional. Default is true" />
		<attribute name="merge" default="true" description="merge flag passed to the admin task. Optional. Default is true" />
		<attribute name="createIfNotExists" default="true" description="The createIfNotExists flag passed to the admin task. Optional. Default is true" />
		<attribute name="force" default="false" description="force flag passed to the admin task. Optional. Default is false" />
		<attribute name="action" default="delete" description="action to pass to admin task. Default is delete." />
		<attribute name="failOnError" default="true" description="failOnError flag passed to the admin task. Optional. Default is true" />
		<sequential>
			<echo>${line.separator}${line.separator}</echo>
			<echo>Delete service binding for an application using:</echo>
			<echo>envName: @{envName}</echo>
			<echo>appName: @{appName}</echo>
			<echo>serviceName: @{serviceName}</echo>
			<echo>bindingName: @{bindingName}</echo>
			<echo>dataFile: @{dataFile}</echo>
			<echo>remotePropsFile: @{remotePropsFile}</echo>
			<echo>objectSelector: @{objectSelector}</echo>
			<echo>overwrite: @{overwrite}</echo>
			<echo>action: @{action}</echo>
			<echo>merge: @{merge}</echo>
			<echo>createIfNotExists: @{createIfNotExists}</echo>
			<echo>force: @{force}</echo>
			<echo>failOnError: @{failOnError}</echo>
			<if>
				<not>
					<equals arg1="@{objectSelector}" arg2="" />
				</not>
				<then>
					<var name="obj.sel" value="@{objectSelector}" />
				</then>
				<else>
					<if>
						<equals arg1="@{envName}" arg2="" />
						<then>
							<var name="obj.sel" value="Environment" />
						</then>
						<else>
							<var name="obj.sel" value="Environment[@name='@{envName}']" />
						</else>
					</if>
					<if>
						<equals arg1="@{appName}" arg2="" />
						<then>
							<var name="obj.sel" value="${obj.sel}//Application" />
						</then>
						<else>
							<var name="obj.sel" value="${obj.sel}//Application[@name='@{appName}']" />
						</else>
					</if>
					<if>
						<equals arg1="@{serviceName}" arg2="" />
						<then>
							<var name="obj.sel" value="${obj.sel}/PromotedService" />
						</then>
						<else>
							<var name="obj.sel" value="${obj.sel}/PromotedService[@name='@{serviceName}']" />
						</else>
					</if>
					<if>
						<equals arg1="@{bindingName}" arg2="" />
						<then>
							<var name="obj.sel" value="${obj.sel}/Binding" />
						</then>
						<else>
							<var name="obj.sel" value="${obj.sel}/Binding[@name='@{bindingName}']" />
						</else>
					</if>
				</else>
			</if>
			<echo message="Invoking Admin task using the objectselector: ${obj.sel}" />
			<AMXAdminTask remote="true" propsFile="@{remotePropsFile}" action="@{action}" dataFile="@{dataFile}" objectSelector="${obj.sel}" overwrite="@{overwrite}" merge="@{merge}" createIfNotExists="@{createIfNotExists}" force="@{force}" failOnError="@{failOnError}" />
			<echo>${line.separator}${line.separator}</echo>
		</sequential>
	</macrodef>

	<macrodef name="create.reference.binding" backtrace="true" description="Create application reference binding.">
		<attribute name="envName" default="" description="the name of the environment. Optional. If not specified all environments in data file are selected." />
		<attribute name="appName" default="" description="The name of the application. Optional. If not specified all the applications will be selected." />
		<attribute name="referenceName" default="" description="The reference name. Optional. If not specified all the references for the application in data file will be selected." />
		<attribute name="bindingName" default="" description="The name of the binding. Optional. If not selected all the bindings in data file will be selected." />

		<attribute name="dataFile" description="The data file used as input for this admin CLI task. Required." />
		<attribute name="remotePropsFile" default="${remotePropsFile}" description="The remote properties file. Optional. By default the value of the property remotePropsFile defined will be used." />
		<attribute name="objectSelector" default="" description="The object selector to be used with the admin task. Optional. By default, the macrodef tries to construct the objectselector based on the other input attributes. If this is specified, most other attributes like envName etc will be ignored." />
		<attribute name="overwrite" default="true" description="overwrite flag passed to the admin task. Optional. Default is true" />
		<attribute name="merge" default="true" description="merge flag passed to the admin task. Optional. Default is true" />
		<attribute name="createIfNotExists" default="true" description="The createIfNotExists flag passed to the admin task. Optional. Default is true" />
		<attribute name="force" default="false" description="force flag passed to the admin task. Optional. Default is false" />
		<attribute name="action" default="add" description="action to pass to admin task. Default is add." />
		<attribute name="failOnError" default="true" description="failOnError flag passed to the admin task. Optional. Default is true" />
		<sequential>
			<echo>${line.separator}${line.separator}</echo>
			<echo>Create an application reference binding:</echo>
			<echo>envName: @{envName}</echo>
			<echo>appName: @{appName}</echo>
			<echo>referenceName: @{referenceName}</echo>
			<echo>bindingName: @{bindingName}</echo>

			<echo>dataFile: @{dataFile}</echo>
			<echo>remotePropsFile: @{remotePropsFile}</echo>
			<echo>objectSelector: @{objectSelector}</echo>
			<echo>overwrite: @{overwrite}</echo>
			<echo>action: @{action}</echo>
			<echo>merge: @{merge}</echo>
			<echo>createIfNotExists: @{createIfNotExists}</echo>
			<echo>force: @{force}</echo>
			<echo>failOnError: @{failOnError}</echo>
			<if>
				<not>
					<equals arg1="@{objectSelector}" arg2="" />
				</not>
				<then>
					<var name="obj.sel" value="@{objectSelector}" />
				</then>
				<else>
					<if>
						<equals arg1="@{envName}" arg2="" />
						<then>
							<var name="obj.sel" value="Environment" />
						</then>
						<else>
							<var name="obj.sel" value="Environment[@name='@{envName}']" />
						</else>
					</if>
					<if>
						<equals arg1="@{appName}" arg2="" />
						<then>
							<var name="obj.sel" value="${obj.sel}//Application" />
						</then>
						<else>
							<var name="obj.sel" value="${obj.sel}//Application[@name='@{appName}']" />
						</else>
					</if>
					<if>
						<equals arg1="@{referenceName}" arg2="" />
						<then>
							<var name="obj.sel" value="${obj.sel}/PromotedReference" />
						</then>
						<else>
							<var name="obj.sel" value="${obj.sel}/PromotedReference[@name='@{referenceName}']" />
						</else>
					</if>
					<if>
						<equals arg1="@{bindingName}" arg2="" />
						<then>
							<var name="obj.sel" value="${obj.sel}/Binding" />
						</then>
						<else>
							<var name="obj.sel" value="${obj.sel}/Binding[@name='@{bindingName}']" />
						</else>
					</if>
				</else>
			</if>
			<echo message="Invoking Admin task using the objectselector: ${obj.sel}" />
			<AMXAdminTask remote="true" propsFile="@{remotePropsFile}" action="@{action}" dataFile="@{dataFile}" objectSelector="${obj.sel}" overwrite="@{overwrite}" merge="@{merge}" createIfNotExists="@{createIfNotExists}" force="@{force}" failOnError="@{failOnError}" />
			<echo>${line.separator}${line.separator}</echo>
		</sequential>
	</macrodef>


	<macrodef name="update.reference.binding" backtrace="true" description="update/edit application reference binding.">
		<attribute name="envName" default="" description="the name of the environment. Optional. If not specified all environments in data file are selected." />
		<attribute name="appName" default="" description="The name of the application. Optional. If not specified all the applications will be selected." />
		<attribute name="referenceName" default="" description="The reference name. Optional. If not specified all the references for the application in data file will be selected." />
		<attribute name="bindingName" default="" description="The name of the binding. Optional. If not selected all the bindings in data file will be selected." />

		<attribute name="dataFile" description="The data file used as input for this admin CLI task. Required." />
		<attribute name="remotePropsFile" default="${remotePropsFile}" description="The remote properties file. Optional. By default the value of the property remotePropsFile defined will be used." />
		<attribute name="objectSelector" default="" description="The object selector to be used with the admin task. Optional. By default, the macrodef tries to construct the objectselector based on the other input attributes. If this is specified, most other attributes like envName etc will be ignored." />
		<attribute name="overwrite" default="true" description="overwrite flag passed to the admin task. Optional. Default is true" />
		<attribute name="merge" default="true" description="merge flag passed to the admin task. Optional. Default is true" />
		<attribute name="createIfNotExists" default="true" description="The createIfNotExists flag passed to the admin task. Optional. Default is true" />
		<attribute name="force" default="false" description="force flag passed to the admin task. Optional. Default is false" />
		<attribute name="action" default="edit" description="action to pass to admin task. Default is edit." />
		<attribute name="failOnError" default="true" description="failOnError flag passed to the admin task. Optional. Default is true" />
		<sequential>
			<echo>${line.separator}${line.separator}</echo>
			<echo>Update/edit an application reference binding:</echo>
			<echo>envName: @{envName}</echo>
			<echo>appName: @{appName}</echo>
			<echo>referenceName: @{referenceName}</echo>
			<echo>bindingName: @{bindingName}</echo>

			<echo>dataFile: @{dataFile}</echo>
			<echo>remotePropsFile: @{remotePropsFile}</echo>
			<echo>objectSelector: @{objectSelector}</echo>
			<echo>overwrite: @{overwrite}</echo>
			<echo>action: @{action}</echo>
			<echo>merge: @{merge}</echo>
			<echo>createIfNotExists: @{createIfNotExists}</echo>
			<echo>force: @{force}</echo>
			<echo>failOnError: @{failOnError}</echo>
			<if>
				<not>
					<equals arg1="@{objectSelector}" arg2="" />
				</not>
				<then>
					<var name="obj.sel" value="@{objectSelector}" />
				</then>
				<else>
					<if>
						<equals arg1="@{envName}" arg2="" />
						<then>
							<var name="obj.sel" value="Environment" />
						</then>
						<else>
							<var name="obj.sel" value="Environment[@name='@{envName}']" />
						</else>
					</if>
					<if>
						<equals arg1="@{appName}" arg2="" />
						<then>
							<var name="obj.sel" value="${obj.sel}//Application" />
						</then>
						<else>
							<var name="obj.sel" value="${obj.sel}//Application[@name='@{appName}']" />
						</else>
					</if>
					<if>
						<equals arg1="@{referenceName}" arg2="" />
						<then>
							<var name="obj.sel" value="${obj.sel}/PromotedReference" />
						</then>
						<else>
							<var name="obj.sel" value="${obj.sel}/PromotedReference[@name='@{referenceName}']" />
						</else>
					</if>
					<if>
						<equals arg1="@{bindingName}" arg2="" />
						<then>
							<var name="obj.sel" value="${obj.sel}/Binding" />
						</then>
						<else>
							<var name="obj.sel" value="${obj.sel}/Binding[@name='@{bindingName}']" />
						</else>
					</if>
				</else>
			</if>
			<echo message="Invoking Admin task using the objectselector: ${obj.sel}" />
			<AMXAdminTask remote="true" propsFile="@{remotePropsFile}" action="@{action}" dataFile="@{dataFile}" objectSelector="${obj.sel}" overwrite="@{overwrite}" merge="@{merge}" createIfNotExists="@{createIfNotExists}" force="@{force}" failOnError="@{failOnError}" />
			<echo>${line.separator}${line.separator}</echo>
		</sequential>
	</macrodef>

	<macrodef name="delete.reference.binding" backtrace="true" description="Delete application reference binding.">
		<attribute name="envName" default="" description="the name of the environment. Optional. If not specified all environments in data file are selected." />
		<attribute name="appName" default="" description="The name of the application. Optional. If not specified all the applications will be selected." />
		<attribute name="referenceName" default="" description="The reference name. Optional. If not specified all the references for the application in data file will be selected." />
		<attribute name="bindingName" default="" description="The name of the binding. Optional. If not selected all the bindings in data file will be selected." />

		<attribute name="dataFile" description="The data file used as input for this admin CLI task. Required." />
		<attribute name="remotePropsFile" default="${remotePropsFile}" description="The remote properties file. Optional. By default the value of the property remotePropsFile defined will be used." />
		<attribute name="objectSelector" default="" description="The object selector to be used with the admin task. Optional. By default, the macrodef tries to construct the objectselector based on the other input attributes. If this is specified, most other attributes like envName etc will be ignored." />
		<attribute name="overwrite" default="true" description="overwrite flag passed to the admin task. Optional. Default is true" />
		<attribute name="merge" default="true" description="merge flag passed to the admin task. Optional. Default is true" />
		<attribute name="createIfNotExists" default="true" description="The createIfNotExists flag passed to the admin task. Optional. Default is true" />
		<attribute name="force" default="false" description="force flag passed to the admin task. Optional. Default is false" />
		<attribute name="action" default="delete" description="action to pass to admin task. Default is delete." />
		<attribute name="failOnError" default="true" description="failOnError flag passed to the admin task. Optional. Default is true" />
		<sequential>
			<echo>${line.separator}${line.separator}</echo>
			<echo>Delete an application reference binding:</echo>
			<echo>envName: @{envName}</echo>
			<echo>appName: @{appName}</echo>
			<echo>referenceName: @{referenceName}</echo>
			<echo>bindingName: @{bindingName}</echo>

			<echo>dataFile: @{dataFile}</echo>
			<echo>remotePropsFile: @{remotePropsFile}</echo>
			<echo>objectSelector: @{objectSelector}</echo>
			<echo>overwrite: @{overwrite}</echo>
			<echo>action: @{action}</echo>
			<echo>merge: @{merge}</echo>
			<echo>createIfNotExists: @{createIfNotExists}</echo>
			<echo>force: @{force}</echo>
			<echo>failOnError: @{failOnError}</echo>
			<if>
				<not>
					<equals arg1="@{objectSelector}" arg2="" />
				</not>
				<then>
					<var name="obj.sel" value="@{objectSelector}" />
				</then>
				<else>
					<if>
						<equals arg1="@{envName}" arg2="" />
						<then>
							<var name="obj.sel" value="Environment" />
						</then>
						<else>
							<var name="obj.sel" value="Environment[@name='@{envName}']" />
						</else>
					</if>
					<if>
						<equals arg1="@{appName}" arg2="" />
						<then>
							<var name="obj.sel" value="${obj.sel}//Application" />
						</then>
						<else>
							<var name="obj.sel" value="${obj.sel}//Application[@name='@{appName}']" />
						</else>
					</if>
					<if>
						<equals arg1="@{referenceName}" arg2="" />
						<then>
							<var name="obj.sel" value="${obj.sel}/PromotedReference" />
						</then>
						<else>
							<var name="obj.sel" value="${obj.sel}/PromotedReference[@name='@{referenceName}']" />
						</else>
					</if>
					<if>
						<equals arg1="@{bindingName}" arg2="" />
						<then>
							<var name="obj.sel" value="${obj.sel}/Binding" />
						</then>
						<else>
							<var name="obj.sel" value="${obj.sel}/Binding[@name='@{bindingName}']" />
						</else>
					</if>
				</else>
			</if>
			<echo message="Invoking Admin task using the objectselector: ${obj.sel}" />
			<AMXAdminTask remote="true" propsFile="@{remotePropsFile}" action="@{action}" dataFile="@{dataFile}" objectSelector="${obj.sel}" overwrite="@{overwrite}" merge="@{merge}" createIfNotExists="@{createIfNotExists}" force="@{force}" failOnError="@{failOnError}" />
			<echo>${line.separator}${line.separator}</echo>
		</sequential>
	</macrodef>

	<macrodef name="set.reference.wiring" backtrace="true" description="Set the reference wiring.">
		<attribute name="envName" default="" description="the name of the environment. Optional. If not specified all environments in data file are selected." />
		<attribute name="appName" default="" description="The name of the application. Optional. If not specified all the applications will be selected." />
		<attribute name="referenceName" default="" description="The reference name. Optional. If not specified all the references for the application in data file will be selected." />
		<attribute name="dataFile" description="The data file used as input for this admin CLI task. Required." />
		<attribute name="remotePropsFile" default="${remotePropsFile}" description="The remote properties file. Optional. By default the value of the property remotePropsFile defined will be used." />
		<attribute name="objectSelector" default="" description="The object selector to be used with the admin task. Optional. By default, the macrodef tries to construct the objectselector based on the other input attributes. If this is specified, most other attributes like envName etc will be ignored." />
		<attribute name="overwrite" default="true" description="overwrite flag passed to the admin task. Optional. Default is true" />
		<attribute name="merge" default="true" description="merge flag passed to the admin task. Optional. Default is true" />
		<attribute name="createIfNotExists" default="true" description="The createIfNotExists flag passed to the admin task. Optional. Default is true" />
		<attribute name="force" default="false" description="force flag passed to the admin task. Optional. Default is false" />
		<attribute name="action" default="set" description="action to pass to admin task. Default is set." />
		<attribute name="failOnError" default="true" description="failOnError flag passed to the admin task. Optional. Default is true" />
		<sequential>
			<echo>${line.separator}${line.separator}</echo>
			<echo>Set the reference wiring using:</echo>
			<echo>envName: @{envName}</echo>
			<echo>appName: @{appName}</echo>
			<echo>referenceName: @{referenceName}</echo>
			<echo>dataFile: @{dataFile}</echo>
			<echo>remotePropsFile: @{remotePropsFile}</echo>
			<echo>objectSelector: @{objectSelector}</echo>
			<echo>overwrite: @{overwrite}</echo>
			<echo>action: @{action}</echo>
			<echo>merge: @{merge}</echo>
			<echo>createIfNotExists: @{createIfNotExists}</echo>
			<echo>force: @{force}</echo>
			<echo>failOnError: @{failOnError}</echo>
			<if>
				<not>
					<equals arg1="@{objectSelector}" arg2="" />
				</not>
				<then>
					<var name="obj.sel" value="@{objectSelector}" />
				</then>
				<else>
					<if>
						<equals arg1="@{envName}" arg2="" />
						<then>
							<var name="obj.sel" value="Environment" />
						</then>
						<else>
							<var name="obj.sel" value="Environment[@name='@{envName}']" />
						</else>
					</if>
					<if>
						<equals arg1="@{appName}" arg2="" />
						<then>
							<var name="obj.sel" value="${obj.sel}//Application" />
						</then>
						<else>
							<var name="obj.sel" value="${obj.sel}//Application[@name='@{appName}']" />
						</else>
					</if>
					<if>
						<equals arg1="@{referenceName}" arg2="" />
						<then>
							<var name="obj.sel" value="${obj.sel}/PromotedReference/Wire" />
						</then>
						<else>
							<var name="obj.sel" value="${obj.sel}/PromotedReference[@name='@{referenceName}']/Wire" />
						</else>
					</if>
				</else>
			</if>
			<echo message="Invoking Admin task using the objectselector: ${obj.sel}" />
			<AMXAdminTask remote="true" propsFile="@{remotePropsFile}" action="@{action}" dataFile="@{dataFile}" objectSelector="${obj.sel}" overwrite="@{overwrite}" merge="@{merge}" createIfNotExists="@{createIfNotExists}" force="@{force}" failOnError="@{failOnError}" />
			<echo>${line.separator}${line.separator}</echo>
		</sequential>
	</macrodef>

	<macrodef name="set.reference.wiring.across.env" backtrace="true" description="Set the reference wiring across environments.">
		<attribute name="envName" default="" description="the name of the environment. Optional. If not specified all environments in data file are selected." />
		<attribute name="referenceName" default="" description="The reference name. Optional. If not specified all the references for the application in data file will be selected." />
		<attribute name="dataFile" description="The data file used as input for this admin CLI task. Required." />
		<attribute name="remotePropsFile" default="${remotePropsFile}" description="The remote properties file. Optional. By default the value of the property remotePropsFile defined will be used." />
		<attribute name="objectSelector" default="" description="The object selector to be used with the admin task. Optional. By default, the macrodef tries to construct the objectselector based on the other input attributes. If this is specified, most other attributes like envName etc will be ignored." />
		<attribute name="overwrite" default="true" description="overwrite flag passed to the admin task. Optional. Default is true" />
		<attribute name="merge" default="true" description="merge flag passed to the admin task. Optional. Default is true" />
		<attribute name="createIfNotExists" default="true" description="The createIfNotExists flag passed to the admin task. Optional. Default is true" />
		<attribute name="force" default="false" description="force flag passed to the admin task. Optional. Default is false" />
		<attribute name="action" default="set" description="action to pass to admin task. Default is set." />
		<attribute name="failOnError" default="true" description="failOnError flag passed to the admin task. Optional. Default is true" />
		<sequential>
			<echo>${line.separator}${line.separator}</echo>
			<echo>Set the reference wiring across environments using:</echo>
			<echo>envName: @{envName}</echo>
			<echo>referenceName: @{referenceName}</echo>
			<echo>dataFile: @{dataFile}</echo>
			<echo>remotePropsFile: @{remotePropsFile}</echo>
			<echo>objectSelector: @{objectSelector}</echo>
			<echo>overwrite: @{overwrite}</echo>
			<echo>action: @{action}</echo>
			<echo>merge: @{merge}</echo>
			<echo>createIfNotExists: @{createIfNotExists}</echo>
			<echo>force: @{force}</echo>
			<echo>failOnError: @{failOnError}</echo>
			<if>
				<not>
					<equals arg1="@{objectSelector}" arg2="" />
				</not>
				<then>
					<var name="obj.sel" value="@{objectSelector}" />
				</then>
				<else>
					<if>
						<equals arg1="@{envName}" arg2="" />
						<then>
							<var name="obj.sel" value="Environment" />
						</then>
						<else>
							<var name="obj.sel" value="Environment[@name='@{envName}']" />
						</else>
					</if>
					<if>
						<equals arg1="@{referenceName}" arg2="" />
						<then>
							<var name="obj.sel" value="${obj.sel}/Reference/Wire" />
						</then>
						<else>
							<var name="obj.sel" value="${obj.sel}/Reference[@name='@{referenceName}']/Wire" />
						</else>
					</if>
				</else>
			</if>
			<echo message="Invoking Admin task using the objectselector: ${obj.sel}" />
			<AMXAdminTask remote="true" propsFile="@{remotePropsFile}" action="@{action}" dataFile="@{dataFile}" objectSelector="${obj.sel}" overwrite="@{overwrite}" merge="@{merge}" createIfNotExists="@{createIfNotExists}" force="@{force}" failOnError="@{failOnError}" />
			<echo>${line.separator}${line.separator}</echo>
		</sequential>
	</macrodef>

	<macrodef name="promote.service" backtrace="true" description="Promote the service of an application to environment. If objectSelector attribute is specified, some of the input attributes will be ignored.">
		<attribute name="envName" default="" description="the name of the environment. Optional. If not specified all environments in data file are selected." />
		<attribute name="appName" default="" description="The name of the application. Optional. If not specified all the applications will be selected." />
		<attribute name="serviceName" default="" description="The service name. Optional. If not specified all the services for the application in data file are selected." />
		<attribute name="dataFile" description="The data file used as input for this admin CLI task. Required." />
		<attribute name="objectSelector" default="" description="The object selector to be used with the admin task. Optional. By default, the macrodef tries to construct the objectselector based on the other input attributes. If this is specified, most other attributes like envName etc will be ignored." />
		<attribute name="remotePropsFile" default="${remotePropsFile}" description="The remote properties file. Optional. By default the value of the property remotePropsFile defined will be used." />
		<attribute name="action" default="promote" description="action to pass to admin task. Default is promote." />
		<attribute name="overwrite" default="true" description="overwrite flag passed to the admin task. Optional. Default is true" />
		<attribute name="merge" default="true" description="merge flag passed to the admin task. Optional. Default is true" />
		<attribute name="createIfNotExists" default="true" description="The createIfNotExists flag passed to the admin task. Optional. Default is true" />
		<attribute name="force" default="false" description="force flag passed to the admin task. Optional. Default is false" />
		<attribute name="failOnError" default="true" description="failOnError flag passed to the admin task. Optional. Default is true" />
		<sequential>
			<echo>${line.separator}${line.separator}</echo>
			<echo>Promote the service of an application to environment using:</echo>
			<echo>envName: @{envName}</echo>
			<echo>appName: @{appName}</echo>
			<echo>serviceName: @{serviceName}</echo>
			<echo>dataFile: @{dataFile}</echo>
			<echo>remotePropsFile: @{remotePropsFile}</echo>
			<echo>objectSelector: @{objectSelector}</echo>
			<echo>action: @{action}</echo>
			<echo>overwrite: @{overwrite}</echo>
			<echo>merge: @{merge}</echo>
			<echo>createIfNotExists: @{createIfNotExists}</echo>
			<echo>force: @{force}</echo>
			<echo>failOnError: @{failOnError}</echo>
			<if>
				<not>
					<equals arg1="@{objectSelector}" arg2="" />
				</not>
				<then>
					<var name="obj.sel" value="@{objectSelector}" />
				</then>
				<else>
					<if>
						<equals arg1="@{envName}" arg2="" />
						<then>
							<var name="obj.sel" value="Environment" />
						</then>
						<else>
							<var name="obj.sel" value="Environment[@name='@{envName}']" />
						</else>
					</if>
					<if>
						<equals arg1="@{appName}" arg2="" />
						<then>
							<var name="obj.sel" value="${obj.sel}//Application" />
						</then>
						<else>
							<var name="obj.sel" value="${obj.sel}//Application[@name='@{appName}']" />
						</else>
					</if>
					<if>
						<equals arg1="@{serviceName}" arg2="" />
						<then>
							<var name="obj.sel" value="${obj.sel}/PromotedService" />
						</then>
						<else>
							<var name="obj.sel" value="${obj.sel}/PromotedService[@name='@{serviceName}']" />
						</else>
					</if>
				</else>
			</if>
			<echo message="Invoking Admin task using the objectselector: ${obj.sel}" />
			<AMXAdminTask remote="true" propsFile="@{remotePropsFile}" action="@{action}" dataFile="@{dataFile}" objectSelector="${obj.sel}" overwrite="@{overwrite}" merge="@{merge}" createIfNotExists="@{createIfNotExists}" force="@{force}" failOnError="@{failOnError}" />
			<echo>${line.separator}${line.separator}</echo>
		</sequential>
	</macrodef>

	<macrodef name="demote.service" backtrace="true" description="Demote the service of an application from environment. If objectSelector attribute is specified, some of the input attributes will be ignored.">
		<attribute name="envName" default="" description="the name of the environment. Optional. If not specified all environments in data file are selected." />
		<attribute name="appName" default="" description="The name of the application. Optional. If not specified all the applications will be selected." />
		<attribute name="serviceName" default="" description="The service name. Optional. If not specified all the services for the application in data file are selected." />
		<attribute name="dataFile" description="The data file used as input for this admin CLI task. Required." />
		<attribute name="objectSelector" default="" description="The object selector to be used with the admin task. Optional. By default, the macrodef tries to construct the objectselector based on the other input attributes. If this is specified, most other attributes like envName etc will be ignored." />
		<attribute name="remotePropsFile" default="${remotePropsFile}" description="The remote properties file. Optional. By default the value of the property remotePropsFile defined will be used." />
		<attribute name="action" default="demote" description="action to pass to admin task. Default is demote." />
		<attribute name="overwrite" default="true" description="overwrite flag passed to the admin task. Optional. Default is true" />
		<attribute name="merge" default="true" description="merge flag passed to the admin task. Optional. Default is true" />
		<attribute name="createIfNotExists" default="true" description="The createIfNotExists flag passed to the admin task. Optional. Default is true" />
		<attribute name="force" default="false" description="force flag passed to the admin task. Optional. Default is false" />
		<attribute name="failOnError" default="true" description="failOnError flag passed to the admin task. Optional. Default is true" />
		<sequential>
			<echo>${line.separator}${line.separator}</echo>
			<echo>Demote the service of an application to environment using:</echo>
			<echo>envName: @{envName}</echo>
			<echo>appName: @{appName}</echo>
			<echo>serviceName: @{serviceName}</echo>
			<echo>dataFile: @{dataFile}</echo>
			<echo>remotePropsFile: @{remotePropsFile}</echo>
			<echo>objectSelector: @{objectSelector}</echo>
			<echo>action: @{action}</echo>
			<echo>overwrite: @{overwrite}</echo>
			<echo>merge: @{merge}</echo>
			<echo>createIfNotExists: @{createIfNotExists}</echo>
			<echo>force: @{force}</echo>
			<echo>failOnError: @{failOnError}</echo>
			<if>
				<not>
					<equals arg1="@{objectSelector}" arg2="" />
				</not>
				<then>
					<var name="obj.sel" value="@{objectSelector}" />
				</then>
				<else>
					<if>
						<equals arg1="@{envName}" arg2="" />
						<then>
							<var name="obj.sel" value="Environment" />
						</then>
						<else>
							<var name="obj.sel" value="Environment[@name='@{envName}']" />
						</else>
					</if>
					<if>
						<equals arg1="@{appName}" arg2="" />
						<then>
							<var name="obj.sel" value="${obj.sel}//Application" />
						</then>
						<else>
							<var name="obj.sel" value="${obj.sel}//Application[@name='@{appName}']" />
						</else>
					</if>
					<if>
						<equals arg1="@{serviceName}" arg2="" />
						<then>
							<var name="obj.sel" value="${obj.sel}/PromotedService" />
						</then>
						<else>
							<var name="obj.sel" value="${obj.sel}/PromotedService[@name='@{serviceName}']" />
						</else>
					</if>
				</else>
			</if>
			<echo message="Invoking Admin task using the objectselector: ${obj.sel}" />
			<AMXAdminTask remote="true" propsFile="@{remotePropsFile}" action="@{action}" dataFile="@{dataFile}" objectSelector="${obj.sel}" overwrite="@{overwrite}" merge="@{merge}" createIfNotExists="@{createIfNotExists}" force="@{force}" failOnError="@{failOnError}" />
			<echo>${line.separator}${line.separator}</echo>
		</sequential>
	</macrodef>

	<macrodef name="promote.reference" backtrace="true" description="Promote reference binding to an environment.">
		<attribute name="envName" default="" description="the name of the environment. Optional. If not specified all environments in data file are selected." />
		<attribute name="appName" default="" description="The name of the application. Optional. If not specified all the applications will be selected." />
		<attribute name="referenceName" default="" description="The reference name. Optional. If not specified all the references for the application in data file will be selected." />

		<attribute name="dataFile" description="The data file used as input for this admin CLI task. Required." />
		<attribute name="remotePropsFile" default="${remotePropsFile}" description="The remote properties file. Optional. By default the value of the property remotePropsFile defined will be used." />
		<attribute name="objectSelector" default="" description="The object selector to be used with the admin task. Optional. By default, the macrodef tries to construct the objectselector based on the other input attributes. If this is specified, most other attributes like envName etc will be ignored." />
		<attribute name="overwrite" default="true" description="overwrite flag passed to the admin task. Optional. Default is true" />
		<attribute name="merge" default="true" description="merge flag passed to the admin task. Optional. Default is true" />
		<attribute name="createIfNotExists" default="true" description="The createIfNotExists flag passed to the admin task. Optional. Default is true" />
		<attribute name="force" default="false" description="force flag passed to the admin task. Optional. Default is false" />
		<attribute name="action" default="promote" description="action to pass to admin task. Default is promote." />
		<attribute name="failOnError" default="true" description="failOnError flag passed to the admin task. Optional. Default is true" />
		<sequential>
			<echo>${line.separator}${line.separator}</echo>
			<echo>Promote reference binding to an environment:</echo>
			<echo>envName: @{envName}</echo>
			<echo>appName: @{appName}</echo>
			<echo>referenceName: @{referenceName}</echo>
			<echo>dataFile: @{dataFile}</echo>
			<echo>remotePropsFile: @{remotePropsFile}</echo>
			<echo>objectSelector: @{objectSelector}</echo>
			<echo>overwrite: @{overwrite}</echo>
			<echo>action: @{action}</echo>
			<echo>merge: @{merge}</echo>
			<echo>createIfNotExists: @{createIfNotExists}</echo>
			<echo>force: @{force}</echo>
			<echo>failOnError: @{failOnError}</echo>
			<if>
				<not>
					<equals arg1="@{objectSelector}" arg2="" />
				</not>
				<then>
					<var name="obj.sel" value="@{objectSelector}" />
				</then>
				<else>
					<if>
						<equals arg1="@{envName}" arg2="" />
						<then>
							<var name="obj.sel" value="Environment" />
						</then>
						<else>
							<var name="obj.sel" value="Environment[@name='@{envName}']" />
						</else>
					</if>
					<if>
						<equals arg1="@{appName}" arg2="" />
						<then>
							<var name="obj.sel" value="${obj.sel}//Application" />
						</then>
						<else>
							<var name="obj.sel" value="${obj.sel}//Application[@name='@{appName}']" />
						</else>
					</if>
					<if>
						<equals arg1="@{referenceName}" arg2="" />
						<then>
							<var name="obj.sel" value="${obj.sel}/PromotedReference" />
						</then>
						<else>
							<var name="obj.sel" value="${obj.sel}/PromotedReference[@name='@{referenceName}']" />
						</else>
					</if>
				</else>
			</if>
			<echo message="Invoking Admin task using the objectselector: ${obj.sel}" />
			<AMXAdminTask remote="true" propsFile="@{remotePropsFile}" action="@{action}" dataFile="@{dataFile}" objectSelector="${obj.sel}" overwrite="@{overwrite}" merge="@{merge}" createIfNotExists="@{createIfNotExists}" force="@{force}" failOnError="@{failOnError}" />
			<echo>${line.separator}${line.separator}</echo>
		</sequential>
	</macrodef>


	<macrodef name="demote.reference" backtrace="true" description="Demote reference binding from an environment.">
		<attribute name="envName" default="" description="the name of the environment. Optional. If not specified all environments in data file are selected." />
		<attribute name="appName" default="" description="The name of the application. Optional. If not specified all the applications will be selected." />
		<attribute name="referenceName" default="" description="The reference name. Optional. If not specified all the references for the application in data file will be selected." />

		<attribute name="dataFile" description="The data file used as input for this admin CLI task. Required." />
		<attribute name="remotePropsFile" default="${remotePropsFile}" description="The remote properties file. Optional. By default the value of the property remotePropsFile defined will be used." />
		<attribute name="objectSelector" default="" description="The object selector to be used with the admin task. Optional. By default, the macrodef tries to construct the objectselector based on the other input attributes. If this is specified, most other attributes like envName etc will be ignored." />
		<attribute name="overwrite" default="true" description="overwrite flag passed to the admin task. Optional. Default is true" />
		<attribute name="merge" default="true" description="merge flag passed to the admin task. Optional. Default is true" />
		<attribute name="createIfNotExists" default="true" description="The createIfNotExists flag passed to the admin task. Optional. Default is true" />
		<attribute name="force" default="false" description="force flag passed to the admin task. Optional. Default is false" />
		<attribute name="action" default="demote" description="action to pass to admin task. Default is demote." />
		<attribute name="failOnError" default="true" description="failOnError flag passed to the admin task. Optional. Default is true" />
		<sequential>
			<echo>${line.separator}${line.separator}</echo>
			<echo>Promote reference binding to an environment:</echo>
			<echo>envName: @{envName}</echo>
			<echo>appName: @{appName}</echo>
			<echo>referenceName: @{referenceName}</echo>
			<echo>dataFile: @{dataFile}</echo>
			<echo>remotePropsFile: @{remotePropsFile}</echo>
			<echo>objectSelector: @{objectSelector}</echo>
			<echo>overwrite: @{overwrite}</echo>
			<echo>action: @{action}</echo>
			<echo>merge: @{merge}</echo>
			<echo>createIfNotExists: @{createIfNotExists}</echo>
			<echo>force: @{force}</echo>
			<echo>failOnError: @{failOnError}</echo>
			<if>
				<not>
					<equals arg1="@{objectSelector}" arg2="" />
				</not>
				<then>
					<var name="obj.sel" value="@{objectSelector}" />
				</then>
				<else>
					<if>
						<equals arg1="@{envName}" arg2="" />
						<then>
							<var name="obj.sel" value="Environment" />
						</then>
						<else>
							<var name="obj.sel" value="Environment[@name='@{envName}']" />
						</else>
					</if>
					<if>
						<equals arg1="@{appName}" arg2="" />
						<then>
							<var name="obj.sel" value="${obj.sel}//Application" />
						</then>
						<else>
							<var name="obj.sel" value="${obj.sel}//Application[@name='@{appName}']" />
						</else>
					</if>
					<if>
						<equals arg1="@{referenceName}" arg2="" />
						<then>
							<var name="obj.sel" value="${obj.sel}/PromotedReference" />
						</then>
						<else>
							<var name="obj.sel" value="${obj.sel}/PromotedReference[@name='@{referenceName}']" />
						</else>
					</if>
				</else>
			</if>
			<echo message="Invoking Admin task using the objectselector: ${obj.sel}" />
			<AMXAdminTask remote="true" propsFile="@{remotePropsFile}" action="@{action}" dataFile="@{dataFile}" objectSelector="${obj.sel}" overwrite="@{overwrite}" merge="@{merge}" createIfNotExists="@{createIfNotExists}" force="@{force}" failOnError="@{failOnError}" />
			<echo>${line.separator}${line.separator}</echo>
		</sequential>
	</macrodef>

	<macrodef name="bind.host" backtrace="true" description="Bind Host to amx admin. If objectSelector attribute is specified, some of the input attributes will be ignored.">
		<attribute name="dataFile" description="The data file used as input for this admin CLI task. Required." />
		<attribute name="hostName" default="" description="The name of the host. Optional. If not specified, all the hosts in the data file are selected." />
		<attribute name="objectSelector" default="" description="The object selector to be used with the admin task. Optional. By default, the macrodef tries to construct the objectselector based on the other input attributes. If this is specified, most other attributes like envName etc will be ignored." />
		<attribute name="remotePropsFile" default="${remotePropsFile}" description="The remote properties file. Optional. By default the value of the property remotePropsFile defined will be used." />
		<attribute name="action" default="add" description="action to pass to admin task. Default is add." />
		<attribute name="overwrite" default="true" description="overwrite flag passed to the admin task. Optional. Default is true" />
		<attribute name="merge" default="true" description="merge flag passed to the admin task. Optional. Default is true" />
		<attribute name="createIfNotExists" default="true" description="The createIfNotExists flag passed to the admin task. Optional. Default is true" />
		<attribute name="force" default="false" description="force flag passed to the admin task. Optional. Default is false" />
		<attribute name="failOnError" default="true" description="failOnError flag passed to the admin task. Optional. Default is true" />
		<sequential>
			<echo>${line.separator}${line.separator}</echo>
			<echo>Bind host to amx administrrator using:</echo>
			<echo>dataFile: @{dataFile}</echo>
			<echo>hostName: @{hostName}</echo>
			<echo>remotePropsFile: @{remotePropsFile}</echo>
			<echo>objectSelector: @{objectSelector}</echo>
			<echo>action: @{action}</echo>
			<echo>overwrite: @{overwrite}</echo>
			<echo>merge: @{merge}</echo>
			<echo>createIfNotExists: @{createIfNotExists}</echo>
			<echo>force: @{force}</echo>
			<echo>failOnError: @{failOnError}</echo>
			<if>
				<not>
					<equals arg1="@{objectSelector}" arg2="" />
				</not>
				<then>
					<var name="obj.sel" value="@{objectSelector}" />
				</then>
				<else>
					<if>
						<equals arg1="@{hostName}" arg2="" />
						<then>
							<var name="obj.sel" value="Host" />
						</then>
						<else>
							<var name="obj.sel" value="Host[@name='@{hostName}']" />
						</else>
					</if>

				</else>
			</if>
			<echo message="Invoking Admin task using the objectselector: ${obj.sel}" />
			<AMXAdminTask remote="true" propsFile="@{remotePropsFile}" action="@{action}" dataFile="@{dataFile}" objectSelector="${obj.sel}" overwrite="@{overwrite}" merge="@{merge}" createIfNotExists="@{createIfNotExists}" force="@{force}" failOnError="@{failOnError}" />
			<echo>${line.separator}${line.separator}</echo>
		</sequential>
	</macrodef>
	
	<macrodef name="secure.host" backtrace="true" description="Secure JMX Host port. If objectSelector attribute is specified, some of the input attributes will be ignored.">
		<attribute name="dataFile" description="The data file used as input for this admin CLI task. Required." />
		<attribute name="hostName" default="" description="The name of the host. Optional. If not specified, all the hosts in the data file are selected." />
		<attribute name="objectSelector" default="" description="The object selector to be used with the admin task. Optional. By default, the macrodef tries to construct the objectselector based on the other input attributes. If this is specified, most other attributes like envName etc will be ignored." />
		<attribute name="remotePropsFile" default="${remotePropsFile}" description="The remote properties file. Optional. By default the value of the property remotePropsFile defined will be used." />
		<attribute name="action" default="secureJMX" description="action to pass to admin task. Default is secureJMX." />
		<attribute name="overwrite" default="true" description="overwrite flag passed to the admin task. Optional. Default is true" />
		<attribute name="merge" default="true" description="merge flag passed to the admin task. Optional. Default is true" />
		<attribute name="createIfNotExists" default="true" description="The createIfNotExists flag passed to the admin task. Optional. Default is true" />
		<attribute name="force" default="false" description="force flag passed to the admin task. Optional. Default is false" />
		<attribute name="failOnError" default="true" description="failOnError flag passed to the admin task. Optional. Default is true" />
		<sequential>
			<echo>${line.separator}${line.separator}</echo>
			<echo>Secure JMX host port using:</echo>
			<echo>dataFile: @{dataFile}</echo>
			<echo>hostName: @{hostName}</echo>
			<echo>remotePropsFile: @{remotePropsFile}</echo>
			<echo>objectSelector: @{objectSelector}</echo>
			<echo>action: @{action}</echo>
			<echo>overwrite: @{overwrite}</echo>
			<echo>merge: @{merge}</echo>
			<echo>createIfNotExists: @{createIfNotExists}</echo>
			<echo>force: @{force}</echo>
			<echo>failOnError: @{failOnError}</echo>
			<if>
				<not>
					<equals arg1="@{objectSelector}" arg2="" />
				</not>
				<then>
					<var name="obj.sel" value="@{objectSelector}" />
				</then>
				<else>
					<if>
						<equals arg1="@{hostName}" arg2="" />
						<then>
							<var name="obj.sel" value="Host" />
						</then>
						<else>
							<var name="obj.sel" value="Host[@name='@{hostName}']" />
						</else>
					</if>

				</else>
			</if>
			<echo message="Invoking Admin task using the objectselector: ${obj.sel}" />
			<AMXAdminTask remote="true" propsFile="@{remotePropsFile}" action="@{action}" dataFile="@{dataFile}" objectSelector="${obj.sel}" overwrite="@{overwrite}" merge="@{merge}" createIfNotExists="@{createIfNotExists}" force="@{force}" failOnError="@{failOnError}" />
			<echo>${line.separator}${line.separator}</echo>
		</sequential>
	</macrodef>

	<macrodef name="add.host.permissions" backtrace="true" description="Set Permissions to Host.">
		<attribute name="hostName" default="" description="the name of the host. Optional. If not specified all hosts in data file are selected." />
		<attribute name="dataFile" description="The data file used as input for this admin CLI task. Required." />
		<attribute name="objectSelector" default="" description="The object selector to be used with the admin task." />
		<attribute name="remotePropsFile" default="${remotePropsFile}" description="The remote properties file." />
		<attribute name="action" default="add" description="action to pass to admin task. Default is add." />
		<attribute name="overwrite" default="true" description="overwrite flag passed to the admin task. Optional. Default is true" />
		<attribute name="merge" default="true" description="merge flag passed to the admin task. Optional. Default is true" />
		<attribute name="createIfNotExists" default="true" description="The createIfNotExists flag passed to the admin task. Optional. Default is true" />
		<attribute name="force" default="false" description="force flag passed to the admin task. Optional. Default is false" />
		<attribute name="failOnError" default="true" description="failOnError flag passed to the admin task. Optional. Default is true" />
		<sequential>
			<echo>${line.separator}${line.separator}</echo>
			<echo>Adding Host Permissions using:</echo>
			<echo>hostName: @{hostName}</echo>
			<echo>dataFile: @{dataFile}</echo>
			<echo>remotePropsFile: @{remotePropsFile}</echo>
			<echo>objectSelector: @{objectSelector}</echo>
			<echo>action: @{action}</echo>
			<echo>overwrite: @{overwrite}</echo>
			<echo>merge: @{merge}</echo>
			<echo>createIfNotExists: @{createIfNotExists}</echo>
			<echo>force: @{force}</echo>
			<echo>failOnError: @{failOnError}</echo>
			<if>
				<not>
					<equals arg1="@{objectSelector}" arg2="" />
				</not>
				<then>
					<var name="obj.sel" value="@{objectSelector}" />
				</then>
				<else>
					<if>
						<equals arg1="@{hostName}" arg2="" />
						<then>
							<var name="obj.sel" value="Host" />
						</then>
						<else>
							<var name="obj.sel" value="Host[@name='@{hostName}']" />
						</else>
					</if>
					<var name="obj.sel" value="${obj.sel}/Permissions" />
				</else>
			</if>
			<echo message="Invoking Admin task using the objectselector: ${obj.sel}" />
			<AMXAdminTask remote="true" propsFile="@{remotePropsFile}" action="@{action}" dataFile="@{dataFile}" objectSelector="${obj.sel}" overwrite="@{overwrite}" merge="@{merge}" createIfNotExists="@{createIfNotExists}" force="@{force}" failOnError="@{failOnError}" />
			<echo>${line.separator}${line.separator}</echo>
		</sequential>
	</macrodef>
	
	<macrodef name="create.environment" backtrace="true" description="Create new environment from specified data file. 
		If objectSelector attribute is specified, the some attributes are ignored.">
		<attribute name="envName" default="" description="the name of the environment. Optional. If not specified all environments in data file are selected." />
		<attribute name="dataFile" description="The data file used as input for this admin CLI task. Required." />
		<attribute name="remotePropsFile" default="${remotePropsFile}" description="The remote properties file. Optional. By default the value of the property remotePropsFile defined will be used." />
		<attribute name="action" default="add" description="action to pass to admin task. Default is add." />
		<attribute name="overwrite" default="true" description="overwrite flag passed to the admin task. Optional. Default is true" />
		<attribute name="merge" default="true" description="merge flag passed to the admin task. Optional. Default is true" />
		<attribute name="createIfNotExists" default="true" description="The createIfNotExists flag passed to the admin task. Optional. Default is true" />
		<attribute name="force" default="false" description="force flag passed to the admin task. Optional. Default is false" />
		<attribute name="failOnError" default="true" description="failOnError flag passed to the admin task. Optional. Default is true" />
		<attribute name="objectSelector" default="" description="The object selector to be used with the admin task. Optional. By default, the macrodef tries to construct the objectselector based on the other input attributes. If this is specified, most other attributes like envName etc will be ignored." />
		<sequential>
			<echo>${line.separator}${line.separator}</echo>
			<echo>Creating Environment using:</echo>
			<echo>envName: @{envName}</echo>
			<echo>dataFile: @{dataFile}</echo>
			<echo>remotePropsFile: @{remotePropsFile}</echo>
			<echo>objectSelector: @{objectSelector}</echo>
			<echo>action: @{action}</echo>
			<echo>overwrite: @{overwrite}</echo>
			<echo>merge: @{merge}</echo>
			<echo>createIfNotExists: @{createIfNotExists}</echo>
			<echo>force: @{force}</echo>
			<echo>failOnError: @{failOnError}</echo>

			<if>
				<not>
					<equals arg1="@{objectSelector}" arg2="" />
				</not>
				<then>
					<var name="obj.sel" value="@{objectSelector}" />
				</then>
				<elseif>
					<not>
						<equals arg1="@{envName}" arg2="" />
					</not>
					<then>
						<var name="obj.sel" value="Environment[@name='@{envName}']" />
					</then>
				</elseif>
				<else>
					<var name="obj.sel" value="Environment" />
				</else>
			</if>
			<echo message="Invoking Admin task using the objectselector: ${obj.sel}" />
			<AMXAdminTask remote="true" propsFile="@{remotePropsFile}" action="@{action}" dataFile="@{dataFile}" objectSelector="${obj.sel}" overwrite="@{overwrite}" merge="@{merge}" createIfNotExists="@{createIfNotExists}" force="@{force}" failOnError="@{failOnError}" />
			<echo>${line.separator}${line.separator}</echo>
		</sequential>
	</macrodef>

	<macrodef name="delete.environment" backtrace="true" description="Delete new environment from specified data file. 
						If objectSelector attribute is specified, the some attributes are ignored.">
		<attribute name="envName" default="" description="the name of the environment. Optional. If not specified all environments in data file are selected." />
		<attribute name="dataFile" description="The data file used as input for this admin CLI task. Required." />
		<attribute name="remotePropsFile" default="${remotePropsFile}" description="The remote properties file. Optional. By default the value of the property remotePropsFile defined will be used." />
		<attribute name="action" default="delete" description="action to pass to admin task. Default is delete." />
		<attribute name="overwrite" default="true" description="overwrite flag passed to the admin task. Optional. Default is true" />
		<attribute name="merge" default="true" description="merge flag passed to the admin task. Optional. Default is true" />
		<attribute name="createIfNotExists" default="true" description="The createIfNotExists flag passed to the admin task. Optional. Default is true" />
		<attribute name="force" default="false" description="force flag passed to the admin task. Optional. Default is false" />
		<attribute name="failOnError" default="true" description="failOnError flag passed to the admin task. Optional. Default is true" />
		<attribute name="objectSelector" default="" description="The object selector to be used with the admin task. Optional. By default, the macrodef tries to construct the objectselector based on the other input attributes. If this is specified, most other attributes like envName etc will be ignored." />
		<sequential>
			<echo>${line.separator}${line.separator}</echo>
			<echo>Deleting Environment using:</echo>
			<echo>envName: @{envName}</echo>
			<echo>dataFile: @{dataFile}</echo>
			<echo>remotePropsFile: @{remotePropsFile}</echo>
			<echo>objectSelector: @{objectSelector}</echo>
			<echo>action: @{action}</echo>
			<echo>overwrite: @{overwrite}</echo>
			<echo>merge: @{merge}</echo>
			<echo>createIfNotExists: @{createIfNotExists}</echo>
			<echo>force: @{force}</echo>
			<echo>failOnError: @{failOnError}</echo>

			<if>
				<not>
					<equals arg1="@{objectSelector}" arg2="" />
				</not>
				<then>
					<var name="obj.sel" value="@{objectSelector}" />
				</then>
				<elseif>
					<not>
						<equals arg1="@{envName}" arg2="" />
					</not>
					<then>
						<var name="obj.sel" value="Environment[@name='@{envName}']" />
					</then>
				</elseif>
				<else>
					<var name="obj.sel" value="Environment" />
				</else>
			</if>
			<echo message="Invoking Admin task using the objectselector: ${obj.sel}" />
			<AMXAdminTask remote="true" propsFile="@{remotePropsFile}" action="@{action}" dataFile="@{dataFile}" objectSelector="${obj.sel}" overwrite="@{overwrite}" merge="@{merge}" createIfNotExists="@{createIfNotExists}" force="@{force}" failOnError="@{failOnError}" />
			<echo>${line.separator}${line.separator}</echo>
		</sequential>
	</macrodef>

	<macrodef name="set.environment.messagingbus" backtrace="true" description="Set the environment messaging Bus.">
		<attribute name="envName" default="" description="the name of the environment. Optional. If not specified all environments in data file are selected." />
		<attribute name="dataFile" description="The data file used as input for this admin CLI task. Required." />
		<attribute name="remotePropsFile" default="${remotePropsFile}" description="The remote properties file. Optional. By default the value of the property remotePropsFile defined will be used." />
		<attribute name="action" default="set" description="action to pass to admin task. Default is add." />
		<attribute name="overwrite" default="true" description="overwrite flag passed to the admin task. Optional. Default is true" />
		<attribute name="merge" default="true" description="merge flag passed to the admin task. Optional. Default is true" />
		<attribute name="createIfNotExists" default="true" description="The createIfNotExists flag passed to the admin task. Optional. Default is true" />
		<attribute name="force" default="false" description="force flag passed to the admin task. Optional. Default is false" />
		<attribute name="failOnError" default="true" description="failOnError flag passed to the admin task. Optional. Default is true" />
		<attribute name="objectSelector" default="" description="The object selector to be used with the admin task. Optional. By default, the macrodef tries to construct the objectselector based on the other input attributes. If this is specified, most other attributes like envName etc will be ignored." />
		<sequential>
			<echo>${line.separator}${line.separator}</echo>
			<echo>Set the environment messaging Bus using:</echo>
			<echo>envName: @{envName}</echo>
			<echo>dataFile: @{dataFile}</echo>
			<echo>remotePropsFile: @{remotePropsFile}</echo>
			<echo>objectSelector: @{objectSelector}</echo>
			<echo>action: @{action}</echo>
			<echo>overwrite: @{overwrite}</echo>
			<echo>merge: @{merge}</echo>
			<echo>createIfNotExists: @{createIfNotExists}</echo>
			<echo>force: @{force}</echo>
			<echo>failOnError: @{failOnError}</echo>

			<if>
				<not>
					<equals arg1="@{objectSelector}" arg2="" />
				</not>
				<then>
					<var name="obj.sel" value="@{objectSelector}" />
				</then>
				<elseif>
					<not>
						<equals arg1="@{envName}" arg2="" />
					</not>
					<then>
						<var name="obj.sel" value="Environment[@name='@{envName}']/MessagingBus" />
					</then>
				</elseif>
				<else>
					<var name="obj.sel" value="Environment/MessagingBus" />
				</else>
			</if>
			<echo message="Invoking Admin task using the objectselector: ${obj.sel}" />
			<AMXAdminTask remote="true" propsFile="@{remotePropsFile}" action="@{action}" dataFile="@{dataFile}" objectSelector="${obj.sel}" overwrite="@{overwrite}" merge="@{merge}" createIfNotExists="@{createIfNotExists}" force="@{force}" failOnError="@{failOnError}" />
			<echo>${line.separator}${line.separator}</echo>
		</sequential>
	</macrodef>

	<macrodef name="add.environment.permissions" backtrace="true" description="Set Permissions to Environment.">
		<attribute name="envName" default="" description="the name of the environment. Optional. If not specified all environments in data file are selected." />
		<attribute name="dataFile" description="The data file used as input for this admin CLI task. Required." />
		<attribute name="objectSelector" default="" description="The object selector to be used with the admin task." />
		<attribute name="remotePropsFile" default="${remotePropsFile}" description="The remote properties file." />
		<attribute name="action" default="add" description="action to pass to admin task. Default is add." />
		<attribute name="overwrite" default="true" description="overwrite flag passed to the admin task. Optional. Default is true" />
		<attribute name="merge" default="true" description="merge flag passed to the admin task. Optional. Default is true" />
		<attribute name="createIfNotExists" default="true" description="The createIfNotExists flag passed to the admin task. Optional. Default is true" />
		<attribute name="force" default="false" description="force flag passed to the admin task. Optional. Default is false" />
		<attribute name="failOnError" default="true" description="failOnError flag passed to the admin task. Optional. Default is true" />
		<sequential>
			<echo>${line.separator}${line.separator}</echo>
			<echo>Adding Environment Permissions using:</echo>
			<echo>envName: @{envName}</echo>
			<echo>dataFile: @{dataFile}</echo>
			<echo>remotePropsFile: @{remotePropsFile}</echo>
			<echo>objectSelector: @{objectSelector}</echo>
			<echo>action: @{action}</echo>
			<echo>overwrite: @{overwrite}</echo>
			<echo>merge: @{merge}</echo>
			<echo>createIfNotExists: @{createIfNotExists}</echo>
			<echo>force: @{force}</echo>
			<echo>failOnError: @{failOnError}</echo>
			<if>
				<not>
					<equals arg1="@{objectSelector}" arg2="" />
				</not>
				<then>
					<var name="obj.sel" value="@{objectSelector}" />
				</then>
				<else>
					<if>
						<equals arg1="@{envName}" arg2="" />
						<then>
							<var name="obj.sel" value="Environment" />
						</then>
						<else>
							<var name="obj.sel" value="Environment[@name='@{envName}']" />
						</else>
					</if>
					<var name="obj.sel" value="${obj.sel}/Permissions" />
				</else>
			</if>
			<echo message="Invoking Admin task using the objectselector: ${obj.sel}" />
			<AMXAdminTask remote="true" propsFile="@{remotePropsFile}" action="@{action}" dataFile="@{dataFile}" objectSelector="${obj.sel}" overwrite="@{overwrite}" merge="@{merge}" createIfNotExists="@{createIfNotExists}" force="@{force}" failOnError="@{failOnError}" />
			<echo>${line.separator}${line.separator}</echo>
		</sequential>
	</macrodef>

	<macrodef name="associate.host" backtrace="true" description="Associate host to specified environment. If objectSelector attribute is specified, the envName/hostName attribute is ignored.">
		<attribute name="envName" default="" description="the name of the environment. Optional. If not specified all environments in data file are selected." />
		<attribute name="hostName" default="" description="The name of the host. Optional. If not specified, all the hosts in the data file are selected." />
		<attribute name="dataFile" description="The data file used as input for this admin CLI task. Required." />
		<attribute name="remotePropsFile" default="${remotePropsFile}" description="The remote properties file. Optional. By default the value of the property remotePropsFile defined will be used." />
		<attribute name="action" default="setHostsForEnv" description="action to pass to admin task. Default is setHostsForEnv." />
		<attribute name="overwrite" default="true" description="overwrite flag passed to the admin task. Optional. Default is true" />
		<attribute name="merge" default="true" description="merge flag passed to the admin task. Optional. Default is true" />
		<attribute name="createIfNotExists" default="true" description="The createIfNotExists flag passed to the admin task. Optional. Default is true" />
		<attribute name="force" default="false" description="force flag passed to the admin task. Optional. Default is false" />
		<attribute name="failOnError" default="true" description="failOnError flag passed to the admin task. Optional. Default is true" />
		<attribute name="objectSelector" default="" description="The object selector to be used with the admin task. Optional. By default, the macrodef tries to construct the objectselector based on the other input attributes. If this is specified, most other attributes like envName etc will be ignored." />
		<sequential>
			<echo>${line.separator}${line.separator}</echo>
			<echo>Associating host to Environment using:</echo>
			<echo>envName: @{envName}</echo>
			<echo>hostName: @{hostName}</echo>
			<echo>dataFile: @{dataFile}</echo>
			<echo>remotePropsFile: @{remotePropsFile}</echo>
			<echo>objectSelector: @{objectSelector}</echo>
			<echo>action: @{action}</echo>
			<echo>overwrite: @{overwrite}</echo>
			<echo>merge: @{merge}</echo>
			<echo>createIfNotExists: @{createIfNotExists}</echo>
			<echo>force: @{force}</echo>
			<echo>failOnError: @{failOnError}</echo>
			<if>
				<not>
					<equals arg1="@{objectSelector}" arg2="" />
				</not>
				<then>
					<var name="obj.sel" value="@{objectSelector}" />
				</then>
				<else>
					<if>
						<equals arg1="@{envName}" arg2="" />
						<then>
							<var name="obj.sel" value="Environment" />
						</then>
						<else>
							<var name="obj.sel" value="Environment[@name='@{envName}']" />
						</else>
					</if>
					<if>
						<equals arg1="@{hostName}" arg2="" />
						<then>
							<var name="obj.sel" value="${obj.sel}/Host" />
						</then>
						<else>
							<var name="obj.sel" value="${obj.sel}/Host[@name='@{hostName}']" />
						</else>
					</if>
				</else>
			</if>
			<echo message="Invoking Admin task using the objectselector: ${obj.sel}" />
			<AMXAdminTask remote="true" propsFile="@{remotePropsFile}" action="@{action}" dataFile="@{dataFile}" objectSelector="${obj.sel}" overwrite="@{overwrite}" merge="@{merge}" createIfNotExists="@{createIfNotExists}" force="@{force}" failOnError="@{failOnError}" />
			<echo>${line.separator}${line.separator}</echo>
		</sequential>
	</macrodef>


	<macrodef name="create.node" backtrace="true" description="Create a node in specified specified environment. If objectSelector attribute is specified, some of the input attributes will be ignored.">
		<attribute name="envName" default="" description="the name of the environment. Optional. If not specified all environments in data file are selected." />
		<attribute name="nodeName" default="" description="the name of the node. Optional. If not specified all nodes in data file are selected." />
		<attribute name="dataFile" description="The data file used as input for this admin CLI task. Required." />
		<attribute name="objectSelector" default="" description="The object selector to be used with the admin task. Optional. By default, the macrodef tries to construct the objectselector based on the other input attributes. If this is specified, most other attributes like envName etc will be ignored." />
		<attribute name="remotePropsFile" default="${remotePropsFile}" description="The remote properties file. Optional. By default the value of the property remotePropsFile defined will be used." />
		<attribute name="action" default="add" description="action to pass to admin task. Default is add." />
		<attribute name="overwrite" default="true" description="overwrite flag passed to the admin task. Optional. Default is true" />
		<attribute name="merge" default="true" description="merge flag passed to the admin task. Optional. Default is true" />
		<attribute name="createIfNotExists" default="true" description="The createIfNotExists flag passed to the admin task. Optional. Default is true" />
		<attribute name="force" default="false" description="force flag passed to the admin task. Optional. Default is false" />
		<attribute name="failOnError" default="true" description="failOnError flag passed to the admin task. Optional. Default is true" />
		<sequential>
			<echo>${line.separator}${line.separator}</echo>
			<echo>Create Node in an environment using:</echo>
			<echo>envName: @{envName}</echo>
			<echo>nodeName: @{nodeName}</echo>
			<echo>dataFile: @{dataFile}</echo>
			<echo>remotePropsFile: @{remotePropsFile}</echo>
			<echo>objectSelector: @{objectSelector}</echo>
			<echo>action: @{action}</echo>
			<echo>overwrite: @{overwrite}</echo>
			<echo>merge: @{merge}</echo>
			<echo>createIfNotExists: @{createIfNotExists}</echo>
			<echo>force: @{force}</echo>
			<echo>failOnError: @{failOnError}</echo>
			<if>
				<not>
					<equals arg1="@{objectSelector}" arg2="" />
				</not>
				<then>
					<var name="obj.sel" value="@{objectSelector}" />
				</then>
				<else>
					<if>
						<equals arg1="@{envName}" arg2="" />
						<then>
							<var name="obj.sel" value="Environment" />
						</then>
						<else>
							<var name="obj.sel" value="Environment[@name='@{envName}']" />
						</else>
					</if>
					<if>
						<equals arg1="@{nodeName}" arg2="" />
						<then>
							<var name="obj.sel" value="${obj.sel}/Node" />
						</then>
						<else>
							<var name="obj.sel" value="${obj.sel}/Node[@name='@{nodeName}']" />
						</else>
					</if>
				</else>
			</if>
			<echo message="Invoking Admin task using the objectselector: ${obj.sel}" />
			<AMXAdminTask remote="true" propsFile="@{remotePropsFile}" action="@{action}" dataFile="@{dataFile}" objectSelector="${obj.sel}" overwrite="@{overwrite}" merge="@{merge}" createIfNotExists="@{createIfNotExists}" force="@{force}" failOnError="@{failOnError}" />
			<echo>${line.separator}${line.separator}</echo>
		</sequential>
	</macrodef>

	<macrodef name="refresh.node" backtrace="true" description="refresh node">
		<attribute name="envName" default="" description="the name of the environment. Optional. If not specified all environments in data file are selected." />
		<attribute name="nodeName" default="" description="the name of the node. Optional. If not specified all nodes in data file are selected." />
		<attribute name="dataFile" description="The data file used as input for this admin CLI task. Required." />
		<attribute name="objectSelector" default="" description="The object selector to be used with the admin task. Optional. By default, the macrodef tries to construct the objectselector based on the other input attributes. If this is specified, most other attributes like envName etc will be ignored." />
		<attribute name="remotePropsFile" default="${remotePropsFile}" description="The remote properties file. Optional. By default the value of the property remotePropsFile defined will be used." />
		<attribute name="action" default="refresh" description="action to pass to admin task. Default is refresh." />
		<attribute name="overwrite" default="true" description="overwrite flag passed to the admin task. Optional. Default is true" />
		<attribute name="merge" default="true" description="merge flag passed to the admin task. Optional. Default is true" />
		<attribute name="force" default="false" description="force flag passed to the admin task. Optional. Default is false" />
		<attribute name="failOnError" default="true" description="failOnError flag passed to the admin task. Optional. Default is true" />
		<sequential>
			<echo>${line.separator}${line.separator}</echo>
			<echo>Create Node in an environment using:</echo>
			<echo>envName: @{envName}</echo>
			<echo>nodeName: @{nodeName}</echo>
			<echo>dataFile: @{dataFile}</echo>
			<echo>remotePropsFile: @{remotePropsFile}</echo>
			<echo>objectSelector: @{objectSelector}</echo>
			<echo>action: @{action}</echo>
			<echo>overwrite: @{overwrite}</echo>
			<echo>merge: @{merge}</echo>
			<echo>createIfNotExists: @{createIfNotExists}</echo>
			<echo>force: @{force}</echo>
			<echo>failOnError: @{failOnError}</echo>
			<if>
				<not>
					<equals arg1="@{objectSelector}" arg2="" />
				</not>
				<then>
					<var name="obj.sel" value="@{objectSelector}" />
				</then>
				<else>
					<if>
						<equals arg1="@{envName}" arg2="" />
						<then>
							<var name="obj.sel" value="Environment" />
						</then>
						<else>
							<var name="obj.sel" value="Environment[@name='@{envName}']" />
						</else>
					</if>
					<if>
						<equals arg1="@{nodeName}" arg2="" />
						<then>
							<var name="obj.sel" value="${obj.sel}/Node" />
						</then>
						<else>
							<var name="obj.sel" value="${obj.sel}/Node[@name='@{nodeName}']" />
						</else>
					</if>
				</else>
			</if>
			<echo message="Invoking Admin task using the objectselector: ${obj.sel}" />
			<AMXAdminTask remote="true" propsFile="@{remotePropsFile}" action="@{action}" dataFile="@{dataFile}" objectSelector="${obj.sel}" overwrite="@{overwrite}" merge="@{merge}" createIfNotExists="@{createIfNotExists}" force="@{force}" failOnError="@{failOnError}" />
			<echo>${line.separator}${line.separator}</echo>
		</sequential>
	</macrodef>
	
	<macrodef name="update.node" backtrace="true" description="update a node in specified specified environment. If objectSelector attribute is specified, some of the input attributes will be ignored.">
		<attribute name="envName" default="" description="the name of the environment. Optional. If not specified all environments in data file are selected." />
		<attribute name="nodeName" default="" description="the name of the node. Optional. If not specified all nodes in data file are selected." />
		<attribute name="dataFile" description="The data file used as input for this admin CLI task. Required." />
		<attribute name="objectSelector" default="" description="The object selector to be used with the admin task. Optional. By default, the macrodef tries to construct the objectselector based on the other input attributes. If this is specified, most other attributes like envName etc will be ignored." />
		<attribute name="remotePropsFile" default="${remotePropsFile}" description="The remote properties file. Optional. By default the value of the property remotePropsFile defined will be used." />
		<attribute name="action" default="edit" description="action to pass to admin task. Default is update." />
		<attribute name="overwrite" default="true" description="overwrite flag passed to the admin task. Optional. Default is true" />
		<attribute name="merge" default="true" description="merge flag passed to the admin task. Optional. Default is true" />
		<attribute name="createIfNotExists" default="true" description="The createIfNotExists flag passed to the admin task. Optional. Default is true" />
		<attribute name="force" default="false" description="force flag passed to the admin task. Optional. Default is false" />
		<attribute name="failOnError" default="true" description="failOnError flag passed to the admin task. Optional. Default is true" />
		<sequential>
			<echo>${line.separator}${line.separator}</echo>
			<echo>Create Node in an environment using:</echo>
			<echo>envName: @{envName}</echo>
			<echo>nodeName: @{nodeName}</echo>
			<echo>dataFile: @{dataFile}</echo>
			<echo>remotePropsFile: @{remotePropsFile}</echo>
			<echo>objectSelector: @{objectSelector}</echo>
			<echo>action: @{action}</echo>
			<echo>overwrite: @{overwrite}</echo>
			<echo>merge: @{merge}</echo>
			<echo>createIfNotExists: @{createIfNotExists}</echo>
			<echo>force: @{force}</echo>
			<echo>failOnError: @{failOnError}</echo>
			<if>
				<not>
					<equals arg1="@{objectSelector}" arg2="" />
				</not>
				<then>
					<var name="obj.sel" value="@{objectSelector}" />
				</then>
				<else>
					<if>
						<equals arg1="@{envName}" arg2="" />
						<then>
							<var name="obj.sel" value="Environment" />
						</then>
						<else>
							<var name="obj.sel" value="Environment[@name='@{envName}']" />
						</else>
					</if>
					<if>
						<equals arg1="@{nodeName}" arg2="" />
						<then>
							<var name="obj.sel" value="${obj.sel}/Node" />
						</then>
						<else>
							<var name="obj.sel" value="${obj.sel}/Node[@name='@{nodeName}']" />
						</else>
					</if>
				</else>
			</if>
			<echo message="Invoking Admin task using the objectselector: ${obj.sel}" />
			<AMXAdminTask remote="true" propsFile="@{remotePropsFile}" action="@{action}" dataFile="@{dataFile}" objectSelector="${obj.sel}" overwrite="@{overwrite}" merge="@{merge}" createIfNotExists="@{createIfNotExists}" force="@{force}" failOnError="@{failOnError}" />
			<echo>${line.separator}${line.separator}</echo>
		</sequential>
	</macrodef>
	
	<macrodef name="delete.node" backtrace="true" description="Delete a node in specified specified environment. If objectSelector attribute is specified, some of the input attributes will be ignored.">
		<attribute name="envName" default="" description="the name of the environment. Optional. If not specified all environments in data file are selected." />
		<attribute name="nodeName" default="" description="the name of the node. Optional. If not specified all nodes in data file are selected." />
		<attribute name="dataFile" description="The data file used as input for this admin CLI task. Required." />
		<attribute name="objectSelector" default="" description="The object selector to be used with the admin task. Optional. By default, the macrodef tries to construct the objectselector based on the other input attributes. If this is specified, most other attributes like envName etc will be ignored." />
		<attribute name="remotePropsFile" default="${remotePropsFile}" description="The remote properties file. Optional. By default the value of the property remotePropsFile defined will be used." />
		<attribute name="action" default="delete" description="action to pass to admin task. Default is delete." />
		<attribute name="overwrite" default="true" description="overwrite flag passed to the admin task. Optional. Default is true" />
		<attribute name="merge" default="true" description="merge flag passed to the admin task. Optional. Default is true" />
		<attribute name="createIfNotExists" default="true" description="The createIfNotExists flag passed to the admin task. Optional. Default is true" />
		<attribute name="force" default="false" description="force flag passed to the admin task. Optional. Default is false" />
		<attribute name="failOnError" default="true" description="failOnError flag passed to the admin task. Optional. Default is true" />
		<sequential>
			<echo>${line.separator}${line.separator}</echo>
			<echo>Delete Node in an environment using:</echo>
			<echo>envName: @{envName}</echo>
			<echo>nodeName: @{nodeName}</echo>
			<echo>dataFile: @{dataFile}</echo>
			<echo>remotePropsFile: @{remotePropsFile}</echo>
			<echo>objectSelector: @{objectSelector}</echo>
			<echo>action: @{action}</echo>
			<echo>overwrite: @{overwrite}</echo>
			<echo>merge: @{merge}</echo>
			<echo>createIfNotExists: @{createIfNotExists}</echo>
			<echo>force: @{force}</echo>
			<echo>failOnError: @{failOnError}</echo>
			<if>
				<not>
					<equals arg1="@{objectSelector}" arg2="" />
				</not>
				<then>
					<var name="obj.sel" value="@{objectSelector}" />
				</then>
				<else>
					<if>
						<equals arg1="@{envName}" arg2="" />
						<then>
							<var name="obj.sel" value="Environment" />
						</then>
						<else>
							<var name="obj.sel" value="Environment[@name='@{envName}']" />
						</else>
					</if>
					<if>
						<equals arg1="@{nodeName}" arg2="" />
						<then>
							<var name="obj.sel" value="${obj.sel}/Node" />
						</then>
						<else>
							<var name="obj.sel" value="${obj.sel}/Node[@name='@{nodeName}']" />
						</else>
					</if>
				</else>
			</if>
			<echo message="Invoking Admin task using the objectselector: ${obj.sel}" />
			<AMXAdminTask remote="true" propsFile="@{remotePropsFile}" action="@{action}" dataFile="@{dataFile}" objectSelector="${obj.sel}" overwrite="@{overwrite}" merge="@{merge}" createIfNotExists="@{createIfNotExists}" force="@{force}" failOnError="@{failOnError}" />
			<echo>${line.separator}${line.separator}</echo>
		</sequential>
	</macrodef>


	<macrodef name="install.node" backtrace="true" description="Install a node in specified specified environment. If objectSelector attribute is specified, some of the input attributes will be ignored.">
		<attribute name="envName" default="" description="the name of the environment. Optional. If not specified all environments in data file are selected." />
		<attribute name="nodeName" default="" description="the name of the node. Optional. If not specified all nodes in data file are selected." />
		<attribute name="dataFile" description="The data file used as input for this admin CLI task. Required." />
		<attribute name="objectSelector" default="" description="The object selector to be used with the admin task. Optional. By default, the macrodef tries to construct the objectselector based on the other input attributes. If this is specified, most other attributes like envName etc will be ignored." />
		<attribute name="remotePropsFile" default="${remotePropsFile}" description="The remote properties file. Optional. By default the value of the property remotePropsFile defined will be used." />
		<attribute name="action" default="install" description="action to pass to admin task. Default is install." />
		<attribute name="overwrite" default="true" description="overwrite flag passed to the admin task. Optional. Default is true" />
		<attribute name="merge" default="true" description="merge flag passed to the admin task. Optional. Default is true" />
		<attribute name="createIfNotExists" default="true" description="The createIfNotExists flag passed to the admin task. Optional. Default is true" />
		<attribute name="force" default="false" description="force flag passed to the admin task. Optional. Default is false" />
		<attribute name="failOnError" default="true" description="failOnError flag passed to the admin task. Optional. Default is true" />
		<attribute name="timeout" default="120" />
		<sequential>
			<echo>${line.separator}${line.separator}</echo>
			<echo>Install Node in an environment using:</echo>
			<echo>envName: @{envName}</echo>
			<echo>nodeName: @{nodeName}</echo>
			<echo>dataFile: @{dataFile}</echo>
			<echo>remotePropsFile: @{remotePropsFile}</echo>
			<echo>objectSelector: @{objectSelector}</echo>
			<echo>action: @{action}</echo>
			<echo>overwrite: @{overwrite}</echo>
			<echo>merge: @{merge}</echo>
			<echo>createIfNotExists: @{createIfNotExists}</echo>
			<echo>force: @{force}</echo>
			<echo>failOnError: @{failOnError}</echo>
			<echo>timeout: @{timeout}</echo>
			<if>
				<not>
					<equals arg1="@{objectSelector}" arg2="" />
				</not>
				<then>
					<var name="obj.sel" value="@{objectSelector}" />
				</then>
				<else>
					<if>
						<equals arg1="@{envName}" arg2="" />
						<then>
							<var name="obj.sel" value="Environment" />
						</then>
						<else>
							<var name="obj.sel" value="Environment[@name='@{envName}']" />
						</else>
					</if>
					<if>
						<equals arg1="@{nodeName}" arg2="" />
						<then>
							<var name="obj.sel" value="${obj.sel}/Node" />
						</then>
						<else>
							<var name="obj.sel" value="${obj.sel}/Node[@name='@{nodeName}']" />
						</else>
					</if>
				</else>
			</if>
			<echo message="Invoking Admin task using the objectselector: ${obj.sel}" />
			<AMXAdminTask remote="true" propsFile="@{remotePropsFile}" action="@{action}" dataFile="@{dataFile}" objectSelector="${obj.sel}" overwrite="@{overwrite}" merge="@{merge}" createIfNotExists="@{createIfNotExists}" force="@{force}" failOnError="@{failOnError}" timeout="@{timeout}" />
			<echo>${line.separator}${line.separator}</echo>
		</sequential>
	</macrodef>


	<macrodef name="uninstall.node" backtrace="true" description="Uninstall a node in specified specified environment. If objectSelector attribute is specified, some of the input attributes will be ignored.">
		<attribute name="envName" default="" description="the name of the environment. Optional. If not specified all environments in data file are selected." />
		<attribute name="nodeName" default="" description="the name of the node. Optional. If not specified all nodes in data file are selected." />
		<attribute name="dataFile" description="The data file used as input for this admin CLI task. Required." />
		<attribute name="objectSelector" default="" description="The object selector to be used with the admin task. Optional. By default, the macrodef tries to construct the objectselector based on the other input attributes. If this is specified, most other attributes like envName etc will be ignored." />
		<attribute name="remotePropsFile" default="${remotePropsFile}" description="The remote properties file. Optional. By default the value of the property remotePropsFile defined will be used." />
		<attribute name="action" default="uninstall" description="action to pass to admin task. Default is uninstall." />
		<attribute name="overwrite" default="true" description="overwrite flag passed to the admin task. Optional. Default is true" />
		<attribute name="merge" default="true" description="merge flag passed to the admin task. Optional. Default is true" />
		<attribute name="createIfNotExists" default="true" description="The createIfNotExists flag passed to the admin task. Optional. Default is true" />
		<attribute name="force" default="false" description="force flag passed to the admin task. Optional. Default is false" />
		<attribute name="failOnError" default="true" description="failOnError flag passed to the admin task. Optional. Default is true" />
		<attribute name="timeout" default="120" />
		<sequential>
			<echo>${line.separator}${line.separator}</echo>
			<echo>Uninstall Node in an environment using:</echo>
			<echo>envName: @{envName}</echo>
			<echo>nodeName: @{nodeName}</echo>
			<echo>dataFile: @{dataFile}</echo>
			<echo>remotePropsFile: @{remotePropsFile}</echo>
			<echo>objectSelector: @{objectSelector}</echo>
			<echo>action: @{action}</echo>
			<echo>overwrite: @{overwrite}</echo>
			<echo>merge: @{merge}</echo>
			<echo>createIfNotExists: @{createIfNotExists}</echo>
			<echo>force: @{force}</echo>
			<echo>failOnError: @{failOnError}</echo>
			<echo>timeout: @{timeout}</echo>
			<if>
				<not>
					<equals arg1="@{objectSelector}" arg2="" />
				</not>
				<then>
					<var name="obj.sel" value="@{objectSelector}" />
				</then>
				<else>
					<if>
						<equals arg1="@{envName}" arg2="" />
						<then>
							<var name="obj.sel" value="Environment" />
						</then>
						<else>
							<var name="obj.sel" value="Environment[@name='@{envName}']" />
						</else>
					</if>
					<if>
						<equals arg1="@{nodeName}" arg2="" />
						<then>
							<var name="obj.sel" value="${obj.sel}/Node" />
						</then>
						<else>
							<var name="obj.sel" value="${obj.sel}/Node[@name='@{nodeName}']" />
						</else>
					</if>
				</else>
			</if>
			<echo message="Invoking Admin task using the objectselector: ${obj.sel}" />
			<AMXAdminTask remote="true" propsFile="@{remotePropsFile}" action="@{action}" dataFile="@{dataFile}" objectSelector="${obj.sel}" overwrite="@{overwrite}" merge="@{merge}" createIfNotExists="@{createIfNotExists}" force="@{force}" failOnError="@{failOnError}" timeout="@{timeout}" />
			<echo>${line.separator}${line.separator}</echo>
		</sequential>
	</macrodef>

	<macrodef name="start.node" backtrace="true" description="start a node in specified specified environment. If objectSelector attribute is specified, some of the input attributes will be ignored.">
		<attribute name="envName" default="" description="the name of the environment. Optional. If not specified all environments in data file are selected." />
		<attribute name="nodeName" default="" description="the name of the node. Optional. If not specified all nodes in data file are selected." />
		<attribute name="dataFile" description="The data file used as input for this admin CLI task. Required." />
		<attribute name="objectSelector" default="" description="The object selector to be used with the admin task. Optional. By default, the macrodef tries to construct the objectselector based on the other input attributes. If this is specified, most other attributes like envName etc will be ignored." />
		<attribute name="remotePropsFile" default="${remotePropsFile}" description="The remote properties file. Optional. By default the value of the property remotePropsFile defined will be used." />
		<attribute name="action" default="start" description="action to pass to admin task. Default is start." />
		<attribute name="overwrite" default="true" description="overwrite flag passed to the admin task. Optional. Default is true" />
		<attribute name="merge" default="true" description="merge flag passed to the admin task. Optional. Default is true" />
		<attribute name="createIfNotExists" default="true" description="The createIfNotExists flag passed to the admin task. Optional. Default is true" />
		<attribute name="force" default="false" description="force flag passed to the admin task. Optional. Default is false" />
		<attribute name="failOnError" default="true" description="failOnError flag passed to the admin task. Optional. Default is true" />
		<attribute name="timeout" default="240" />
		<sequential>
			<echo>${line.separator}${line.separator}</echo>
			<echo>Start Node in an environment using:</echo>
			<echo>envName: @{envName}</echo>
			<echo>nodeName: @{nodeName}</echo>
			<echo>dataFile: @{dataFile}</echo>
			<echo>remotePropsFile: @{remotePropsFile}</echo>
			<echo>objectSelector: @{objectSelector}</echo>
			<echo>action: @{action}</echo>
			<echo>overwrite: @{overwrite}</echo>
			<echo>merge: @{merge}</echo>
			<echo>createIfNotExists: @{createIfNotExists}</echo>
			<echo>force: @{force}</echo>
			<echo>failOnError: @{failOnError}</echo>
			<echo>timeout: @{timeout}</echo>
			<if>
				<not>
					<equals arg1="@{objectSelector}" arg2="" />
				</not>
				<then>
					<var name="obj.sel" value="@{objectSelector}" />
				</then>
				<else>
					<if>
						<equals arg1="@{envName}" arg2="" />
						<then>
							<var name="obj.sel" value="Environment" />
						</then>
						<else>
							<var name="obj.sel" value="Environment[@name='@{envName}']" />
						</else>
					</if>
					<if>
						<equals arg1="@{nodeName}" arg2="" />
						<then>
							<var name="obj.sel" value="${obj.sel}/Node" />
						</then>
						<else>
							<var name="obj.sel" value="${obj.sel}/Node[@name='@{nodeName}']" />
						</else>
					</if>
				</else>
			</if>
			<echo message="Invoking Admin task using the objectselector: ${obj.sel}" />
			<AMXAdminTask remote="true" propsFile="@{remotePropsFile}" action="@{action}" dataFile="@{dataFile}" objectSelector="${obj.sel}" overwrite="@{overwrite}" merge="@{merge}" createIfNotExists="@{createIfNotExists}" force="@{force}" failOnError="@{failOnError}" timeout="@{timeout}" />
			<echo>${line.separator}${line.separator}</echo>
		</sequential>
	</macrodef>


	<macrodef name="stop.node" backtrace="true" description="Stop a node in specified specified environment. If objectSelector attribute is specified, some of the input attributes will be ignored.">
		<attribute name="envName" default="" description="the name of the environment. Optional. If not specified all environments in data file are selected." />
		<attribute name="nodeName" default="" description="the name of the node. Optional. If not specified all nodes in data file are selected." />
		<attribute name="dataFile" description="The data file used as input for this admin CLI task. Required." />
		<attribute name="objectSelector" default="" description="The object selector to be used with the admin task. Optional. By default, the macrodef tries to construct the objectselector based on the other input attributes. If this is specified, most other attributes like envName etc will be ignored." />
		<attribute name="remotePropsFile" default="${remotePropsFile}" description="The remote properties file. Optional. By default the value of the property remotePropsFile defined will be used." />
		<attribute name="action" default="stop" description="action to pass to admin task. Default is stop." />
		<attribute name="overwrite" default="true" description="overwrite flag passed to the admin task. Optional. Default is true" />
		<attribute name="merge" default="true" description="merge flag passed to the admin task. Optional. Default is true" />
		<attribute name="createIfNotExists" default="true" description="The createIfNotExists flag passed to the admin task. Optional. Default is true" />
		<attribute name="force" default="false" description="force flag passed to the admin task. Optional. Default is false" />
		<attribute name="failOnError" default="true" description="failOnError flag passed to the admin task. Optional. Default is true" />
		<attribute name="timeout" default="120" />
		<sequential>
			<echo>${line.separator}${line.separator}</echo>
			<echo>Stop Node in an environment using:</echo>
			<echo>envName: @{envName}</echo>
			<echo>nodeName: @{nodeName}</echo>
			<echo>dataFile: @{dataFile}</echo>
			<echo>remotePropsFile: @{remotePropsFile}</echo>
			<echo>objectSelector: @{objectSelector}</echo>
			<echo>action: @{action}</echo>
			<echo>overwrite: @{overwrite}</echo>
			<echo>merge: @{merge}</echo>
			<echo>createIfNotExists: @{createIfNotExists}</echo>
			<echo>force: @{force}</echo>
			<echo>failOnError: @{failOnError}</echo>
			<echo>timeout: @{timeout}</echo>
			<if>
				<not>
					<equals arg1="@{objectSelector}" arg2="" />
				</not>
				<then>
					<var name="obj.sel" value="@{objectSelector}" />
				</then>
				<else>
					<if>
						<equals arg1="@{envName}" arg2="" />
						<then>
							<var name="obj.sel" value="Environment" />
						</then>
						<else>
							<var name="obj.sel" value="Environment[@name='@{envName}']" />
						</else>
					</if>
					<if>
						<equals arg1="@{nodeName}" arg2="" />
						<then>
							<var name="obj.sel" value="${obj.sel}/Node" />
						</then>
						<else>
							<var name="obj.sel" value="${obj.sel}/Node[@name='@{nodeName}']" />
						</else>
					</if>
				</else>
			</if>
			<echo message="Invoking Admin task using the objectselector: ${obj.sel}" />
			<AMXAdminTask remote="true" propsFile="@{remotePropsFile}" action="@{action}" dataFile="@{dataFile}" objectSelector="${obj.sel}" overwrite="@{overwrite}" merge="@{merge}" createIfNotExists="@{createIfNotExists}" force="@{force}" failOnError="@{failOnError}" timeout="@{timeout}" options="normal" />
			<echo>${line.separator}${line.separator}</echo>
		</sequential>
	</macrodef>

	<macrodef name="add.node.permissions" backtrace="true" description="Set Permissions to Node. If objectSelector attribute is specified, some of the input attributes will be ignored.">
		<attribute name="envName" default="" description="the name of the environment. Optional. If not specified all environments in data file are selected." />
		<attribute name="nodeName" default="" description="The name of the node. Optional. If not specified all the applications will be selected." />
		<attribute name="dataFile" description="The data file used as input for this admin CLI task. Required." />
		<attribute name="objectSelector" default="" description="The object selector to be used with the admin task. Optional. By default, the macrodef tries to construct the objectselector based on the other input attributes. If this is specified, most other attributes like envName etc will be ignored." />
		<attribute name="remotePropsFile" default="${remotePropsFile}" description="The remote properties file. Optional. By default the value of the property remotePropsFile defined will be used." />
		<attribute name="action" default="add" description="action to pass to admin task. Default is add." />
		<attribute name="overwrite" default="true" description="overwrite flag passed to the admin task. Optional. Default is true" />
		<attribute name="merge" default="true" description="merge flag passed to the admin task. Optional. Default is true" />
		<attribute name="createIfNotExists" default="true" description="The createIfNotExists flag passed to the admin task. Optional. Default is true" />
		<attribute name="force" default="false" description="force flag passed to the admin task. Optional. Default is false" />
		<attribute name="failOnError" default="true" description="failOnError flag passed to the admin task. Optional. Default is true" />
		<sequential>
			<echo>${line.separator}${line.separator}</echo>
			<echo>Adding Node Permissions using:</echo>
			<echo>envName: @{envName}</echo>
			<echo>nodeName: @{nodeName}</echo>
			<echo>dataFile: @{dataFile}</echo>
			<echo>remotePropsFile: @{remotePropsFile}</echo>
			<echo>objectSelector: @{objectSelector}</echo>
			<echo>action: @{action}</echo>
			<echo>overwrite: @{overwrite}</echo>
			<echo>merge: @{merge}</echo>
			<echo>createIfNotExists: @{createIfNotExists}</echo>
			<echo>force: @{force}</echo>
			<echo>failOnError: @{failOnError}</echo>
			<if>
				<not>
					<equals arg1="@{objectSelector}" arg2="" />
				</not>
				<then>
					<var name="obj.sel" value="@{objectSelector}" />
				</then>
				<else>
					<if>
						<equals arg1="@{envName}" arg2="" />
						<then>
							<var name="obj.sel" value="Environment" />
						</then>
						<else>
							<var name="obj.sel" value="Environment[@name='@{envName}']" />
						</else>
					</if>
					<if>
						<equals arg1="@{nodeName}" arg2="" />
						<then>
							<var name="obj.sel" value="${obj.sel}/Node" />
						</then>
						<else>
							<var name="obj.sel" value="${obj.sel}/Node[@name='@{nodeName}']" />
						</else>
					</if>
					<var name="obj.sel" value="${obj.sel}/Permissions" />
				</else>
			</if>
			<echo message="Invoking Admin task using the objectselector: ${obj.sel}" />
			<AMXAdminTask remote="true" propsFile="@{remotePropsFile}" action="@{action}" dataFile="@{dataFile}" objectSelector="${obj.sel}" overwrite="@{overwrite}" merge="@{merge}" createIfNotExists="@{createIfNotExists}" force="@{force}" failOnError="@{failOnError}" />
			<echo>${line.separator}${line.separator}</echo>
		</sequential>
	</macrodef>
	
	<macrodef name="set.jca.configuration" backtrace="true" description="Set JCA configuration of Node. If objectSelector attribute is specified, some of the input attributes will be ignored.">
		<attribute name="envName" default="" description="the name of the environment. Optional. If not specified all environments in data file are selected." />
		<attribute name="nodeName" default="" description="The name of the node. Optional. If not specified all the applications will be selected." />
		<attribute name="dataFile" description="The data file used as input for this admin CLI task. Required." />
		<attribute name="objectSelector" default="" description="The object selector to be used with the admin task. Optional. By default, the macrodef tries to construct the objectselector based on the other input attributes. If this is specified, most other attributes like envName etc will be ignored." />
		<attribute name="remotePropsFile" default="${remotePropsFile}" description="The remote properties file. Optional. By default the value of the property remotePropsFile defined will be used." />
		<attribute name="action" default="set" description="action to pass to admin task. Default is add." />
		<attribute name="overwrite" default="true" description="overwrite flag passed to the admin task. Optional. Default is true" />
		<attribute name="merge" default="true" description="merge flag passed to the admin task. Optional. Default is true" />
		<attribute name="createIfNotExists" default="true" description="The createIfNotExists flag passed to the admin task. Optional. Default is true" />
		<attribute name="force" default="false" description="force flag passed to the admin task. Optional. Default is false" />
		<attribute name="failOnError" default="true" description="failOnError flag passed to the admin task. Optional. Default is true" />
		<sequential>
			<echo>${line.separator}${line.separator}</echo>
			<echo>Adding Node Permissions using:</echo>
			<echo>envName: @{envName}</echo>
			<echo>nodeName: @{nodeName}</echo>
			<echo>dataFile: @{dataFile}</echo>
			<echo>remotePropsFile: @{remotePropsFile}</echo>
			<echo>objectSelector: @{objectSelector}</echo>
			<echo>action: @{action}</echo>
			<echo>overwrite: @{overwrite}</echo>
			<echo>merge: @{merge}</echo>
			<echo>createIfNotExists: @{createIfNotExists}</echo>
			<echo>force: @{force}</echo>
			<echo>failOnError: @{failOnError}</echo>
			<if>
				<not>
					<equals arg1="@{objectSelector}" arg2="" />
				</not>
				<then>
					<var name="obj.sel" value="@{objectSelector}" />
				</then>
				<else>
					<if>
						<equals arg1="@{envName}" arg2="" />
						<then>
							<var name="obj.sel" value="Environment" />
						</then>
						<else>
							<var name="obj.sel" value="Environment[@name='@{envName}']" />
						</else>
					</if>
					<if>
						<equals arg1="@{nodeName}" arg2="" />
						<then>
							<var name="obj.sel" value="${obj.sel}/Node" />
						</then>
						<else>
							<var name="obj.sel" value="${obj.sel}/Node[@name='@{nodeName}']" />
						</else>
					</if>
					<var name="obj.sel" value="${obj.sel}/Permissions" />
				</else>
			</if>
			<echo message="Invoking Admin task using the objectselector: ${obj.sel}" />
			<AMXAdminTask remote="true" propsFile="@{remotePropsFile}" action="@{action}" dataFile="@{dataFile}" objectSelector="${obj.sel}" overwrite="@{overwrite}" merge="@{merge}" createIfNotExists="@{createIfNotExists}" force="@{force}" failOnError="@{failOnError}" />
			<echo>${line.separator}${line.separator}</echo>
		</sequential>
	</macrodef>
	
	<macrodef name="deploy.log" backtrace="true" description="deploy logger to Node. If objectSelector attribute is specified, some of the input attributes will be ignored.">
		<attribute name="envName" default="" description="the name of the environment. Optional. If not specified all environments in data file are selected." />
		<attribute name="nodeName" default="" description="The name of the node. Optional. If not specified all the applications will be selected." />
		<attribute name="dataFile" description="The data file used as input for this admin CLI task. Required." />
		<attribute name="objectSelector" default="" description="The object selector to be used with the admin task. Optional. By default, the macrodef tries to construct the objectselector based on the other input attributes. If this is specified, most other attributes like envName etc will be ignored." />
		<attribute name="remotePropsFile" default="${remotePropsFile}" description="The remote properties file. Optional. By default the value of the property remotePropsFile defined will be used." />
		<attribute name="action" default="deploy" description="action to pass to admin task. Default is add." />
		<attribute name="overwrite" default="true" description="overwrite flag passed to the admin task. Optional. Default is true" />
		<attribute name="merge" default="true" description="merge flag passed to the admin task. Optional. Default is true" />
		<attribute name="createIfNotExists" default="true" description="The createIfNotExists flag passed to the admin task. Optional. Default is true" />
		<attribute name="force" default="false" description="force flag passed to the admin task. Optional. Default is false" />
		<attribute name="failOnError" default="true" description="failOnError flag passed to the admin task. Optional. Default is true" />
		<sequential>
			<echo>${line.separator}${line.separator}</echo>
			<echo>Adding Node Permissions using:</echo>
			<echo>envName: @{envName}</echo>
			<echo>nodeName: @{nodeName}</echo>
			<echo>dataFile: @{dataFile}</echo>
			<echo>remotePropsFile: @{remotePropsFile}</echo>
			<echo>objectSelector: @{objectSelector}</echo>
			<echo>action: @{action}</echo>
			<echo>overwrite: @{overwrite}</echo>
			<echo>merge: @{merge}</echo>
			<echo>createIfNotExists: @{createIfNotExists}</echo>
			<echo>force: @{force}</echo>
			<echo>failOnError: @{failOnError}</echo>
			<if>
				<not>
					<equals arg1="@{objectSelector}" arg2="" />
				</not>
				<then>
					<var name="obj.sel" value="@{objectSelector}" />
				</then>
				<else>
					<if>
						<equals arg1="@{envName}" arg2="" />
						<then>
							<var name="obj.sel" value="Environment" />
						</then>
						<else>
							<var name="obj.sel" value="Environment[@name='@{envName}']" />
						</else>
					</if>
					<if>
						<equals arg1="@{nodeName}" arg2="" />
						<then>
							<var name="obj.sel" value="${obj.sel}/Node" />
						</then>
						<else>
							<var name="obj.sel" value="${obj.sel}/Node[@name='@{nodeName}']" />
						</else>
					</if>
					<var name="obj.sel" value="${obj.sel}/Permissions" />
				</else>
			</if>
			<echo message="Invoking Admin task using the objectselector: ${obj.sel}" />
			<AMXAdminTask remote="true" propsFile="@{remotePropsFile}" action="@{action}" dataFile="@{dataFile}" objectSelector="${obj.sel}" overwrite="@{overwrite}" merge="@{merge}" createIfNotExists="@{createIfNotExists}" force="@{force}" failOnError="@{failOnError}" />
			<echo>${line.separator}${line.separator}</echo>
		</sequential>
	</macrodef>		
	
	<macrodef name="upload.daa" backtrace="true" description="Upload DAA into amx administrator. If objectSelector attribute is specified, some of the input attributes will be ignored.">
		<attribute name="dataFile" description="The data file used as input for this admin CLI task. Required." />
		<attribute name="objectSelector" default="DAA" />
		<attribute name="remotePropsFile" default="${remotePropsFile}" description="The remote properties file. Optional. By default the value of the property remotePropsFile defined will be used." />
		<attribute name="action" default="add" description="action to pass to admin task. Default is add." />
		<attribute name="overwrite" default="true" description="overwrite flag passed to the admin task. Optional. Default is true" />
		<attribute name="merge" default="true" description="merge flag passed to the admin task. Optional. Default is true" />
		<attribute name="createIfNotExists" default="true" description="The createIfNotExists flag passed to the admin task. Optional. Default is true" />
		<attribute name="force" default="false" description="force flag passed to the admin task. Optional. Default is false" />
		<attribute name="failOnError" default="true" description="failOnError flag passed to the admin task. Optional. Default is true" />
		<sequential>
			<echo>${line.separator}${line.separator}</echo>
			<echo>Upload DAA using:</echo>
			<echo>dataFile: @{dataFile}</echo>
			<echo>remotePropsFile: @{remotePropsFile}</echo>
			<echo>objectSelector: @{objectSelector}</echo>
			<echo>action: @{action}</echo>
			<echo>overwrite: @{overwrite}</echo>
			<echo>merge: @{merge}</echo>
			<echo>createIfNotExists: @{createIfNotExists}</echo>
			<echo>force: @{force}</echo>
			<echo>failOnError: @{failOnError}</echo>
			<AMXAdminTask remote="true" propsFile="@{remotePropsFile}" action="@{action}" dataFile="@{dataFile}" objectSelector="@{objectSelector}" overwrite="@{overwrite}" merge="@{merge}" createIfNotExists="@{createIfNotExists}" force="@{force}" failOnError="@{failOnError}" />
			<echo>${line.separator}${line.separator}</echo>
		</sequential>
	</macrodef>

	
	<macrodef name="download.daa" backtrace="true" description="download DAA into amx administrator. If objectSelector attribute is specified, some of the input attributes will be ignored.">
		<attribute name="dataFile" description="The data file used as input for this admin CLI task. Required." />
		<attribute name="objectSelector" default="AppTemplate" />
		<attribute name="remotePropsFile" default="${remotePropsFile}" description="The remote properties file. Optional. By default the value of the property remotePropsFile defined will be used." />
		<attribute name="action" default="download" description="action to pass to admin task. Default is download." />
		<attribute name="overwrite" default="true" description="overwrite flag passed to the admin task. Optional. Default is true" />
		
		
		<attribute name="failOnError" default="true" description="failOnError flag passed to the admin task. Optional. Default is true" />
		<sequential>
			<echo>${line.separator}${line.separator}</echo>
			<echo>downloading DAA using:</echo>
			<echo>dataFile: @{dataFile}</echo>
			<echo>remotePropsFile: @{remotePropsFile}</echo>
			<echo>objectSelector: @{objectSelector}</echo>
			<echo>action: @{action}</echo>
			<echo>overwrite: @{overwrite}</echo>
			
			<echo>failOnError: @{failOnError}</echo>
			<AMXAdminTask remote="true" propsFile="@{remotePropsFile}" action="@{action}" dataFile="@{dataFile}" objectSelector="@{objectSelector}" overwrite="@{overwrite}" failOnError="@{failOnError}" />
			<echo>${line.separator}${line.separator}</echo>
		</sequential>
	</macrodef>
	
	
	
	<macrodef name="create.appfolder" backtrace="true" description="Create application folder. If objectSelector attribute is specified, some of the input attributes will be ignored.">
		<attribute name="envName" default="" description="the name of the environment. Optional. If not specified all environments in data file are selected." />
		<attribute name="appfolderName" default="" description="The name of the application folder. Optional. If not specified all the application folders will be selected." />
		<attribute name="dataFile" description="The data file used as input for this admin CLI task. Required." />
		<attribute name="objectSelector" default="" description="The object selector to be used with the admin task. Optional. By default, the macrodef tries to construct the objectselector based on the other input attributes. If this is specified, most other attributes like envName etc will be ignored." />
		<attribute name="remotePropsFile" default="${remotePropsFile}" description="The remote properties file. Optional. By default the value of the property remotePropsFile defined will be used." />
		<attribute name="action" default="add" description="action to pass to admin task. Default is add." />
		<attribute name="overwrite" default="true" description="overwrite flag passed to the admin task. Optional. Default is true" />
		<attribute name="merge" default="true" description="merge flag passed to the admin task. Optional. Default is true" />
		<attribute name="createIfNotExists" default="true" description="The createIfNotExists flag passed to the admin task. Optional. Default is true" />
		<attribute name="force" default="false" description="force flag passed to the admin task. Optional. Default is false" />
		<attribute name="failOnError" default="true" description="failOnError flag passed to the admin task. Optional. Default is true" />
		<sequential>
			<echo>${line.separator}${line.separator}</echo>
			<echo>Create an Application folder using:</echo>
			<echo>envName: @{envName}</echo>
			<echo>appfolderName: @{appfolderName}</echo>
			<echo>dataFile: @{dataFile}</echo>
			<echo>remotePropsFile: @{remotePropsFile}</echo>
			<echo>objectSelector: @{objectSelector}</echo>
			<echo>action: @{action}</echo>
			<echo>overwrite: @{overwrite}</echo>
			<echo>merge: @{merge}</echo>
			<echo>createIfNotExists: @{createIfNotExists}</echo>
			<echo>force: @{force}</echo>
			<echo>failOnError: @{failOnError}</echo>
			<if>
				<not>
					<equals arg1="@{objectSelector}" arg2="" />
				</not>
				<then>
					<var name="obj.sel" value="@{objectSelector}" />
				</then>
				<else>
					<if>
						<equals arg1="@{envName}" arg2="" />
						<then>
							<var name="obj.sel" value="Environment" />
						</then>
						<else>
							<var name="obj.sel" value="Environment[@name='@{envName}']" />
						</else>
					</if>
					<if>
						<equals arg1="@{appfolderName}" arg2="" />
						<then>
							<var name="obj.sel" value="${obj.sel}//ApplicationFolder" />
						</then>
						<else>
							<var name="obj.sel" value="${obj.sel}//ApplicationFolder[@name='@{appfolderName}']" />
						</else>
					</if>
				</else>
			</if>
			<echo message="Invoking Admin task using the objectselector: ${obj.sel}" />
			<AMXAdminTask remote="true" propsFile="@{remotePropsFile}" action="@{action}" dataFile="@{dataFile}" objectSelector="${obj.sel}" overwrite="@{overwrite}" merge="@{merge}" createIfNotExists="@{createIfNotExists}" force="@{force}" failOnError="@{failOnError}" />
			<echo>${line.separator}${line.separator}</echo>
		</sequential>
	</macrodef>	
	
	<macrodef name="delete.appfolder" backtrace="true" description="Delete application folder. If objectSelector attribute is specified, some of the input attributes will be ignored.">
		<attribute name="envName" default="" description="the name of the environment. Optional. If not specified all environments in data file are selected." />
		<attribute name="appfolderName" default="" description="The name of the application folder. Optional. If not specified all the application folders will be selected." />
		<attribute name="dataFile" description="The data file used as input for this admin CLI task. Required." />
		<attribute name="objectSelector" default="" description="The object selector to be used with the admin task. Optional. By default, the macrodef tries to construct the objectselector based on the other input attributes. If this is specified, most other attributes like envName etc will be ignored." />
		<attribute name="remotePropsFile" default="${remotePropsFile}" description="The remote properties file. Optional. By default the value of the property remotePropsFile defined will be used." />
		<attribute name="action" default="delete" description="action to pass to admin task. Default is delete." />
		<attribute name="overwrite" default="true" description="overwrite flag passed to the admin task. Optional. Default is true" />
		<attribute name="merge" default="true" description="merge flag passed to the admin task. Optional. Default is true" />
		<attribute name="createIfNotExists" default="true" description="The createIfNotExists flag passed to the admin task. Optional. Default is true" />
		<attribute name="force" default="false" description="force flag passed to the admin task. Optional. Default is false" />
		<attribute name="failOnError" default="true" description="failOnError flag passed to the admin task. Optional. Default is true" />
		<sequential>
			<echo>${line.separator}${line.separator}</echo>
			<echo>Delete an Application folder using:</echo>
			<echo>envName: @{envName}</echo>
			<echo>appfolderName: @{appfolderName}</echo>
			<echo>dataFile: @{dataFile}</echo>
			<echo>remotePropsFile: @{remotePropsFile}</echo>
			<echo>objectSelector: @{objectSelector}</echo>
			<echo>action: @{action}</echo>
			<echo>overwrite: @{overwrite}</echo>
			<echo>merge: @{merge}</echo>
			<echo>createIfNotExists: @{createIfNotExists}</echo>
			<echo>force: @{force}</echo>
			<echo>failOnError: @{failOnError}</echo>
			<if>
				<not>
					<equals arg1="@{objectSelector}" arg2="" />
				</not>
				<then>
					<var name="obj.sel" value="@{objectSelector}" />
				</then>
				<else>
					<if>
						<equals arg1="@{envName}" arg2="" />
						<then>
							<var name="obj.sel" value="Environment" />
						</then>
						<else>
							<var name="obj.sel" value="Environment[@name='@{envName}']" />
						</else>
					</if>
					<if>
						<equals arg1="@{appfolderName}" arg2="" />
						<then>
							<var name="obj.sel" value="${obj.sel}//ApplicationFolder" />
						</then>
						<else>
							<var name="obj.sel" value="${obj.sel}//ApplicationFolder[@name='@{appfolderName}']" />
						</else>
					</if>
				</else>
			</if>
			<echo message="Invoking Admin task using the objectselector: ${obj.sel}" />
			<AMXAdminTask remote="true" propsFile="@{remotePropsFile}" action="@{action}" dataFile="@{dataFile}" objectSelector="${obj.sel}" overwrite="@{overwrite}" merge="@{merge}" createIfNotExists="@{createIfNotExists}" force="@{force}" failOnError="@{failOnError}" />
			<echo>${line.separator}${line.separator}</echo>
		</sequential>
	</macrodef>	
	
	<macrodef name="edit.appfolder" backtrace="true" description="Edit application folder. If objectSelector attribute is specified, some of the input attributes will be ignored.">
		<attribute name="envName" default="" description="the name of the environment. Optional. If not specified all environments in data file are selected." />
		<attribute name="appfolderName" default="" description="The name of the application folder. Optional. If not specified all the application folders will be selected." />
		<attribute name="dataFile" description="The data file used as input for this admin CLI task. Required." />
		<attribute name="objectSelector" default="" description="The object selector to be used with the admin task. Optional. By default, the macrodef tries to construct the objectselector based on the other input attributes. If this is specified, most other attributes like envName etc will be ignored." />
		<attribute name="remotePropsFile" default="${remotePropsFile}" description="The remote properties file. Optional. By default the value of the property remotePropsFile defined will be used." />
		<attribute name="action" default="edit" description="action to pass to admin task. Default is edit." />
		<attribute name="overwrite" default="true" description="overwrite flag passed to the admin task. Optional. Default is true" />
		<attribute name="merge" default="true" description="merge flag passed to the admin task. Optional. Default is true" />
		<attribute name="createIfNotExists" default="true" description="The createIfNotExists flag passed to the admin task. Optional. Default is true" />
		<attribute name="force" default="false" description="force flag passed to the admin task. Optional. Default is false" />
		<attribute name="failOnError" default="true" description="failOnError flag passed to the admin task. Optional. Default is true" />
		<sequential>
			<echo>${line.separator}${line.separator}</echo>
			<echo>Edit an Application folder using:</echo>
			<echo>envName: @{envName}</echo>
			<echo>appfolderName: @{appfolderName}</echo>
			<echo>dataFile: @{dataFile}</echo>
			<echo>remotePropsFile: @{remotePropsFile}</echo>
			<echo>objectSelector: @{objectSelector}</echo>
			<echo>action: @{action}</echo>
			<echo>overwrite: @{overwrite}</echo>
			<echo>merge: @{merge}</echo>
			<echo>createIfNotExists: @{createIfNotExists}</echo>
			<echo>force: @{force}</echo>
			<echo>failOnError: @{failOnError}</echo>
			<if>
				<not>
					<equals arg1="@{objectSelector}" arg2="" />
				</not>
				<then>
					<var name="obj.sel" value="@{objectSelector}" />
				</then>
				<else>
					<if>
						<equals arg1="@{envName}" arg2="" />
						<then>
							<var name="obj.sel" value="Environment" />
						</then>
						<else>
							<var name="obj.sel" value="Environment[@name='@{envName}']" />
						</else>
					</if>
					<if>
						<equals arg1="@{appfolderName}" arg2="" />
						<then>
							<var name="obj.sel" value="${obj.sel}//ApplicationFolder" />
						</then>
						<else>
							<var name="obj.sel" value="${obj.sel}//ApplicationFolder[@name='@{appfolderName}']" />
						</else>
					</if>
				</else>
			</if>
			<echo message="Invoking Admin task using the objectselector: ${obj.sel}" />
			<AMXAdminTask remote="true" propsFile="@{remotePropsFile}" action="@{action}" dataFile="@{dataFile}" objectSelector="${obj.sel}" overwrite="@{overwrite}" merge="@{merge}" createIfNotExists="@{createIfNotExists}" force="@{force}" failOnError="@{failOnError}" />
			<echo>${line.separator}${line.separator}</echo>
		</sequential>
	</macrodef>	
	
	<macrodef name="move.appfolder" backtrace="true" description="Move application folder. If objectSelector attribute is specified, some of the input attributes will be ignored.">
		<attribute name="envName" default="" description="the name of the environment. Optional. If not specified all environments in data file are selected." />
		<attribute name="appfolderName" default="" description="The name of the application folder. Optional. If not specified all the application folders will be selected." />
		<attribute name="dataFile" description="The data file used as input for this admin CLI task. Required." />
		<attribute name="objectSelector" default="" description="The object selector to be used with the admin task. Optional. By default, the macrodef tries to construct the objectselector based on the other input attributes. If this is specified, most other attributes like envName etc will be ignored." />
		<attribute name="remotePropsFile" default="${remotePropsFile}" description="The remote properties file. Optional. By default the value of the property remotePropsFile defined will be used." />
		<attribute name="action" default="move" description="action to pass to admin task. Default is move." />
		<attribute name="overwrite" default="true" description="overwrite flag passed to the admin task. Optional. Default is true" />
		<attribute name="merge" default="true" description="merge flag passed to the admin task. Optional. Default is true" />
		<attribute name="createIfNotExists" default="true" description="The createIfNotExists flag passed to the admin task. Optional. Default is true" />
		<attribute name="force" default="false" description="force flag passed to the admin task. Optional. Default is false" />
		<attribute name="failOnError" default="true" description="failOnError flag passed to the admin task. Optional. Default is true" />
		<sequential>
			<echo>${line.separator}${line.separator}</echo>
			<echo>Move an Application folder using:</echo>
			<echo>envName: @{envName}</echo>
			<echo>appfolderName: @{appfolderName}</echo>
			<echo>dataFile: @{dataFile}</echo>
			<echo>remotePropsFile: @{remotePropsFile}</echo>
			<echo>objectSelector: @{objectSelector}</echo>
			<echo>action: @{action}</echo>
			<echo>overwrite: @{overwrite}</echo>
			<echo>merge: @{merge}</echo>
			<echo>createIfNotExists: @{createIfNotExists}</echo>
			<echo>force: @{force}</echo>
			<echo>failOnError: @{failOnError}</echo>
			<if>
				<not>
					<equals arg1="@{objectSelector}" arg2="" />
				</not>
				<then>
					<var name="obj.sel" value="@{objectSelector}" />
				</then>
				<else>
					<if>
						<equals arg1="@{envName}" arg2="" />
						<then>
							<var name="obj.sel" value="Environment" />
						</then>
						<else>
							<var name="obj.sel" value="Environment[@name='@{envName}']" />
						</else>
					</if>
					<if>
						<equals arg1="@{appfolderName}" arg2="" />
						<then>
							<var name="obj.sel" value="${obj.sel}//ApplicationFolder" />
						</then>
						<else>
							<var name="obj.sel" value="${obj.sel}//ApplicationFolder[@name='@{appfolderName}']" />
						</else>
					</if>
				</else>
			</if>
			<echo message="Invoking Admin task using the objectselector: ${obj.sel}" />
			<AMXAdminTask remote="true" propsFile="@{remotePropsFile}" action="@{action}" dataFile="@{dataFile}" objectSelector="${obj.sel}" overwrite="@{overwrite}" merge="@{merge}" createIfNotExists="@{createIfNotExists}" force="@{force}" failOnError="@{failOnError}" />
			<echo>${line.separator}${line.separator}</echo>
		</sequential>
	</macrodef>

	<macrodef name="add.appfolder.permissions" backtrace="true" description="Set Permissions to Application folder. If objectSelector attribute is specified, some of the input attributes will be ignored.">
		<attribute name="envName" default="" description="the name of the environment. Optional. If not specified all environments in data file are selected." />
		<attribute name="appfolderName" default="" description="The name of the application folder. Optional. If not specified all the applications will be selected." />
		<attribute name="dataFile" description="The data file used as input for this admin CLI task. Required." />
		<attribute name="objectSelector" default="" description="The object selector to be used with the admin task. Optional. By default, the macrodef tries to construct the objectselector based on the other input attributes. If this is specified, most other attributes like envName etc will be ignored." />
		<attribute name="remotePropsFile" default="${remotePropsFile}" description="The remote properties file. Optional. By default the value of the property remotePropsFile defined will be used." />
		<attribute name="action" default="add" description="action to pass to admin task. Default is add." />
		<attribute name="overwrite" default="true" description="overwrite flag passed to the admin task. Optional. Default is true" />
		<attribute name="merge" default="true" description="merge flag passed to the admin task. Optional. Default is true" />
		<attribute name="createIfNotExists" default="true" description="The createIfNotExists flag passed to the admin task. Optional. Default is true" />
		<attribute name="force" default="false" description="force flag passed to the admin task. Optional. Default is false" />
		<attribute name="failOnError" default="true" description="failOnError flag passed to the admin task. Optional. Default is true" />
		<sequential>
			<echo>${line.separator}${line.separator}</echo>
			<echo>Adding ApplicationFolder Permissions using:</echo>
			<echo>envName: @{envName}</echo>
			<echo>appfolderName: @{appfolderName}</echo>
			<echo>dataFile: @{dataFile}</echo>
			<echo>remotePropsFile: @{remotePropsFile}</echo>
			<echo>objectSelector: @{objectSelector}</echo>
			<echo>action: @{action}</echo>
			<echo>overwrite: @{overwrite}</echo>
			<echo>merge: @{merge}</echo>
			<echo>createIfNotExists: @{createIfNotExists}</echo>
			<echo>force: @{force}</echo>
			<echo>failOnError: @{failOnError}</echo>
			<if>
				<not>
					<equals arg1="@{objectSelector}" arg2="" />
				</not>
				<then>
					<var name="obj.sel" value="@{objectSelector}" />
				</then>
				<else>
					<if>
						<equals arg1="@{envName}" arg2="" />
						<then>
							<var name="obj.sel" value="Environment" />
						</then>
						<else>
							<var name="obj.sel" value="Environment[@name='@{envName}']" />
						</else>
					</if>
					<if>
						<equals arg1="@{appfolderName}" arg2="" />
						<then>
							<var name="obj.sel" value="${obj.sel}//ApplicationFolder" />
						</then>
						<else>
							<var name="obj.sel" value="${obj.sel}//ApplicationFolder[@name='@{appfolderName}']" />
						</else>
					</if>
					<var name="obj.sel" value="${obj.sel}/Permissions" />
				</else>
			</if>
			<echo message="Invoking Admin task using the objectselector: ${obj.sel}" />
			<AMXAdminTask remote="true" propsFile="@{remotePropsFile}" action="@{action}" dataFile="@{dataFile}" objectSelector="${obj.sel}" overwrite="@{overwrite}" merge="@{merge}" createIfNotExists="@{createIfNotExists}" force="@{force}" failOnError="@{failOnError}" />
			<echo>${line.separator}${line.separator}</echo>
		</sequential>
	</macrodef>
	
	<macrodef name="create.app" backtrace="true" description="Create application. If objectSelector attribute is specified, some of the input attributes will be ignored.">
		<attribute name="envName" default="" description="the name of the environment. Optional. If not specified all environments in data file are selected." />
		<attribute name="appName" default="" description="The name of the application. Optional. If not specified all the applications will be selected." />
		<attribute name="dataFile" description="The data file used as input for this admin CLI task. Required." />
		<attribute name="objectSelector" default="" description="The object selector to be used with the admin task. Optional. By default, the macrodef tries to construct the objectselector based on the other input attributes. If this is specified, most other attributes like envName etc will be ignored." />
		<attribute name="remotePropsFile" default="${remotePropsFile}" description="The remote properties file. Optional. By default the value of the property remotePropsFile defined will be used." />
		<attribute name="action" default="add" description="action to pass to admin task. Default is add." />
		<attribute name="overwrite" default="true" description="overwrite flag passed to the admin task. Optional. Default is true" />
		<attribute name="merge" default="true" description="merge flag passed to the admin task. Optional. Default is true" />
		<attribute name="createIfNotExists" default="true" description="The createIfNotExists flag passed to the admin task. Optional. Default is true" />
		<attribute name="force" default="false" description="force flag passed to the admin task. Optional. Default is false" />
		<attribute name="failOnError" default="true" description="failOnError flag passed to the admin task. Optional. Default is true" />
		<sequential>
			<echo>${line.separator}${line.separator}</echo>
			<echo>Create an Application using:</echo>
			<echo>envName: @{envName}</echo>
			<echo>appName: @{appName}</echo>
			<echo>dataFile: @{dataFile}</echo>
			<echo>remotePropsFile: @{remotePropsFile}</echo>
			<echo>objectSelector: @{objectSelector}</echo>
			<echo>action: @{action}</echo>
			<echo>overwrite: @{overwrite}</echo>
			<echo>merge: @{merge}</echo>
			<echo>createIfNotExists: @{createIfNotExists}</echo>
			<echo>force: @{force}</echo>
			<echo>failOnError: @{failOnError}</echo>
			<if>
				<not>
					<equals arg1="@{objectSelector}" arg2="" />
				</not>
				<then>
					<var name="obj.sel" value="@{objectSelector}" />
				</then>
				<else>
					<if>
						<equals arg1="@{envName}" arg2="" />
						<then>
							<var name="obj.sel" value="Environment" />
						</then>
						<else>
							<var name="obj.sel" value="Environment[@name='@{envName}']" />
						</else>
					</if>
					<if>
						<equals arg1="@{appName}" arg2="" />
						<then>
							<var name="obj.sel" value="${obj.sel}//Application" />
						</then>
						<else>
							<var name="obj.sel" value="${obj.sel}//Application[@name='@{appName}']" />
						</else>
					</if>
				</else>
			</if>
			<echo message="Invoking Admin task using the objectselector: ${obj.sel}" />
			<AMXAdminTask remote="true" propsFile="@{remotePropsFile}" action="@{action}" dataFile="@{dataFile}" objectSelector="${obj.sel}" overwrite="@{overwrite}" merge="@{merge}" createIfNotExists="@{createIfNotExists}" force="@{force}" failOnError="@{failOnError}" />
			<echo>${line.separator}${line.separator}</echo>
		</sequential>
	</macrodef>
	
	<macrodef name="download.app.logs" backtrace="true" description="Download the logs of application. If objectSelector attribute is specified, some of the input attributes will be ignored.">
		<attribute name="envName" default="" description="the name of the environment. Optional. If not specified all environments in data file are selected." />
		<attribute name="appName" default="" description="The name of the application. Optional. If not specified all the applications will be selected." />
		<attribute name="dataFile" description="The data file used as input for this admin CLI task. Required." />
		<attribute name="objectSelector" default="" description="The object selector to be used with the admin task. Optional. By default, the macrodef tries to construct the objectselector based on the other input attributes. If this is specified, most other attributes like envName etc will be ignored." />
		<attribute name="remotePropsFile" default="${remotePropsFile}" description="The remote properties file. Optional. By default the value of the property remotePropsFile defined will be used." />
		<attribute name="action" default="downloadLogs" description="action to pass to admin task. Default is downloadLogs." />
		<attribute name="overwrite" default="true" description="overwrite flag passed to the admin task. Optional. Default is true" />
		<attribute name="merge" default="true" description="merge flag passed to the admin task. Optional. Default is true" />
		<attribute name="createIfNotExists" default="true" description="The createIfNotExists flag passed to the admin task. Optional. Default is true" />
		<attribute name="force" default="false" description="force flag passed to the admin task. Optional. Default is false" />
		<attribute name="failOnError" default="true" description="failOnError flag passed to the admin task. Optional. Default is true" />
		<attribute name="options" default="" description="options flag passed to the admin task. It can be: location valueOfLocation, downloadAllUserActions, downloadAllUserActionsForApp"/>
	
		<sequential>
			<echo>${line.separator}${line.separator}</echo>
			<echo>Create an Application using:</echo>
			<echo>envName: @{envName}</echo>
			<echo>appName: @{appName}</echo>
			<echo>dataFile: @{dataFile}</echo>
			<echo>remotePropsFile: @{remotePropsFile}</echo>
			<echo>objectSelector: @{objectSelector}</echo>
			<echo>action: @{action}</echo>
			<echo>overwrite: @{overwrite}</echo>
			<echo>merge: @{merge}</echo>
			<echo>createIfNotExists: @{createIfNotExists}</echo>
			<echo>force: @{force}</echo>
			<echo>failOnError: @{failOnError}</echo>
			<if>
				<not>
					<equals arg1="@{objectSelector}" arg2="" />
				</not>
				<then>
					<var name="obj.sel" value="@{objectSelector}" />
				</then>
				<else>
					<if>
						<equals arg1="@{envName}" arg2="" />
						<then>
							<var name="obj.sel" value="Environment" />
						</then>
						<else>
							<var name="obj.sel" value="Environment[@name='@{envName}']" />
						</else>
					</if>
					<if>
						<equals arg1="@{appName}" arg2="" />
						<then>
							<var name="obj.sel" value="${obj.sel}//Application" />
						</then>
						<else>
							<var name="obj.sel" value="${obj.sel}//Application[@name='@{appName}']" />
						</else>
					</if>
				</else>
			</if>
			<echo message="Invoking Admin task using the objectselector: ${obj.sel}" />
			<AMXAdminTask remote="true" propsFile="@{remotePropsFile}" action="@{action}" dataFile="@{dataFile}" objectSelector="${obj.sel}" overwrite="@{overwrite}" merge="@{merge}" createIfNotExists="@{createIfNotExists}" force="@{force}" failOnError="@{failOnError}" />
			<echo>${line.separator}${line.separator}</echo>
		</sequential>
	</macrodef>
	
	<macrodef name="move.app" backtrace="true" description="Move application. If objectSelector attribute is specified, some of the input attributes will be ignored.">
		<attribute name="envName" default="" description="the name of the environment. Optional. If not specified all environments in data file are selected." />
		<attribute name="appName" default="" description="The name of the application. Optional. If not specified all the applications will be selected." />
		<attribute name="dataFile" description="The data file used as input for this admin CLI task. Required." />
		<attribute name="objectSelector" default="" description="The object selector to be used with the admin task. Optional. By default, the macrodef tries to construct the objectselector based on the other input attributes. If this is specified, most other attributes like envName etc will be ignored." />
		<attribute name="remotePropsFile" default="${remotePropsFile}" description="The remote properties file. Optional. By default the value of the property remotePropsFile defined will be used." />
		<attribute name="action" default="move" description="action to pass to admin task. Default is move." />
		<attribute name="overwrite" default="true" description="overwrite flag passed to the admin task. Optional. Default is true" />
		<attribute name="merge" default="true" description="merge flag passed to the admin task. Optional. Default is true" />
		<attribute name="createIfNotExists" default="true" description="The createIfNotExists flag passed to the admin task. Optional. Default is true" />
		<attribute name="force" default="false" description="force flag passed to the admin task. Optional. Default is false" />
		<attribute name="failOnError" default="true" description="failOnError flag passed to the admin task. Optional. Default is true" />
		<sequential>
			<echo>${line.separator}${line.separator}</echo>
			<echo>Move an Application using:</echo>
			<echo>envName: @{envName}</echo>
			<echo>appName: @{appName}</echo>
			<echo>dataFile: @{dataFile}</echo>
			<echo>remotePropsFile: @{remotePropsFile}</echo>
			<echo>objectSelector: @{objectSelector}</echo>
			<echo>action: @{action}</echo>
			<echo>overwrite: @{overwrite}</echo>
			<echo>merge: @{merge}</echo>
			<echo>createIfNotExists: @{createIfNotExists}</echo>
			<echo>force: @{force}</echo>
			<echo>failOnError: @{failOnError}</echo>
			<if>
				<not>
					<equals arg1="@{objectSelector}" arg2="" />
				</not>
				<then>
					<var name="obj.sel" value="@{objectSelector}" />
				</then>
				<else>
					<if>
						<equals arg1="@{envName}" arg2="" />
						<then>
							<var name="obj.sel" value="Environment" />
						</then>
						<else>
							<var name="obj.sel" value="Environment[@name='@{envName}']" />
						</else>
					</if>
					<if>
						<equals arg1="@{appName}" arg2="" />
						<then>
							<var name="obj.sel" value="${obj.sel}//Application" />
						</then>
						<else>
							<var name="obj.sel" value="${obj.sel}//Application[@name='@{appName}']" />
						</else>
					</if>
				</else>
			</if>
			<echo message="Invoking Admin task using the objectselector: ${obj.sel}" />
			<AMXAdminTask remote="true" propsFile="@{remotePropsFile}" action="@{action}" dataFile="@{dataFile}" objectSelector="${obj.sel}" overwrite="@{overwrite}" merge="@{merge}" createIfNotExists="@{createIfNotExists}" force="@{force}" failOnError="@{failOnError}" />
			<echo>${line.separator}${line.separator}</echo>
		</sequential>
	</macrodef>

	<macrodef name="upgrade.app" backtrace="true" description="Upgrade application. If objectSelector attribute is specified, some of the input attributes will be ignored.">
		<attribute name="envName" default="" description="the name of the environment. Optional. If not specified all environments in data file are selected." />
		<attribute name="appName" default="" description="The name of the application. Optional. If not specified all the applications will be selected." />
		<attribute name="dataFile" description="The data file used as input for this admin CLI task. Required." />
		<attribute name="objectSelector" default="" description="The object selector to be used with the admin task. Optional. By default, the macrodef tries to construct the objectselector based on the other input attributes. If this is specified, most other attributes like envName etc will be ignored." />
		<attribute name="remotePropsFile" default="${remotePropsFile}" description="The remote properties file. Optional. By default the value of the property remotePropsFile defined will be used." />
		<attribute name="action" default="upgrade" description="action to pass to admin task. Default is upgrade." />
		<attribute name="overwrite" default="true" description="overwrite flag passed to the admin task. Optional. Default is true" />
		<attribute name="merge" default="true" description="merge flag passed to the admin task. Optional. Default is true" />
		<attribute name="createIfNotExists" default="true" description="The createIfNotExists flag passed to the admin task. Optional. Default is true" />
		<attribute name="force" default="false" description="force flag passed to the admin task. Optional. Default is false" />
		<attribute name="failOnError" default="true" description="failOnError flag passed to the admin task. Optional. Default is true" />
		<attribute name="options" default="" description="options flag passed to the admin task. It can be: nostart, referesh, handledependencies. And separate with, "/>
		<sequential>
			<echo>${line.separator}${line.separator}</echo>
			<echo>Upgrade an Application using:</echo>
			<echo>envName: @{envName}</echo>
			<echo>appName: @{appName}</echo>
			<echo>dataFile: @{dataFile}</echo>
			<echo>remotePropsFile: @{remotePropsFile}</echo>
			<echo>objectSelector: @{objectSelector}</echo>
			<echo>action: @{action}</echo>
			<echo>overwrite: @{overwrite}</echo>
			<echo>merge: @{merge}</echo>
			<echo>createIfNotExists: @{createIfNotExists}</echo>
			<echo>force: @{force}</echo>
			<echo>failOnError: @{failOnError}</echo>
			<echo>options: @{options}</echo>
			<if>
				<not>
					<equals arg1="@{objectSelector}" arg2="" />
				</not>
				<then>
					<var name="obj.sel" value="@{objectSelector}" />
				</then>
				<else>
					<if>
						<equals arg1="@{envName}" arg2="" />
						<then>
							<var name="obj.sel" value="Environment" />
						</then>
						<else>
							<var name="obj.sel" value="Environment[@name='@{envName}']" />
						</else>
					</if>
					<if>
						<equals arg1="@{appName}" arg2="" />
						<then>
							<var name="obj.sel" value="${obj.sel}//Application" />
						</then>
						<else>
							<var name="obj.sel" value="${obj.sel}//Application[@name='@{appName}']" />
						</else>
					</if>
				</else>
			</if>
			<echo message="Invoking Admin task using the objectselector: ${obj.sel}" />
			<AMXAdminTask remote="true" propsFile="@{remotePropsFile}" action="@{action}" dataFile="@{dataFile}" objectSelector="${obj.sel}" overwrite="@{overwrite}" merge="@{merge}" createIfNotExists="@{createIfNotExists}" force="@{force}" failOnError="@{failOnError}" options="@{options}"/>
			<echo>${line.separator}${line.separator}</echo>
		</sequential>
	</macrodef>

	<macrodef name="set.app.property" backtrace="true" description="Set Application level properties. If objectSelector attribute is specified, some of the input attributes will be ignored.">
		<attribute name="envName" default="" description="the name of the environment. Optional. If not specified all environments in data file are selected." />
		<attribute name="appName" default="" description="The name of the application. Optional. If not specified all the applications will be selected." />
		<attribute name="propertyName" default="" description="property name. Optional. If not specified, all the properties are selected." />

		<attribute name="dataFile" description="The data file used as input for this admin CLI task. Required." />
		<attribute name="objectSelector" default="" description="The object selector to be used with the admin task. Optional. By default, the macrodef tries to construct the objectselector based on the other input attributes. If this is specified, most other attributes like envName etc will be ignored." />
		<attribute name="remotePropsFile" default="${remotePropsFile}" description="The remote properties file. Optional. By default the value of the property remotePropsFile defined will be used." />
		<attribute name="action" default="edit" description="action to pass to admin task. Default is edit." />
		<attribute name="overwrite" default="true" description="overwrite flag passed to the admin task. Optional. Default is true" />
		<attribute name="merge" default="true" description="merge flag passed to the admin task. Optional. Default is true" />
		<attribute name="createIfNotExists" default="true" description="The createIfNotExists flag passed to the admin task. Optional. Default is true" />
		<attribute name="force" default="false" description="force flag passed to the admin task. Optional. Default is false" />
		<attribute name="failOnError" default="true" description="failOnError flag passed to the admin task. Optional. Default is true" />
		<sequential>
			<echo>${line.separator}${line.separator}</echo>
			<echo>Setting Application Properties using:</echo>
			<echo>envName: @{envName}</echo>
			<echo>appName: @{appName}</echo>
			<echo>propertyName: @{propertyName}</echo>
			<echo>dataFile: @{dataFile}</echo>
			<echo>remotePropsFile: @{remotePropsFile}</echo>
			<echo>objectSelector: @{objectSelector}</echo>
			<echo>action: @{action}</echo>
			<echo>overwrite: @{overwrite}</echo>
			<echo>merge: @{merge}</echo>
			<echo>createIfNotExists: @{createIfNotExists}</echo>
			<echo>force: @{force}</echo>
			<echo>failOnError: @{failOnError}</echo>
			<if>
				<not>
					<equals arg1="@{objectSelector}" arg2="" />
				</not>
				<then>
					<var name="obj.sel" value="@{objectSelector}" />
				</then>
				<else>
					<if>
						<equals arg1="@{envName}" arg2="" />
						<then>
							<var name="obj.sel" value="Environment" />
						</then>
						<else>
							<var name="obj.sel" value="Environment[@name='@{envName}']" />
						</else>
					</if>
					<if>
						<equals arg1="@{appName}" arg2="" />
						<then>
							<var name="obj.sel" value="${obj.sel}//Application" />
						</then>
						<else>
							<var name="obj.sel" value="${obj.sel}//Application[@name='@{appName}']" />
						</else>
					</if>
					<if>
						<equals arg1="@{propertyName}" arg2="" />
						<then>
							<var name="obj.sel" value="${obj.sel}/Property" />
						</then>
						<else>
							<var name="obj.sel" value="${obj.sel}/Property[@name='@{propertyName}']" />
						</else>
					</if>

				</else>
			</if>
			<echo message="Invoking Admin task using the objectselector: ${obj.sel}" />
			<AMXAdminTask remote="true" propsFile="@{remotePropsFile}" action="@{action}" dataFile="@{dataFile}" objectSelector="${obj.sel}" overwrite="@{overwrite}" merge="@{merge}" createIfNotExists="@{createIfNotExists}" force="@{force}" failOnError="@{failOnError}" />
			<echo>${line.separator}${line.separator}</echo>
		</sequential>
	</macrodef>

	<macrodef name="set.service.binding.property" backtrace="true" description="Set Service binding property. If objectSelector attribute is specified, some of the input attributes will be ignored.">
		<attribute name="envName" default="" description="the name of the environment. Optional. If not specified all environments in data file are selected." />
		<attribute name="promotedServiceName" default="" description="promoted service name. Optional." />
		<attribute name="bindingName" default="" description="The name of the binding. Optional. If not selected all the bindings in data file will be selected." />
		<attribute name="appName" default="" description="The name of the application. Optional. If not specified all the applications will be selected." />
		<attribute name="propertyName" default="" description="property name. Optional. If not specified, all the properties are selected." />
		<attribute name="dataFile" description="The data file used as input for this admin CLI task. Required." />
		<attribute name="objectSelector" default="" description="The object selector to be used with the admin task. Optional. By default, the macrodef tries to construct the objectselector based on the other input attributes. If this is specified, most other attributes like envName etc will be ignored." />
		<attribute name="remotePropsFile" default="${remotePropsFile}" description="The remote properties file. Optional. By default the value of the property remotePropsFile defined will be used." />
		<attribute name="action" default="edit" description="action to pass to admin task. Default is edit." />
		<attribute name="overwrite" default="true" description="overwrite flag passed to the admin task. Optional. Default is true" />
		<attribute name="merge" default="true" description="merge flag passed to the admin task. Optional. Default is true" />
		<attribute name="createIfNotExists" default="true" description="The createIfNotExists flag passed to the admin task. Optional. Default is true" />
		<attribute name="force" default="false" description="force flag passed to the admin task. Optional. Default is false" />
		<attribute name="failOnError" default="true" description="failOnError flag passed to the admin task. Optional. Default is true" />
		<sequential>
			<echo>${line.separator}${line.separator}</echo>
			<echo>Setting the Http Connector property for Service binding using:</echo>
			<echo>envName: @{envName}</echo>
			<echo>appName: @{appName}</echo>
			<echo>promotedServiceName: @{promotedServiceName}</echo>
			<echo>bindingName: @{bindingName}</echo>
			<echo>propertyName: @{propertyName}</echo>
			<echo>dataFile: @{dataFile}</echo>
			<echo>remotePropsFile: @{remotePropsFile}</echo>
			<echo>objectSelector: @{objectSelector}</echo>
			<echo>action: @{action}</echo>
			<echo>overwrite: @{overwrite}</echo>
			<echo>merge: @{merge}</echo>
			<echo>createIfNotExists: @{createIfNotExists}</echo>
			<echo>force: @{force}</echo>
			<echo>failOnError: @{failOnError}</echo>
			<if>
				<not>
					<equals arg1="@{objectSelector}" arg2="" />
				</not>
				<then>
					<var name="obj.sel" value="@{objectSelector}" />
				</then>
				<else>
					<if>
						<equals arg1="@{envName}" arg2="" />
						<then>
							<var name="obj.sel" value="Environment" />
						</then>
						<else>
							<var name="obj.sel" value="Environment[@name='@{envName}']" />
						</else>
					</if>
					<if>
						<equals arg1="@{appName}" arg2="" />
						<then>
							<var name="obj.sel" value="${obj.sel}//Application" />
						</then>
						<else>
							<var name="obj.sel" value="${obj.sel}//Application[@name='@{appName}']" />
						</else>
					</if>
					<if>
						<equals arg1="@{promotedServiceName}" arg2="" />
						<then>
							<var name="obj.sel" value="${obj.sel}/PromotedService" />
						</then>
						<else>
							<var name="obj.sel" value="${obj.sel}/PromotedService[@name='@{promotedServiceName}']" />
						</else>
					</if>
					<if>
						<equals arg1="@{bindingName}" arg2="" />
						<then>
							<var name="obj.sel" value="${obj.sel}/Binding" />
						</then>
						<else>
							<var name="obj.sel" value="${obj.sel}/Binding[@name='@{bindingName}']" />
						</else>
					</if>
					<if>
						<equals arg1="@{propertyName}" arg2="" />
						<then>
							<var name="obj.sel" value="${obj.sel}/Property" />
						</then>
						<else>
							<var name="obj.sel" value="${obj.sel}/Property[@name='@{propertyName}']" />
						</else>
					</if>
				</else>
			</if>
			<echo message="Invoking Admin task using the objectselector: ${obj.sel}" />
			<AMXAdminTask remote="true" propsFile="@{remotePropsFile}" action="@{action}" dataFile="@{dataFile}" objectSelector="${obj.sel}" overwrite="@{overwrite}" merge="@{merge}" createIfNotExists="@{createIfNotExists}" force="@{force}" failOnError="@{failOnError}" />
			<echo>${line.separator}${line.separator}</echo>
		</sequential>
	</macrodef>

	<macrodef name="set.reference.binding.property" backtrace="true" description="Set Reference binding property. If objectSelector attribute is specified, some of the input attributes will be ignored.">
		<attribute name="envName" default="" description="the name of the environment. Optional. If not specified all environments in data file are selected." />
		<attribute name="promotedReferenceName" default="" description="promoted reference name. Optional." />
		<attribute name="bindingName" default="" description="The name of the binding. Optional. If not selected all the bindings in data file will be selected." />
		<attribute name="appName" default="" description="The name of the application. Optional. If not specified all the applications will be selected." />
		<attribute name="dataFile" description="The data file used as input for this admin CLI task. Required." />
		<attribute name="objectSelector" default="" description="The object selector to be used with the admin task. Optional. By default, the macrodef tries to construct the objectselector based on the other input attributes. If this is specified, most other attributes like envName etc will be ignored." />
		<attribute name="remotePropsFile" default="${remotePropsFile}" description="The remote properties file. Optional. By default the value of the property remotePropsFile defined will be used." />
		<attribute name="action" default="edit" description="action to pass to admin task. Default is edit." />
		<attribute name="overwrite" default="true" description="overwrite flag passed to the admin task. Optional. Default is true" />
		<attribute name="merge" default="true" description="merge flag passed to the admin task. Optional. Default is true" />
		<attribute name="createIfNotExists" default="true" description="The createIfNotExists flag passed to the admin task. Optional. Default is true" />
		<attribute name="force" default="false" description="force flag passed to the admin task. Optional. Default is false" />
		<attribute name="failOnError" default="true" description="failOnError flag passed to the admin task. Optional. Default is true" />
		<sequential>
			<echo>${line.separator}${line.separator}</echo>
			<echo>Setting property for Reference binding using:</echo>
			<echo>envName: @{envName}</echo>
			<echo>appName: @{appName}</echo>
			<echo>promotedReferenceName: @{promotedReferenceName}</echo>
			<echo>bindingName: @{bindingName}</echo>
			<echo>dataFile: @{dataFile}</echo>
			<echo>remotePropsFile: @{remotePropsFile}</echo>
			<echo>objectSelector: @{objectSelector}</echo>
			<echo>action: @{action}</echo>
			<echo>overwrite: @{overwrite}</echo>
			<echo>merge: @{merge}</echo>
			<echo>createIfNotExists: @{createIfNotExists}</echo>
			<echo>force: @{force}</echo>
			<echo>failOnError: @{failOnError}</echo>
			<if>
				<not>
					<equals arg1="@{objectSelector}" arg2="" />
				</not>
				<then>
					<var name="obj.sel" value="@{objectSelector}" />
				</then>
				<else>
					<if>
						<equals arg1="@{envName}" arg2="" />
						<then>
							<var name="obj.sel" value="Environment" />
						</then>
						<else>
							<var name="obj.sel" value="Environment[@name='@{envName}']" />
						</else>
					</if>
					<if>
						<equals arg1="@{appName}" arg2="" />
						<then>
							<var name="obj.sel" value="${obj.sel}//Application" />
						</then>
						<else>
							<var name="obj.sel" value="${obj.sel}//Application[@name='@{appName}']" />
						</else>
					</if>
					<if>
						<equals arg1="@{promotedReferenceName}" arg2="" />
						<then>
							<var name="obj.sel" value="${obj.sel}/PromotedReference" />
						</then>
						<else>
							<var name="obj.sel" value="${obj.sel}/PromotedReference[@name='@{promotedReferenceName}']" />
						</else>
					</if>
					<if>
						<equals arg1="@{bindingname}" arg2="" />
						<then>
							<var name="obj.sel" value="${obj.sel}/Binding/Property" />
						</then>
						<else>
							<var name="obj.sel" value="${obj.sel}/Binding[@name='@{bindingname}']/Property" />
						</else>
					</if>
				</else>
			</if>
			<echo message="Invoking Admin task using the objectselector: ${obj.sel}" />
			<AMXAdminTask remote="true" propsFile="@{remotePropsFile}" action="@{action}" dataFile="@{dataFile}" objectSelector="${obj.sel}" overwrite="@{overwrite}" merge="@{merge}" createIfNotExists="@{createIfNotExists}" force="@{force}" failOnError="@{failOnError}" />
			<echo>${line.separator}${line.separator}</echo>
		</sequential>
	</macrodef>



	<macrodef name="map.app.to.node" backtrace="true" description="Map an Application to a node in the environment. If objectSelector attribute is specified, some of the input attributes will be ignored.">
		<attribute name="envName" default="" description="the name of the environment. Optional. If not specified all environments in data file are selected." />
		<attribute name="appName" default="" description="The name of the application. Optional. If not specified all the applications will be selected." />
		<attribute name="nodeName" default="" description="the name of the node. Optional. If not specified all nodes in data file are selected." />
		<attribute name="dataFile" description="The data file used as input for this admin CLI task. Required." />
		<attribute name="objectSelector" default="" description="The object selector to be used with the admin task. Optional. By default, the macrodef tries to construct the objectselector based on the other input attributes. If this is specified, most other attributes like envName etc will be ignored." />
		<attribute name="remotePropsFile" default="${remotePropsFile}" description="The remote properties file. Optional. By default the value of the property remotePropsFile defined will be used." />
		<attribute name="action" default="set" description="action to pass to admin task. Default is set." />
		<attribute name="overwrite" default="true" description="overwrite flag passed to the admin task. Optional. Default is true" />
		<attribute name="merge" default="true" description="merge flag passed to the admin task. Optional. Default is true" />
		<attribute name="createIfNotExists" default="true" description="The createIfNotExists flag passed to the admin task. Optional. Default is true" />
		<attribute name="force" default="false" description="force flag passed to the admin task. Optional. Default is false" />
		<attribute name="failOnError" default="true" description="failOnError flag passed to the admin task. Optional. Default is true" />
		<sequential>
			<echo>${line.separator}${line.separator}</echo>
			<echo>Mapping Application to specified nodes using:</echo>
			<echo>envName: @{envName}</echo>
			<echo>appName: @{appName}</echo>
			<echo>nodeName: @{nodeName}</echo>
			<echo>dataFile: @{dataFile}</echo>
			<echo>remotePropsFile: @{remotePropsFile}</echo>
			<echo>objectSelector: @{objectSelector}</echo>
			<echo>action: @{action}</echo>
			<echo>overwrite: @{overwrite}</echo>
			<echo>merge: @{merge}</echo>
			<echo>createIfNotExists: @{createIfNotExists}</echo>
			<echo>force: @{force}</echo>
			<echo>failOnError: @{failOnError}</echo>
			<if>
				<not>
					<equals arg1="@{objectSelector}" arg2="" />
				</not>
				<then>
					<var name="obj.sel" value="@{objectSelector}" />
				</then>
				<else>
					<if>
						<equals arg1="@{envName}" arg2="" />
						<then>
							<var name="obj.sel" value="Environment" />
						</then>
						<else>
							<var name="obj.sel" value="Environment[@name='@{envName}']" />
						</else>
					</if>
					<if>
						<equals arg1="@{appName}" arg2="" />
						<then>
							<var name="obj.sel" value="${obj.sel}//Application" />
						</then>
						<else>
							<var name="obj.sel" value="${obj.sel}//Application[@name='@{appName}']" />
						</else>
					</if>
					<if>
						<equals arg1="@{nodeName}" arg2="" />
						<then>
							<var name="obj.sel" value="${obj.sel}/Node" />
						</then>
						<else>
							<var name="obj.sel" value="${obj.sel}/Node[@name='@{nodeName}']" />
						</else>
					</if>
				</else>
			</if>
			<echo message="Invoking Admin task using the objectselector: ${obj.sel}" />
			<AMXAdminTask remote="true" propsFile="@{remotePropsFile}" action="@{action}" dataFile="@{dataFile}" objectSelector="${obj.sel}" overwrite="@{overwrite}" merge="@{merge}" createIfNotExists="@{createIfNotExists}" force="@{force}" failOnError="@{failOnError}" />
			<echo>${line.separator}${line.separator}</echo>
		</sequential>
	</macrodef>

	<macrodef name="add.app.to.node" backtrace="true" description="Map an Application to a node in the environment. If objectSelector attribute is specified, some of the input attributes will be ignored.">
		<attribute name="envName" default="" description="the name of the environment. Optional. If not specified all environments in data file are selected." />
		<attribute name="appName" default="" description="The name of the application. Optional. If not specified all the applications will be selected." />
		<attribute name="nodeName" default="" description="the name of the node. Optional. If not specified all nodes in data file are selected." />
		<attribute name="dataFile" description="The data file used as input for this admin CLI task. Required." />
		<attribute name="objectSelector" default="" description="The object selector to be used with the admin task. Optional. By default, the macrodef tries to construct the objectselector based on the other input attributes. If this is specified, most other attributes like envName etc will be ignored." />
		<attribute name="remotePropsFile" default="${remotePropsFile}" description="The remote properties file. Optional. By default the value of the property remotePropsFile defined will be used." />
		<attribute name="action" default="add" description="action to pass to admin task. Default is set." />
		<attribute name="overwrite" default="true" description="overwrite flag passed to the admin task. Optional. Default is true" />
		<attribute name="merge" default="true" description="merge flag passed to the admin task. Optional. Default is true" />
		<attribute name="createIfNotExists" default="true" description="The createIfNotExists flag passed to the admin task. Optional. Default is true" />
		<attribute name="force" default="false" description="force flag passed to the admin task. Optional. Default is false" />
		<attribute name="failOnError" default="true" description="failOnError flag passed to the admin task. Optional. Default is true" />
		<sequential>
			<echo>${line.separator}${line.separator}</echo>
			<echo>Mapping Application to specified nodes using:</echo>
			<echo>envName: @{envName}</echo>
			<echo>appName: @{appName}</echo>
			<echo>nodeName: @{nodeName}</echo>
			<echo>dataFile: @{dataFile}</echo>
			<echo>remotePropsFile: @{remotePropsFile}</echo>
			<echo>objectSelector: @{objectSelector}</echo>
			<echo>action: @{action}</echo>
			<echo>overwrite: @{overwrite}</echo>
			<echo>merge: @{merge}</echo>
			<echo>createIfNotExists: @{createIfNotExists}</echo>
			<echo>force: @{force}</echo>
			<echo>failOnError: @{failOnError}</echo>
			<if>
				<not>
					<equals arg1="@{objectSelector}" arg2="" />
				</not>
				<then>
					<var name="obj.sel" value="@{objectSelector}" />
				</then>
				<else>
					<if>
						<equals arg1="@{envName}" arg2="" />
						<then>
							<var name="obj.sel" value="Environment" />
						</then>
						<else>
							<var name="obj.sel" value="Environment[@name='@{envName}']" />
						</else>
					</if>
					<if>
						<equals arg1="@{appName}" arg2="" />
						<then>
							<var name="obj.sel" value="${obj.sel}//Application" />
						</then>
						<else>
							<var name="obj.sel" value="${obj.sel}//Application[@name='@{appName}']" />
						</else>
					</if>
					<if>
						<equals arg1="@{nodeName}" arg2="" />
						<then>
							<var name="obj.sel" value="${obj.sel}/Node" />
						</then>
						<else>
							<var name="obj.sel" value="${obj.sel}/Node[@name='@{nodeName}']" />
						</else>
					</if>
				</else>
			</if>
			<echo message="Invoking Admin task using the objectselector: ${obj.sel}" />
			<AMXAdminTask remote="true" propsFile="@{remotePropsFile}" action="@{action}" dataFile="@{dataFile}" objectSelector="${obj.sel}" overwrite="@{overwrite}" merge="@{merge}" createIfNotExists="@{createIfNotExists}" force="@{force}" failOnError="@{failOnError}" />
			<echo>${line.separator}${line.separator}</echo>
		</sequential>
	</macrodef>

	<macrodef name="deploy.app" backtrace="true" description="Deploy the application. If objectSelector attribute is specified, some of the input attributes will be ignored.">
		<attribute name="envName" default="" description="the name of the environment. Optional. If not specified all environments in data file are selected." />
		<attribute name="appName" default="" description="The name of the application. Optional. If not specified all the applications will be selected." />
		<attribute name="dataFile" description="The data file used as input for this admin CLI task. Required." />
		<attribute name="objectSelector" default="" description="The object selector to be used with the admin task. Optional. By default, the macrodef tries to construct the objectselector based on the other input attributes. If this is specified, most other attributes like envName etc will be ignored." />
		<attribute name="remotePropsFile" default="${remotePropsFile}" description="The remote properties file. Optional. By default the value of the property remotePropsFile defined will be used." />
		<attribute name="action" default="deploy" description="action to pass to admin task. Default is deploy." />
		<attribute name="overwrite" default="true" description="overwrite flag passed to the admin task. Optional. Default is true" />
		<attribute name="merge" default="true" description="merge flag passed to the admin task. Optional. Default is true" />
		<attribute name="createIfNotExists" default="true" description="The createIfNotExists flag passed to the admin task. Optional. Default is true" />
		<attribute name="force" default="false" description="force flag passed to the admin task. Optional. Default is true" />
		<attribute name="failOnError" default="true" description="failOnError flag passed to the admin task. Optional. Default is true" />
		<attribute name="options" default="" description="options flag passed to the admin task. It can be: nostart, referesh, handledependencies. And separate with, "/>
		<attribute name="startAfterDeploy" default="true" />
		<attribute name="timeout" default="120" />
		<sequential>
			<echo>${line.separator}${line.separator}</echo>
			<echo>Deploy an application using:</echo>
			<echo>envName: @{envName}</echo>
			<echo>appName: @{appName}</echo>
			<echo>dataFile: @{dataFile}</echo>
			<echo>remotePropsFile: @{remotePropsFile}</echo>
			<echo>objectSelector: @{objectSelector}</echo>
			<echo>action: @{action}</echo>
			<echo>overwrite: @{overwrite}</echo>
			<echo>merge: @{merge}</echo>
			<echo>createIfNotExists: @{createIfNotExists}</echo>
			<echo>force: @{force}</echo>
			<echo>failOnError: @{failOnError}</echo>
			<echo>options: @{options}</echo>
			<echo>startAfterDeploy: @{startAfterDeploy}</echo>
			<echo>timeout: @{timeout}</echo>
			<if>
				<not>
					<equals arg1="@{objectSelector}" arg2="" />
				</not>
				<then>
					<var name="obj.sel" value="@{objectSelector}" />
				</then>
				<else>
					<if>
						<equals arg1="@{envName}" arg2="" />
						<then>
							<var name="obj.sel" value="Environment" />
						</then>
						<else>
							<var name="obj.sel" value="Environment[@name='@{envName}']" />
						</else>
					</if>
					<if>
						<equals arg1="@{appName}" arg2="" />
						<then>
							<var name="obj.sel" value="${obj.sel}//Application" />
						</then>
						<else>
							<var name="obj.sel" value="${obj.sel}//Application[@name='@{appName}']" />
						</else>
					</if>
				</else>
			</if>
			<echo message="Invoking Admin task using the objectselector: ${obj.sel}" />
			<if>
				<equals arg1="@{startAfterDeploy}" arg2="false" />
				<then>
					<AMXAdminTask remote="true" propsFile="@{remotePropsFile}" action="@{action}" dataFile="@{dataFile}" objectSelector="${obj.sel}" overwrite="@{overwrite}" merge="@{merge}" createIfNotExists="@{createIfNotExists}" force="@{force}" failOnError="@{failOnError}" options="nostart" timeout="@{timeout}" />
				</then>
				<else>
					<if>
						<equals arg1="@{options}" arg2="" />
						<then>
							<AMXAdminTask remote="true" propsFile="@{remotePropsFile}" action="@{action}" dataFile="@{dataFile}" objectSelector="${obj.sel}" overwrite="@{overwrite}" merge="@{merge}" createIfNotExists="@{createIfNotExists}" force="@{force}" failOnError="@{failOnError}" timeout="@{timeout}" />
						</then>
						<else>
							<AMXAdminTask remote="true" propsFile="@{remotePropsFile}" action="@{action}" dataFile="@{dataFile}" objectSelector="${obj.sel}" overwrite="@{overwrite}" merge="@{merge}" createIfNotExists="@{createIfNotExists}" force="@{force}" failOnError="@{failOnError}" options="@{options}" timeout="@{timeout}" />
						</else>
					</if>
				</else>
			</if>


			<echo>${line.separator}${line.separator}</echo>
		</sequential>
	</macrodef>

	<macrodef name="undeploy.app" backtrace="true" description="Undeploy the application. If objectSelector attribute is specified, some of the input attributes will be ignored.">
		<attribute name="envName" default="" description="the name of the environment. Optional. If not specified all environments in data file are selected." />
		<attribute name="appName" default="" description="The name of the application. Optional. If not specified all the applications will be selected." />
		<attribute name="dataFile" description="The data file used as input for this admin CLI task. Required." />
		<attribute name="objectSelector" default="" description="The object selector to be used with the admin task. Optional. By default, the macrodef tries to construct the objectselector based on the other input attributes. If this is specified, most other attributes like envName etc will be ignored." />
		<attribute name="remotePropsFile" default="${remotePropsFile}" description="The remote properties file. Optional. By default the value of the property remotePropsFile defined will be used." />
		<attribute name="action" default="undeploy" description="action to pass to admin task. Default is undeploy." />
		<attribute name="overwrite" default="true" description="overwrite flag passed to the admin task. Optional. Default is true" />
		<attribute name="merge" default="true" description="merge flag passed to the admin task. Optional. Default is true" />
		<attribute name="createIfNotExists" default="true" description="The createIfNotExists flag passed to the admin task. Optional. Default is true" />
		<attribute name="force" default="false" description="force flag passed to the admin task. Optional. Default is true" />
		<attribute name="failOnError" default="true" description="failOnError flag passed to the admin task. Optional. Default is true" />
		<attribute name="options" default="" description="options flag passed to the admin task. It can be: handledependencies. "/>
		<attribute name="timeout" default="120" />
		<sequential>
			<echo>${line.separator}${line.separator}</echo>
			<echo>Undeploy an application using:</echo>
			<echo>envName: @{envName}</echo>
			<echo>appName: @{appName}</echo>
			<echo>dataFile: @{dataFile}</echo>
			<echo>remotePropsFile: @{remotePropsFile}</echo>
			<echo>objectSelector: @{objectSelector}</echo>
			<echo>action: @{action}</echo>
			<echo>overwrite: @{overwrite}</echo>
			<echo>merge: @{merge}</echo>
			<echo>createIfNotExists: @{createIfNotExists}</echo>
			<echo>force: @{force}</echo>
			<echo>failOnError: @{failOnError}</echo>
			<echo>options: @{options}</echo>
			<echo>timeout: @{timeout}</echo>
			<if>
				<not>
					<equals arg1="@{objectSelector}" arg2="" />
				</not>
				<then>
					<var name="obj.sel" value="@{objectSelector}" />
				</then>
				<else>
					<if>
						<equals arg1="@{envName}" arg2="" />
						<then>
							<var name="obj.sel" value="Environment" />
						</then>
						<else>
							<var name="obj.sel" value="Environment[@name='@{envName}']" />
						</else>
					</if>
					<if>
						<equals arg1="@{appName}" arg2="" />
						<then>
							<var name="obj.sel" value="${obj.sel}//Application" />
						</then>
						<else>
							<var name="obj.sel" value="${obj.sel}//Application[@name='@{appName}']" />
						</else>
					</if>
				</else>
			</if>
			<echo message="Invoking Admin task using the objectselector: ${obj.sel}" />
			<if>
				<equals arg1="@{options}" arg2="" />
				<then>
					<AMXAdminTask remote="true" propsFile="@{remotePropsFile}" action="@{action}" dataFile="@{dataFile}" objectSelector="${obj.sel}" overwrite="@{overwrite}" merge="@{merge}" createIfNotExists="@{createIfNotExists}" force="@{force}" failOnError="@{failOnError}" timeout="@{timeout}" />
				</then>
				<else>
					<AMXAdminTask remote="true" propsFile="@{remotePropsFile}" action="@{action}" dataFile="@{dataFile}" objectSelector="${obj.sel}" overwrite="@{overwrite}" merge="@{merge}" createIfNotExists="@{createIfNotExists}" force="@{force}" failOnError="@{failOnError}" options="@{options}" timeout="@{timeout}" />
				</else>
			</if>
			<echo>${line.separator}${line.separator}</echo>
		</sequential>
	</macrodef>


	<macrodef name="start.app" backtrace="true" description="Start the application. If objectSelector attribute is specified, some of the input attributes will be ignored.">
		<attribute name="envName" default="" description="the name of the environment. Optional. If not specified all environments in data file are selected." />
		<attribute name="appName" default="" description="The name of the application. Optional. If not specified all the applications will be selected." />
		<attribute name="dataFile" description="The data file used as input for this admin CLI task. Required." />
		<attribute name="objectSelector" default="" description="The object selector to be used with the admin task. Optional. By default, the macrodef tries to construct the objectselector based on the other input attributes. If this is specified, most other attributes like envName etc will be ignored." />
		<attribute name="remotePropsFile" default="${remotePropsFile}" description="The remote properties file. Optional. By default the value of the property remotePropsFile defined will be used." />
		<attribute name="action" default="start" description="action to pass to admin task. Default is start." />
		<attribute name="overwrite" default="true" description="overwrite flag passed to the admin task. Optional. Default is true" />
		<attribute name="merge" default="true" description="merge flag passed to the admin task. Optional. Default is true" />
		<attribute name="createIfNotExists" default="true" description="The createIfNotExists flag passed to the admin task. Optional. Default is true" />
		<attribute name="force" default="false" description="force flag passed to the admin task. Optional. Default is true" />
		<attribute name="failOnError" default="true" description="failOnError flag passed to the admin task. Optional. Default is true" />
		<attribute name="options" default="" description="options flag passed to the admin task. It can be: handledependencies. "/>
		<attribute name="timeout" default="120" />
		<sequential>
			<echo>${line.separator}${line.separator}</echo>
			<echo>Start an application using:</echo>
			<echo>envName: @{envName}</echo>
			<echo>appName: @{appName}</echo>
			<echo>dataFile: @{dataFile}</echo>
			<echo>remotePropsFile: @{remotePropsFile}</echo>
			<echo>objectSelector: @{objectSelector}</echo>
			<echo>action: @{action}</echo>
			<echo>overwrite: @{overwrite}</echo>
			<echo>merge: @{merge}</echo>
			<echo>createIfNotExists: @{createIfNotExists}</echo>
			<echo>force: @{force}</echo>
			<echo>failOnError: @{failOnError}</echo>
			<echo>timeout: @{timeout}</echo>
			<if>
				<not>
					<equals arg1="@{objectSelector}" arg2="" />
				</not>
				<then>
					<var name="obj.sel" value="@{objectSelector}" />
				</then>
				<else>
					<if>
						<equals arg1="@{envName}" arg2="" />
						<then>
							<var name="obj.sel" value="Environment" />
						</then>
						<else>
							<var name="obj.sel" value="Environment[@name='@{envName}']" />
						</else>
					</if>
					<if>
						<equals arg1="@{appName}" arg2="" />
						<then>
							<var name="obj.sel" value="${obj.sel}//Application" />
						</then>
						<else>
							<var name="obj.sel" value="${obj.sel}//Application[@name='@{appName}']" />
						</else>
					</if>
				</else>
			</if>
			<echo message="Invoking Admin task using the objectselector: ${obj.sel}" />
			<if>
				<equals arg1="@{options}" arg2="" />
				<then>
					<AMXAdminTask remote="true" propsFile="@{remotePropsFile}" action="@{action}" dataFile="@{dataFile}" objectSelector="${obj.sel}" overwrite="@{overwrite}" merge="@{merge}" createIfNotExists="@{createIfNotExists}" force="@{force}" failOnError="@{failOnError}" timeout="@{timeout}" />
				</then>
				<else>
					<AMXAdminTask remote="true" propsFile="@{remotePropsFile}" action="@{action}" dataFile="@{dataFile}" objectSelector="${obj.sel}" overwrite="@{overwrite}" merge="@{merge}" createIfNotExists="@{createIfNotExists}" force="@{force}" failOnError="@{failOnError}" options="@{options}" timeout="@{timeout}" />
				</else>
			</if>
			<echo>${line.separator}${line.separator}</echo>
		</sequential>
	</macrodef>

	<macrodef name="stop.app" backtrace="true" description="stop the application. If objectSelector attribute is specified, some of the input attributes will be ignored.">
		<attribute name="envName" default="" description="the name of the environment. Optional. If not specified all environments in data file are selected." />
		<attribute name="appName" default="" description="The name of the application. Optional. If not specified all the applications will be selected." />
		<attribute name="dataFile" description="The data file used as input for this admin CLI task. Required." />
		<attribute name="objectSelector" default="" description="The object selector to be used with the admin task. Optional. By default, the macrodef tries to construct the objectselector based on the other input attributes. If this is specified, most other attributes like envName etc will be ignored." />
		<attribute name="remotePropsFile" default="${remotePropsFile}" description="The remote properties file. Optional. By default the value of the property remotePropsFile defined will be used." />
		<attribute name="action" default="stop" description="action to pass to admin task. Default is stop." />
		<attribute name="overwrite" default="true" description="overwrite flag passed to the admin task. Optional. Default is true" />
		<attribute name="merge" default="true" description="merge flag passed to the admin task. Optional. Default is true" />
		<attribute name="createIfNotExists" default="true" description="The createIfNotExists flag passed to the admin task. Optional. Default is true" />
		<attribute name="force" default="false" description="force flag passed to the admin task. Optional. Default is true" />
		<attribute name="failOnError" default="true" description="failOnError flag passed to the admin task. Optional. Default is true" />
		<attribute name="options" default="" description="options flag passed to the admin task. It can be: handledependencies. "/>
		<attribute name="timeout" default="120" />
		<sequential>
			<echo>${line.separator}${line.separator}</echo>
			<echo>Stop an application using:</echo>
			<echo>envName: @{envName}</echo>
			<echo>appName: @{appName}</echo>
			<echo>dataFile: @{dataFile}</echo>
			<echo>remotePropsFile: @{remotePropsFile}</echo>
			<echo>objectSelector: @{objectSelector}</echo>
			<echo>action: @{action}</echo>
			<echo>overwrite: @{overwrite}</echo>
			<echo>merge: @{merge}</echo>
			<echo>createIfNotExists: @{createIfNotExists}</echo>
			<echo>force: @{force}</echo>
			<echo>failOnError: @{failOnError}</echo>
			<echo>timeout: @{timeout}</echo>
			<if>
				<not>
					<equals arg1="@{objectSelector}" arg2="" />
				</not>
				<then>
					<var name="obj.sel" value="@{objectSelector}" />
				</then>
				<else>
					<if>
						<equals arg1="@{envName}" arg2="" />
						<then>
							<var name="obj.sel" value="Environment" />
						</then>
						<else>
							<var name="obj.sel" value="Environment[@name='@{envName}']" />
						</else>
					</if>
					<if>
						<equals arg1="@{appName}" arg2="" />
						<then>
							<var name="obj.sel" value="${obj.sel}//Application" />
						</then>
						<else>
							<var name="obj.sel" value="${obj.sel}//Application[@name='@{appName}']" />
						</else>
					</if>
				</else>
			</if>
			<echo message="Invoking Admin task using the objectselector: ${obj.sel}" />
			<if>
				<equals arg1="@{options}" arg2="" />
				<then>
					<AMXAdminTask remote="true" propsFile="@{remotePropsFile}" action="@{action}" dataFile="@{dataFile}" objectSelector="${obj.sel}" overwrite="@{overwrite}" merge="@{merge}" createIfNotExists="@{createIfNotExists}" force="@{force}" failOnError="@{failOnError}" timeout="@{timeout}" options="normal" />
				</then>
				<else>
					<AMXAdminTask remote="true" propsFile="@{remotePropsFile}" action="@{action}" dataFile="@{dataFile}" objectSelector="${obj.sel}" overwrite="@{overwrite}" merge="@{merge}" createIfNotExists="@{createIfNotExists}" force="@{force}" failOnError="@{failOnError}" timeout="@{timeout}" options="@{options}" />
				</else>
			</if>
			<echo>${line.separator}${line.separator}</echo>
		</sequential>
	</macrodef>


	<macrodef name="delete.app" backtrace="true" description="Delete the application. If objectSelector attribute is specified, some of the input attributes will be ignored.">
		<attribute name="envName" default="" description="the name of the environment. Optional. If not specified all environments in data file are selected." />
		<attribute name="appName" default="" description="The name of the application. Optional. If not specified all the applications will be selected." />
		<attribute name="dataFile" description="The data file used as input for this admin CLI task. Required." />
		<attribute name="objectSelector" default="" description="The object selector to be used with the admin task. Optional. By default, the macrodef tries to construct the objectselector based on the other input attributes. If this is specified, most other attributes like envName etc will be ignored." />
		<attribute name="remotePropsFile" default="${remotePropsFile}" description="The remote properties file. Optional. By default the value of the property remotePropsFile defined will be used." />
		<attribute name="action" default="delete" description="action to pass to admin task. Default is delete." />
		<attribute name="overwrite" default="true" description="overwrite flag passed to the admin task. Optional. Default is true" />
		<attribute name="merge" default="true" description="merge flag passed to the admin task. Optional. Default is true" />
		<attribute name="createIfNotExists" default="true" description="The createIfNotExists flag passed to the admin task. Optional. Default is true" />
		<attribute name="force" default="false" description="force flag passed to the admin task. Optional. Default is false" />
		<attribute name="failOnError" default="true" description="failOnError flag passed to the admin task. Optional. Default is true" />
		<attribute name="timeout" default="120" />
		<sequential>
			<echo>${line.separator}${line.separator}</echo>
			<echo>Delete the application using:</echo>
			<echo>envName: @{envName}</echo>
			<echo>appName: @{appName}</echo>
			<echo>dataFile: @{dataFile}</echo>
			<echo>remotePropsFile: @{remotePropsFile}</echo>
			<echo>objectSelector: @{objectSelector}</echo>
			<echo>action: @{action}</echo>
			<echo>overwrite: @{overwrite}</echo>
			<echo>merge: @{merge}</echo>
			<echo>createIfNotExists: @{createIfNotExists}</echo>
			<echo>force: @{force}</echo>
			<echo>failOnError: @{failOnError}</echo>
			<echo>timeout: @{timeout}</echo>
			<if>
				<not>
					<equals arg1="@{objectSelector}" arg2="" />
				</not>
				<then>
					<var name="obj.sel" value="@{objectSelector}" />
				</then>
				<else>
					<if>
						<equals arg1="@{envName}" arg2="" />
						<then>
							<var name="obj.sel" value="Environment" />
						</then>
						<else>
							<var name="obj.sel" value="Environment[@name='@{envName}']" />
						</else>
					</if>
					<if>
						<equals arg1="@{appName}" arg2="" />
						<then>
							<var name="obj.sel" value="${obj.sel}//Application" />
						</then>
						<else>
							<var name="obj.sel" value="${obj.sel}//Application[@name='@{appName}']" />
						</else>
					</if>
				</else>
			</if>
			<echo message="Invoking Admin task using the objectselector: ${obj.sel}" />
			<AMXAdminTask remote="true" propsFile="@{remotePropsFile}" action="@{action}" dataFile="@{dataFile}" objectSelector="${obj.sel}" overwrite="@{overwrite}" merge="@{merge}" createIfNotExists="@{createIfNotExists}" force="@{force}" failOnError="@{failOnError}" timeout="@{timeout}" />
			<echo>${line.separator}${line.separator}</echo>
		</sequential>
	</macrodef>

	<macrodef name="delete.daa" backtrace="true" description="Delete the DAA. If objectSelector attribute is specified, some of the input attributes will be ignored.">
		<attribute name="dataFile" description="The data file used as input for this admin CLI task. Required." />
		<attribute name="objectSelector" default="DAA" description="The object selector to be used with the admin task. Optional. By default, the macrodef tries to construct the objectselector based on the other input attributes. If this is specified, most other attributes like envName etc will be ignored." />
		<attribute name="remotePropsFile" default="${remotePropsFile}" description="The remote properties file. Optional. By default the value of the property remotePropsFile defined will be used." />
		<attribute name="action" default="delete" description="action to pass to admin task. Default is delete." />
		<attribute name="overwrite" default="true" description="overwrite flag passed to the admin task. Optional. Default is true" />
		<attribute name="merge" default="true" description="merge flag passed to the admin task. Optional. Default is true" />
		<attribute name="createIfNotExists" default="true" description="The createIfNotExists flag passed to the admin task. Optional. Default is true" />
		<attribute name="force" default="false" description="force flag passed to the admin task. Optional. Default is false" />
		<attribute name="failOnError" default="true" description="failOnError flag passed to the admin task. Optional. Default is true" />
		<attribute name="timeout" default="120" />
		<sequential>
			<echo>${line.separator}${line.separator}</echo>
			<echo>Delete the DAA using:</echo>
			<echo>envName: @{envName}</echo>
			<echo>appName: @{appName}</echo>
			<echo>dataFile: @{dataFile}</echo>
			<echo>remotePropsFile: @{remotePropsFile}</echo>
			<echo>objectSelector: @{objectSelector}</echo>
			<echo>action: @{action}</echo>
			<echo>overwrite: @{overwrite}</echo>
			<echo>merge: @{merge}</echo>
			<echo>createIfNotExists: @{createIfNotExists}</echo>
			<echo>force: @{force}</echo>
			<echo>failOnError: @{failOnError}</echo>
			<echo>timeout: @{timeout}</echo>
			<if>
				<not>
					<equals arg1="@{objectSelector}" arg2="" />
				</not>
				<then>
					<var name="obj.sel" value="@{objectSelector}" />
				</then>
				<else>
					<if>
						<equals arg1="@{envName}" arg2="" />
						<then>
							<var name="obj.sel" value="Environment" />
						</then>
						<else>
							<var name="obj.sel" value="Environment[@name='@{envName}']" />
						</else>
					</if>
					<if>
						<equals arg1="@{appName}" arg2="" />
						<then>
							<var name="obj.sel" value="${obj.sel}//Application" />
						</then>
						<else>
							<var name="obj.sel" value="${obj.sel}//Application[@name='@{appName}']" />
						</else>
					</if>
				</else>
			</if>
			<echo message="Invoking Admin task using the objectselector: ${obj.sel}" />
			<AMXAdminTask remote="true" propsFile="@{remotePropsFile}" action="@{action}" dataFile="@{dataFile}" objectSelector="${obj.sel}" overwrite="@{overwrite}" merge="@{merge}" createIfNotExists="@{createIfNotExists}" force="@{force}" failOnError="@{failOnError}" timeout="@{timeout}" />
			<echo>${line.separator}${line.separator}</echo>
		</sequential>
	</macrodef>
	
	
	<macrodef name="add.app.permissions" backtrace="true" description="Set Permissions to Application. If objectSelector attribute is specified, some of the input attributes will be ignored.">
		<attribute name="envName" default="" description="the name of the environment. Optional. If not specified all environments in data file are selected." />
		<attribute name="appName" default="" description="The name of the application. Optional. If not specified all the applications will be selected." />
		<attribute name="dataFile" description="The data file used as input for this admin CLI task. Required." />
		<attribute name="objectSelector" default="" description="The object selector to be used with the admin task. Optional. By default, the macrodef tries to construct the objectselector based on the other input attributes. If this is specified, most other attributes like envName etc will be ignored." />
		<attribute name="remotePropsFile" default="${remotePropsFile}" description="The remote properties file. Optional. By default the value of the property remotePropsFile defined will be used." />
		<attribute name="action" default="add" description="action to pass to admin task. Default is add." />
		<attribute name="overwrite" default="true" description="overwrite flag passed to the admin task. Optional. Default is true" />
		<attribute name="merge" default="true" description="merge flag passed to the admin task. Optional. Default is true" />
		<attribute name="createIfNotExists" default="true" description="The createIfNotExists flag passed to the admin task. Optional. Default is true" />
		<attribute name="force" default="false" description="force flag passed to the admin task. Optional. Default is false" />
		<attribute name="failOnError" default="true" description="failOnError flag passed to the admin task. Optional. Default is true" />
		<sequential>
			<echo>${line.separator}${line.separator}</echo>
			<echo>Adding Application Permissions using:</echo>
			<echo>envName: @{envName}</echo>
			<echo>appName: @{appName}</echo>
			<echo>dataFile: @{dataFile}</echo>
			<echo>remotePropsFile: @{remotePropsFile}</echo>
			<echo>objectSelector: @{objectSelector}</echo>
			<echo>action: @{action}</echo>
			<echo>overwrite: @{overwrite}</echo>
			<echo>merge: @{merge}</echo>
			<echo>createIfNotExists: @{createIfNotExists}</echo>
			<echo>force: @{force}</echo>
			<echo>failOnError: @{failOnError}</echo>
			<if>
				<not>
					<equals arg1="@{objectSelector}" arg2="" />
				</not>
				<then>
					<var name="obj.sel" value="@{objectSelector}" />
				</then>
				<else>
					<if>
						<equals arg1="@{envName}" arg2="" />
						<then>
							<var name="obj.sel" value="Environment" />
						</then>
						<else>
							<var name="obj.sel" value="Environment[@name='@{envName}']" />
						</else>
					</if>
					<if>
						<equals arg1="@{appName}" arg2="" />
						<then>
							<var name="obj.sel" value="${obj.sel}//Application" />
						</then>
						<else>
							<var name="obj.sel" value="${obj.sel}//Application[@name='@{appName}']" />
						</else>
					</if>
					<var name="obj.sel" value="${obj.sel}/Permissions" />
				</else>
			</if>
			<echo message="Invoking Admin task using the objectselector: ${obj.sel}" />
			<AMXAdminTask remote="true" propsFile="@{remotePropsFile}" action="@{action}" dataFile="@{dataFile}" objectSelector="${obj.sel}" overwrite="@{overwrite}" merge="@{merge}" createIfNotExists="@{createIfNotExists}" force="@{force}" failOnError="@{failOnError}" />
			<echo>${line.separator}${line.separator}</echo>
		</sequential>
	</macrodef>

	<macrodef name="create.rt" backtrace="true" description="Create the resource template. If objectSelector attribute is specified, some of the input attributes will be ignored.">
		<attribute name="resourceTemplateName" default="" description="Name of the resource template. Optional. If not specified all the Resource templates in data file are selected." />
		<attribute name="dataFile" description="The data file used as input for this admin CLI task. Required." />
		<attribute name="objectSelector" default="" description="The object selector to be used with the admin task. Optional. By default, the macrodef tries to construct the objectselector based on the other input attributes. If this is specified, most other attributes like envName etc will be ignored." />
		<attribute name="remotePropsFile" default="${remotePropsFile}" description="The remote properties file. Optional. By default the value of the property remotePropsFile defined will be used." />
		<attribute name="action" default="add" description="action to pass to admin task. Default is add." />
		<attribute name="overwrite" default="true" description="overwrite flag passed to the admin task. Optional. Default is true" />
		<attribute name="merge" default="true" description="merge flag passed to the admin task. Optional. Default is true" />
		<attribute name="createIfNotExists" default="true" description="The createIfNotExists flag passed to the admin task. Optional. Default is true" />
		<attribute name="force" default="false" description="force flag passed to the admin task. Optional. Default is false" />
		<attribute name="failOnError" default="true" description="failOnError flag passed to the admin task. Optional. Default is true" />
		<sequential>
			<echo>${line.separator}${line.separator}</echo>
			<echo>Create the resource template using:</echo>
			<echo>resourceTemplateName: @{resourceTemplateName}</echo>
			<echo>dataFile: @{dataFile}</echo>
			<echo>remotePropsFile: @{remotePropsFile}</echo>
			<echo>objectSelector: @{objectSelector}</echo>
			<echo>action: @{action}</echo>
			<echo>overwrite: @{overwrite}</echo>
			<echo>merge: @{merge}</echo>
			<echo>createIfNotExists: @{createIfNotExists}</echo>
			<echo>force: @{force}</echo>
			<echo>failOnError: @{failOnError}</echo>
			<if>
				<not>
					<equals arg1="@{objectSelector}" arg2="" />
				</not>
				<then>
					<var name="obj.sel" value="@{objectSelector}" />
				</then>
				<else>
					<if>
						<equals arg1="@{resourceTemplateName}" arg2="" />
						<then>
							<var name="obj.sel" value="ResourceTemplate" />
						</then>
						<else>
							<var name="obj.sel" value="ResourceTemplate[@name='@{resourceTemplateName}']" />
						</else>
					</if>
				</else>
			</if>
			<echo message="Invoking Admin task using the objectselector: ${obj.sel}" />
			<AMXAdminTask remote="true" propsFile="@{remotePropsFile}" action="@{action}" dataFile="@{dataFile}" objectSelector="${obj.sel}" overwrite="@{overwrite}" merge="@{merge}" createIfNotExists="@{createIfNotExists}" force="@{force}" failOnError="@{failOnError}" />
			<echo>${line.separator}${line.separator}</echo>
		</sequential>
	</macrodef>

	<macrodef name="edit.rt" backtrace="true" description="Edit the resource template. If objectSelector attribute is specified, some of the input attributes will be ignored.">
		<attribute name="resourceTemplateName" default="" description="Name of the resource template. Optional. If not specified all the Resource templates in data file are selected." />
		<attribute name="dataFile" description="The data file used as input for this admin CLI task. Required." />
		<attribute name="objectSelector" default="" description="The object selector to be used with the admin task. Optional. By default, the macrodef tries to construct the objectselector based on the other input attributes. If this is specified, most other attributes like envName etc will be ignored." />
		<attribute name="remotePropsFile" default="${remotePropsFile}" description="The remote properties file. Optional. By default the value of the property remotePropsFile defined will be used." />
		<attribute name="action" default="edit" description="action to pass to admin task. Default is edit." />
		<attribute name="overwrite" default="true" description="overwrite flag passed to the admin task. Optional. Default is true" />
		<attribute name="merge" default="true" description="merge flag passed to the admin task. Optional. Default is true" />
		<attribute name="options" default="incrementalEdit" description="Options are doing incremental edit" />
		<attribute name="createIfNotExists" default="true" description="The createIfNotExists flag passed to the admin task. Optional. Default is true" />
		<attribute name="force" default="true" description="force flag passed to the admin task. Optional. Default is false" />
		<attribute name="failOnError" default="false" description="failOnError flag passed to the admin task. Optional. Default is false" />
		<sequential>
			<echo>${line.separator}${line.separator}</echo>
			<echo>Edit the resource template using:</echo>
			<echo>resourceTemplateName: @{resourceTemplateName}</echo>
			<echo>dataFile: @{dataFile}</echo>
			<echo>remotePropsFile: @{remotePropsFile}</echo>
			<echo>objectSelector: @{objectSelector}</echo>
			<echo>action: @{action}</echo>
			<echo>overwrite: @{overwrite}</echo>
			<echo>merge: @{merge}</echo>
			<echo>options: @{options}</echo>
			<echo>createIfNotExists: @{createIfNotExists}</echo>
			<echo>force: @{force}</echo>
			<echo>failOnError: @{failOnError}</echo>
			<if>
				<not>
					<equals arg1="@{objectSelector}" arg2="" />
				</not>
				<then>
					<var name="obj.sel" value="@{objectSelector}" />
				</then>
				<else>
					<if>
						<equals arg1="@{resourceTemplateName}" arg2="" />
						<then>
							<var name="obj.sel" value="ResourceTemplate" />
						</then>
						<else>
							<var name="obj.sel" value="ResourceTemplate[@name='@{resourceTemplateName}']" />
						</else>
					</if>
				</else>
			</if>
			<echo message="Invoking Admin task using the objectselector: ${obj.sel}" />
			<AMXAdminTask remote="true" propsFile="@{remotePropsFile}" action="@{action}" dataFile="@{dataFile}" objectSelector="${obj.sel}" overwrite="@{overwrite}" merge="@{merge}" options="@{options}" createIfNotExists="@{createIfNotExists}" force="@{force}" failOnError="@{failOnError}" />
			<echo>${line.separator}${line.separator}</echo>
		</sequential>
	</macrodef>

	<macrodef name="changescope.rt" backtrace="true" description="Change the scope for the resource template. If objectSelector attribute is specified, some of the input attributes will be ignored.">
		<attribute name="resourceTemplateName" default="" description="Name of the resource template. Optional. If not specified all the Resource templates in data file are selected." />
		<attribute name="dataFile" description="The data file used as input for this admin CLI task. Required." />
		<attribute name="objectSelector" default="" description="The object selector to be used with the admin task. Optional. By default, the macrodef tries to construct the objectselector based on the other input attributes. If this is specified, most other attributes like envName etc will be ignored." />
		<attribute name="remotePropsFile" default="${remotePropsFile}" description="The remote properties file. Optional. By default the value of the property remotePropsFile defined will be used." />
		<attribute name="action" default="changescope" description="action to pass to admin task. Default is edit." />
		<attribute name="overwrite" default="true" description="overwrite flag passed to the admin task. Optional. Default is true" />
		<attribute name="merge" default="true" description="merge flag passed to the admin task. Optional. Default is true" />
		<attribute name="options" default="incrementalEdit" description="Options are doing incremental edit" />
		<attribute name="createIfNotExists" default="true" description="The createIfNotExists flag passed to the admin task. Optional. Default is true" />
		<attribute name="force" default="true" description="force flag passed to the admin task. Optional. Default is false" />
		<attribute name="failOnError" default="false" description="failOnError flag passed to the admin task. Optional. Default is false" />
		<sequential>
			<echo>${line.separator}${line.separator}</echo>
			<echo>Edit the resource template using:</echo>
			<echo>resourceTemplateName: @{resourceTemplateName}</echo>
			<echo>dataFile: @{dataFile}</echo>
			<echo>remotePropsFile: @{remotePropsFile}</echo>
			<echo>objectSelector: @{objectSelector}</echo>
			<echo>action: @{action}</echo>
			<echo>overwrite: @{overwrite}</echo>
			<echo>merge: @{merge}</echo>
			<echo>options: @{options}</echo>
			<echo>createIfNotExists: @{createIfNotExists}</echo>
			<echo>force: @{force}</echo>
			<echo>failOnError: @{failOnError}</echo>
			<if>
				<not>
					<equals arg1="@{objectSelector}" arg2="" />
				</not>
				<then>
					<var name="obj.sel" value="@{objectSelector}" />
				</then>
				<else>
					<if>
						<equals arg1="@{resourceTemplateName}" arg2="" />
						<then>
							<var name="obj.sel" value="ResourceTemplate" />
						</then>
						<else>
							<var name="obj.sel" value="ResourceTemplate[@name='@{resourceTemplateName}']" />
						</else>
					</if>
				</else>
			</if>
			<echo message="Invoking Admin task using the objectselector: ${obj.sel}" />
			<AMXAdminTask remote="true" propsFile="@{remotePropsFile}" action="@{action}" dataFile="@{dataFile}" objectSelector="${obj.sel}" overwrite="@{overwrite}" merge="@{merge}" options="@{options}" createIfNotExists="@{createIfNotExists}" force="@{force}" failOnError="@{failOnError}" />
			<echo>${line.separator}${line.separator}</echo>
		</sequential>
	</macrodef>
	
	<macrodef name="delete.rt" backtrace="true" description="Delete the resource template. If objectSelector attribute is specified, some of the input attributes will be ignored.">
		<attribute name="resourceTemplateName" default="" description="Name of the resource template. Optional. If not specified all the Resource templates in data file are selected." />
		<attribute name="dataFile" description="The data file used as input for this admin CLI task. Required." />
		<attribute name="objectSelector" default="" description="The object selector to be used with the admin task. Optional. By default, the macrodef tries to construct the objectselector based on the other input attributes. If this is specified, most other attributes like envName etc will be ignored." />
		<attribute name="remotePropsFile" default="${remotePropsFile}" description="The remote properties file. Optional. By default the value of the property remotePropsFile defined will be used." />
		<attribute name="action" default="delete" description="action to pass to admin task. Default is delete." />
		<attribute name="overwrite" default="true" description="overwrite flag passed to the admin task. Optional. Default is true" />
		<attribute name="merge" default="true" description="merge flag passed to the admin task. Optional. Default is true" />
		<attribute name="createIfNotExists" default="true" description="The createIfNotExists flag passed to the admin task. Optional. Default is true" />
		<attribute name="force" default="false" description="force flag passed to the admin task. Optional. Default is false" />
		<attribute name="failOnError" default="true" description="failOnError flag passed to the admin task. Optional. Default is true" />
		<sequential>
			<echo>${line.separator}${line.separator}</echo>
			<echo>Delete the resource template using:</echo>
			<echo>resourceTemplateName: @{resourceTemplateName}</echo>
			<echo>dataFile: @{dataFile}</echo>
			<echo>remotePropsFile: @{remotePropsFile}</echo>
			<echo>objectSelector: @{objectSelector}</echo>
			<echo>action: @{action}</echo>
			<echo>overwrite: @{overwrite}</echo>
			<echo>merge: @{merge}</echo>
			<echo>createIfNotExists: @{createIfNotExists}</echo>
			<echo>force: @{force}</echo>
			<echo>failOnError: @{failOnError}</echo>
			<if>
				<not>
					<equals arg1="@{objectSelector}" arg2="" />
				</not>
				<then>
					<var name="obj.sel" value="@{objectSelector}" />
				</then>
				<else>
					<if>
						<equals arg1="@{resourceTemplateName}" arg2="" />
						<then>
							<var name="obj.sel" value="ResourceTemplate" />
						</then>
						<else>
							<var name="obj.sel" value="ResourceTemplate[@name='@{resourceTemplateName}']" />
						</else>
					</if>
				</else>
			</if>
			<echo message="Invoking Admin task using the objectselector: ${obj.sel}" />
			<AMXAdminTask remote="true" propsFile="@{remotePropsFile}" action="@{action}" dataFile="@{dataFile}" objectSelector="${obj.sel}" overwrite="@{overwrite}" merge="@{merge}" createIfNotExists="@{createIfNotExists}" force="@{force}" failOnError="@{failOnError}" />
			<echo>${line.separator}${line.separator}</echo>
		</sequential>
	</macrodef>

	<macrodef name="rename.rt" backtrace="true" description="Change the scope for the resource template. If objectSelector attribute is specified, some of the input attributes will be ignored.">
		<attribute name="resourceTemplateName" default="" description="Name of the resource template. Optional. If not specified all the Resource templates in data file are selected." />
		<attribute name="dataFile" description="The data file used as input for this admin CLI task. Required." />
		<attribute name="objectSelector" default="" description="The object selector to be used with the admin task. Optional. By default, the macrodef tries to construct the objectselector based on the other input attributes. If this is specified, most other attributes like envName etc will be ignored." />
		<attribute name="remotePropsFile" default="${remotePropsFile}" description="The remote properties file. Optional. By default the value of the property remotePropsFile defined will be used." />
		<attribute name="action" default="rename" description="action to pass to admin task. Default is edit." />
		<attribute name="overwrite" default="true" description="overwrite flag passed to the admin task. Optional. Default is true" />
		<attribute name="merge" default="true" description="merge flag passed to the admin task. Optional. Default is true" />
		<attribute name="options" default="incrementalEdit" description="Options are doing incremental edit" />
		<attribute name="createIfNotExists" default="true" description="The createIfNotExists flag passed to the admin task. Optional. Default is true" />
		<attribute name="force" default="true" description="force flag passed to the admin task. Optional. Default is false" />
		<attribute name="failOnError" default="false" description="failOnError flag passed to the admin task. Optional. Default is false" />
		<sequential>
			<echo>${line.separator}${line.separator}</echo>
			<echo>Edit the resource template using:</echo>
			<echo>resourceTemplateName: @{resourceTemplateName}</echo>
			<echo>dataFile: @{dataFile}</echo>
			<echo>remotePropsFile: @{remotePropsFile}</echo>
			<echo>objectSelector: @{objectSelector}</echo>
			<echo>action: @{action}</echo>
			<echo>overwrite: @{overwrite}</echo>
			<echo>merge: @{merge}</echo>
			<echo>options: @{options}</echo>
			<echo>createIfNotExists: @{createIfNotExists}</echo>
			<echo>force: @{force}</echo>
			<echo>failOnError: @{failOnError}</echo>
			<if>
				<not>
					<equals arg1="@{objectSelector}" arg2="" />
				</not>
				<then>
					<var name="obj.sel" value="@{objectSelector}" />
				</then>
				<else>
					<if>
						<equals arg1="@{resourceTemplateName}" arg2="" />
						<then>
							<var name="obj.sel" value="ResourceTemplate" />
						</then>
						<else>
							<var name="obj.sel" value="ResourceTemplate[@name='@{resourceTemplateName}']" />
						</else>
					</if>
				</else>
			</if>
			<echo message="Invoking Admin task using the objectselector: ${obj.sel}" />
			<AMXAdminTask remote="true" propsFile="@{remotePropsFile}" action="@{action}" dataFile="@{dataFile}" objectSelector="${obj.sel}" overwrite="@{overwrite}" merge="@{merge}" options="@{options}" createIfNotExists="@{createIfNotExists}" force="@{force}" failOnError="@{failOnError}" />
			<echo>${line.separator}${line.separator}</echo>
		</sequential>
	</macrodef>
	
	<macrodef name="add.rt.permissions" backtrace="true" description="Set Permissions to Resource Template.">
		<attribute name="resourceTemplateName" default="" description="the name of the resource. Optional. If not specified all environments in data file are selected." />
		<attribute name="dataFile" description="The data file used as input for this admin CLI task. Required." />
		<attribute name="objectSelector" default="" description="The object selector to be used with the admin task." />
		<attribute name="remotePropsFile" default="${remotePropsFile}" description="The remote properties file." />
		<attribute name="action" default="add" description="action to pass to admin task. Default is add." />
		<attribute name="overwrite" default="true" description="overwrite flag passed to the admin task. Optional. Default is true" />
		<attribute name="merge" default="true" description="merge flag passed to the admin task. Optional. Default is true" />
		<attribute name="createIfNotExists" default="true" description="The createIfNotExists flag passed to the admin task. Optional. Default is true" />
		<attribute name="force" default="false" description="force flag passed to the admin task. Optional. Default is false" />
		<attribute name="failOnError" default="true" description="failOnError flag passed to the admin task. Optional. Default is true" />
		<sequential>
			<echo>${line.separator}${line.separator}</echo>
			<echo>Adding Resource Template Permissions using:</echo>
			<echo>resourceTemplateName: @{resourceTemplateName}</echo>
			<echo>dataFile: @{dataFile}</echo>
			<echo>remotePropsFile: @{remotePropsFile}</echo>
			<echo>objectSelector: @{objectSelector}</echo>
			<echo>action: @{action}</echo>
			<echo>overwrite: @{overwrite}</echo>
			<echo>merge: @{merge}</echo>
			<echo>createIfNotExists: @{createIfNotExists}</echo>
			<echo>force: @{force}</echo>
			<echo>failOnError: @{failOnError}</echo>
			<if>
				<not>
					<equals arg1="@{objectSelector}" arg2="" />
				</not>
				<then>
					<var name="obj.sel" value="@{objectSelector}" />
				</then>
				<else>
					<if>
						<equals arg1="@{resourceTemplateName}" arg2="" />
						<then>
							<var name="obj.sel" value="ResourceTemplate" />
						</then>
						<else>
							<var name="obj.sel" value="ResourceTemplate[@name='@{resourceTemplateName}']" />
						</else>
					</if>
					<var name="obj.sel" value="${obj.sel}/Permissions" />
				</else>
			</if>
			<echo message="Invoking Admin task using the objectselector: ${obj.sel}" />
			<AMXAdminTask remote="true" propsFile="@{remotePropsFile}" action="@{action}" dataFile="@{dataFile}" objectSelector="${obj.sel}" overwrite="@{overwrite}" merge="@{merge}" createIfNotExists="@{createIfNotExists}" force="@{force}" failOnError="@{failOnError}" />
			<echo>${line.separator}${line.separator}</echo>
		</sequential>
	</macrodef>
	
	<macrodef name="setup.ri" backtrace="true" description="Setup the resource Instance. If objectSelector attribute is specified, some of the input attributes will be ignored.">
		<attribute name="resourceInstanceName" default="" description="Name of the resource instance. Optional. If not specified all the Resource instances in data file are selected." />
		<attribute name="resourceTemplateName" default="" description="Name of the resource template. Optional. If not specified all the Resource templates in data file are selected." />
		<attribute name="envName" default="" description="the name of the environment. Optional. If not specified all environments in data file are selected." />
		<attribute name="nodeName" default="" description="the name of the node. Optional. If not specified all nodes in data file are selected." />
		<attribute name="hostName" default="" description="The name of the host. Optional. If not specified, all the hosts in the data file are selected." />
		<attribute name="dataFile" description="The data file used as input for this admin CLI task. Required." />
		<attribute name="objectSelector" default="" description="The object selector to be used with the admin task. Optional. By default, the macrodef tries to construct the objectselector based on the other input attributes. If this is specified, most other attributes like envName etc will be ignored." />
		<attribute name="remotePropsFile" default="${remotePropsFile}" description="The remote properties file. Optional. By default the value of the property remotePropsFile defined will be used." />
		<attribute name="overwrite" default="true" description="overwrite flag passed to the admin task. Optional. Default is true" />
		<attribute name="merge" default="true" description="merge flag passed to the admin task. Optional. Default is true" />
		<attribute name="options" default="auto-resolve" description="Options are resolve, auto-resolve or empty (stable mode)" />
		<attribute name="createIfNotExists" default="true" description="The createIfNotExists flag passed to the admin task. Optional. Default is true" />
		<attribute name="force" default="false" description="force flag passed to the admin task. Optional. Default is false" />
		<attribute name="failOnError" default="true" description="failOnError flag passed to the admin task. Optional. Default is true" />
		<attribute name="timeout" default="120" description="The timeout to use for installing the RI" />
		<sequential>
			<echo>${line.separator}${line.separator}</echo>
			<echo>setup the resource instance using:</echo>
			<echo>resourceInstanceName: @{resourceInstanceName}</echo>
			<echo>resourceTemplateName: @{resourceTemplateName}</echo>
			<echo>envName: @{envName}</echo>
			<echo>nodeName: @{nodeName}</echo>
			<echo>hostName: @{hostName}</echo>
			<echo>dataFile: @{dataFile}</echo>
			<echo>remotePropsFile: @{remotePropsFile}</echo>
			<echo>objectSelector: @{objectSelector}</echo>
			<echo>overwrite: @{overwrite}</echo>
			<echo>merge: @{merge}</echo>
			<echo>options: @{options}</echo>
			<echo>createIfNotExists: @{createIfNotExists}</echo>
			<echo>force: @{force}</echo>
			<echo>failOnError: @{failOnError}</echo>
			<echo>timeout: @{timeout}</echo>
			<create.rt remotePropsFile="@{remotePropsFile}" dataFile="@{dataFile}" objectSelector="@{objectSelector}" overwrite="@{overwrite}" merge="@{merge}" createIfNotExists="@{createIfNotExists}" force="@{force}" failOnError="@{failOnError}" resourceTemplateName="@{resourceTemplateName}" />
			<create.ri remotePropsFile="@{remotePropsFile}" dataFile="@{dataFile}" objectSelector="@{objectSelector}" overwrite="@{overwrite}" merge="@{merge}" createIfNotExists="@{createIfNotExists}" force="@{force}" failOnError="@{failOnError}" envName="@{envName}" nodeName="@{nodeName}" hostName="@{hostName}" resourceInstanceName="@{resourceInstanceName}" />
			<install.ri remotePropsFile="@{remotePropsFile}" dataFile="@{dataFile}" objectSelector="@{objectSelector}" overwrite="@{overwrite}" merge="@{merge}" options="@{options}" createIfNotExists="@{createIfNotExists}" force="@{force}" failOnError="@{failOnError}" envName="@{envName}" nodeName="@{nodeName}" hostName="@{hostName}" resourceInstanceName="@{resourceInstanceName}" timeout="@{timeout}" />
		</sequential>
	</macrodef>

	<macrodef name="cleanup.ri" backtrace="true" description="Cleanup the resource Instance. If objectSelector attribute is specified, some of the input attributes will be ignored.">
		<attribute name="resourceInstanceName" default="" description="Name of the resource instance. Optional. If not specified all the Resource instances in data file are selected." />
		<attribute name="resourceTemplateName" default="" description="Name of the resource template. Optional. If not specified all the Resource templates in data file are selected." />
		<attribute name="envName" default="" description="the name of the environment. Optional. If not specified all environments in data file are selected." />
		<attribute name="nodeName" default="" description="the name of the node. Optional. If not specified all nodes in data file are selected." />
		<attribute name="hostName" default="" description="The name of the host. Optional. If not specified, all the hosts in the data file are selected." />
		<attribute name="dataFile" description="The data file used as input for this admin CLI task. Required." />
		<attribute name="objectSelector" default="" description="The object selector to be used with the admin task. Optional. By default, the macrodef tries to construct the objectselector based on the other input attributes. If this is specified, most other attributes like envName etc will be ignored." />
		<attribute name="remotePropsFile" default="${remotePropsFile}" description="The remote properties file. Optional. By default the value of the property remotePropsFile defined will be used." />
		<attribute name="overwrite" default="true" description="overwrite flag passed to the admin task. Optional. Default is true" />
		<attribute name="merge" default="true" description="merge flag passed to the admin task. Optional. Default is true" />
		<attribute name="createIfNotExists" default="true" description="The createIfNotExists flag passed to the admin task. Optional. Default is true" />
		<attribute name="force" default="false" description="force flag passed to the admin task. Optional. Default is false" />
		<attribute name="failOnError" default="true" description="failOnError flag passed to the admin task. Optional. Default is true" />
		<attribute name="timeout" default="120" description="The timeout to use for uninstalling the RI" />
		<sequential>
			<echo>${line.separator}${line.separator}</echo>
			<echo>cleanup the resource instance using:</echo>
			<echo>resourceInstanceName: @{resourceInstanceName}</echo>
			<echo>resourceTemplateName: @{resourceTemplateName}</echo>
			<echo>envName: @{envName}</echo>
			<echo>nodeName: @{nodeName}</echo>
			<echo>hostName: @{hostName}</echo>
			<echo>dataFile: @{dataFile}</echo>
			<echo>remotePropsFile: @{remotePropsFile}</echo>
			<echo>objectSelector: @{objectSelector}</echo>
			<echo>overwrite: @{overwrite}</echo>
			<echo>merge: @{merge}</echo>
			<echo>createIfNotExists: @{createIfNotExists}</echo>
			<echo>force: @{force}</echo>
			<echo>failOnError: @{failOnError}</echo>
			<echo>timeout: @{timeout}</echo>
			<uninstall.ri remotePropsFile="@{remotePropsFile}" dataFile="@{dataFile}" objectSelector="@{objectSelector}" overwrite="@{overwrite}" merge="@{merge}" createIfNotExists="@{createIfNotExists}" force="@{force}" failOnError="@{failOnError}" envName="@{envName}" nodeName="@{nodeName}" hostName="@{hostName}" resourceInstanceName="@{resourceInstanceName}" timeout="@{timeout}" />
			<delete.ri remotePropsFile="@{remotePropsFile}" dataFile="@{dataFile}" objectSelector="@{objectSelector}" overwrite="@{overwrite}" merge="@{merge}" createIfNotExists="@{createIfNotExists}" force="@{force}" failOnError="@{failOnError}" envName="@{envName}" nodeName="@{nodeName}" hostName="@{hostName}" resourceInstanceName="@{resourceInstanceName}" />
			<delete.rt remotePropsFile="@{remotePropsFile}" dataFile="@{dataFile}" objectSelector="@{objectSelector}" overwrite="@{overwrite}" merge="@{merge}" createIfNotExists="@{createIfNotExists}" force="@{force}" failOnError="@{failOnError}" resourceTemplateName="@{resourceTemplateName}" />
		</sequential>
	</macrodef>

	<macrodef name="create.ri" backtrace="true" description="Create the resource Instance. If objectSelector attribute is specified, some of the input attributes will be ignored.">
		<attribute name="resourceInstanceName" default="" description="Name of the resource instance. Optional. If not specified all the Resource instances in data file are selected." />
		<attribute name="envName" default="" description="the name of the environment. Optional. If not specified all environments in data file are selected." />
		<attribute name="nodeName" default="" description="the name of the node. Optional. If not specified all nodes in data file are selected." />
		<attribute name="hostName" default="" description="The name of the host. Optional. If not specified, all the hosts in the data file are selected." />
		<attribute name="dataFile" description="The data file used as input for this admin CLI task. Required." />
		<attribute name="objectSelector" default="" description="The object selector to be used with the admin task. Optional. By default, the macrodef tries to construct the objectselector based on the other input attributes. If this is specified, most other attributes like envName etc will be ignored." />
		<attribute name="remotePropsFile" default="${remotePropsFile}" description="The remote properties file. Optional. By default the value of the property remotePropsFile defined will be used." />
		<attribute name="action" default="add" description="action to pass to admin task. Default is add." />
		<attribute name="overwrite" default="true" description="overwrite flag passed to the admin task. Optional. Default is true" />
		<attribute name="merge" default="true" description="merge flag passed to the admin task. Optional. Default is true" />
		<attribute name="createIfNotExists" default="true" description="The createIfNotExists flag passed to the admin task. Optional. Default is true" />
		<attribute name="force" default="false" description="force flag passed to the admin task. Optional. Default is false" />
		<attribute name="failOnError" default="true" description="failOnError flag passed to the admin task. Optional. Default is true" />
		<sequential>
			<echo>${line.separator}${line.separator}</echo>
			<echo>Create the resource instance using:</echo>
			<echo>resourceInstanceName: @{resourceInstanceName}</echo>
			<echo>envName: @{envName}</echo>
			<echo>nodeName: @{nodeName}</echo>
			<echo>hostName: @{hostName}</echo>
			<echo>dataFile: @{dataFile}</echo>
			<echo>remotePropsFile: @{remotePropsFile}</echo>
			<echo>objectSelector: @{objectSelector}</echo>
			<echo>action: @{action}</echo>
			<echo>overwrite: @{overwrite}</echo>
			<echo>merge: @{merge}</echo>
			<echo>createIfNotExists: @{createIfNotExists}</echo>
			<echo>force: @{force}</echo>
			<echo>failOnError: @{failOnError}</echo>
			<if>
				<not>
					<equals arg1="@{objectSelector}" arg2="" />
				</not>
				<then>
					<var name="obj.sel" value="@{objectSelector}" />
				</then>
				<else>
					<if>
						<equals arg1="@{envName}" arg2="" />
						<then>
							<var name="obj.sel" value="Environment" />
						</then>
						<else>
							<var name="obj.sel" value="Environment[@name='@{envName}']" />
						</else>
					</if>

					<if>
						<equals arg1="@{nodeName}" arg2="" />
						<then>
							<var name="obj.sel" value="${obj.sel}/Node" />
						</then>
						<else>
							<var name="obj.sel" value="${obj.sel}/Node[@name='@{nodeName}']" />
						</else>
					</if>
					<if>
						<equals arg1="@{hostName}" arg2="" />
						<then>
							<var name="obj.sel2" value="Host" />
						</then>
						<else>
							<var name="obj.sel2" value="Host[@name='@{hostName}']" />
						</else>
					</if>
					<if>
						<equals arg1="@{resourceInstanceName}" arg2="" />
						<then>
							<var name="obj.sel" value="${obj.sel}/ResourceInstance | ${obj.sel2}/ResourceInstance" />
							<!--<var name="obj.sel2" value="${obj.sel2}/ResourceInstance" />-->
						</then>
						<else>
							<var name="obj.sel" value="${obj.sel}/ResourceInstance[@name='@{resourceInstanceName}'] | ${obj.sel2}/ResourceInstance[@name='@{resourceInstanceName}']" />
							<!--<var name="obj.sel2" value="${obj.sel2}/ResourceInstance[@name='@{resourceInstanceName}']" />-->
						</else>
					</if>
				</else>
			</if>
			<echo message="Invoking Admin task using the objectselector: ${obj.sel}" />
			<AMXAdminTask remote="true" propsFile="@{remotePropsFile}" action="@{action}" dataFile="@{dataFile}" objectSelector="${obj.sel}" overwrite="@{overwrite}" merge="@{merge}" createIfNotExists="@{createIfNotExists}" force="@{force}" failOnError="@{failOnError}" />
			<echo>${line.separator}${line.separator}</echo>
		</sequential>
	</macrodef>


	<macrodef name="install.ri" backtrace="true" description="Install the resource Instance. If objectSelector attribute is specified, some of the input attributes will be ignored.">
		<attribute name="resourceInstanceName" default="" description="Name of the resource instance. Optional. If not specified all the Resource instances in data file are selected." />
		<attribute name="envName" default="" description="the name of the environment. Optional. If not specified all environments in data file are selected." />
		<attribute name="nodeName" default="" description="the name of the node. Optional. If not specified all nodes in data file are selected." />
		<attribute name="hostName" default="" description="The name of the host. Optional. If not specified, all the hosts in the data file are selected." />
		<attribute name="dataFile" description="The data file used as input for this admin CLI task. Required." />
		<attribute name="objectSelector" default="" description="The object selector to be used with the admin task. Optional. By default, the macrodef tries to construct the objectselector based on the other input attributes. If this is specified, most other attributes like envName etc will be ignored." />
		<attribute name="remotePropsFile" default="${remotePropsFile}" description="The remote properties file. Optional. By default the value of the property remotePropsFile defined will be used." />
		<attribute name="action" default="install" description="action to pass to admin task. Default is install." />
		<attribute name="overwrite" default="true" description="overwrite flag passed to the admin task. Optional. Default is true" />
		<attribute name="merge" default="true" description="merge flag passed to the admin task. Optional. Default is true" />
		<attribute name="options" default="auto-resolve" description="Options are resolve, auto-resolve, handle-dependencies or empty (stable mode)" />
		<attribute name="createIfNotExists" default="true" description="The createIfNotExists flag passed to the admin task. Optional. Default is true" />
		<attribute name="force" default="false" />
		<attribute name="failOnError" default="true" description="failOnError flag passed to the admin task. Optional. Default is true" />
		<attribute name="timeout" default="120" description="The timeout to use for installing the RI" />
		<sequential>
			<echo>${line.separator}${line.separator}</echo>
			<echo>Install the resource instance using:</echo>
			<echo>resourceInstanceName: @{resourceInstanceName}</echo>
			<echo>envName: @{envName}</echo>
			<echo>nodeName: @{nodeName}</echo>
			<echo>hostName: @{hostName}</echo>
			<echo>dataFile: @{dataFile}</echo>
			<echo>remotePropsFile: @{remotePropsFile}</echo>
			<echo>objectSelector: @{objectSelector}</echo>
			<echo>action: @{action}</echo>
			<echo>overwrite: @{overwrite}</echo>
			<echo>merge: @{merge}</echo>
			<echo>options: @{options}</echo>
			<echo>createIfNotExists: @{createIfNotExists}</echo>
			<echo>force: @{force}</echo>
			<echo>failOnError: @{failOnError}</echo>
			<echo>timeout: @{timeout}</echo>
			<if>
				<not>
					<equals arg1="@{objectSelector}" arg2="" />
				</not>
				<then>
					<var name="obj.sel" value="@{objectSelector}" />
				</then>
				<else>
					<if>
						<equals arg1="@{envName}" arg2="" />
						<then>
							<var name="obj.sel" value="Environment" />
						</then>
						<else>
							<var name="obj.sel" value="Environment[@name='@{envName}']" />
						</else>
					</if>

					<if>
						<equals arg1="@{nodeName}" arg2="" />
						<then>
							<var name="obj.sel" value="${obj.sel}/Node" />
						</then>
						<else>
							<var name="obj.sel" value="${obj.sel}/Node[@name='@{nodeName}']" />
						</else>
					</if>
					<if>
						<equals arg1="@{hostName}" arg2="" />
						<then>
							<var name="obj.sel2" value="Host" />
						</then>
						<else>
							<var name="obj.sel2" value="Host[@name='@{hostName}']" />
						</else>
					</if>
					<if>
						<equals arg1="@{resourceInstanceName}" arg2="" />
						<then>
							<var name="obj.sel" value="${obj.sel}/ResourceInstance | ${obj.sel2}/ResourceInstance" />
							<!--<var name="obj.sel2" value="${obj.sel2}/ResourceInstance" />-->
						</then>
						<else>
							<var name="obj.sel" value="${obj.sel}/ResourceInstance[@name='@{resourceInstanceName}'] | ${obj.sel2}/ResourceInstance[@name='@{resourceInstanceName}']" />
							<!--<var name="obj.sel2" value="${obj.sel2}/ResourceInstance[@name='@{resourceInstanceName}']" />-->
						</else>
					</if>
				</else>
			</if>
			<echo message="Invoking Admin task using the objectselector: ${obj.sel}" />
			<AMXAdminTask remote="true" propsFile="@{remotePropsFile}" action="@{action}" dataFile="@{dataFile}" objectSelector="${obj.sel}" overwrite="@{overwrite}" merge="@{merge}" options="@{options}" createIfNotExists="@{createIfNotExists}" force="@{force}" failOnError="@{failOnError}" timeout="@{timeout}" />
			<echo>${line.separator}${line.separator}</echo>
		</sequential>
	</macrodef>


	<macrodef name="delete.ri" backtrace="true" description="Delete the resource Instance. If objectSelector attribute is specified, some of the input attributes will be ignored.">
		<attribute name="resourceInstanceName" default="" description="Name of the resource instance. Optional. If not specified all the Resource instances in data file are selected." />
		<attribute name="envName" default="" description="the name of the environment. Optional. If not specified all environments in data file are selected." />
		<attribute name="nodeName" default="" description="the name of the node. Optional. If not specified all nodes in data file are selected." />
		<attribute name="hostName" default="" description="The name of the host. Optional. If not specified, all the hosts in the data file are selected." />
		<attribute name="dataFile" description="The data file used as input for this admin CLI task. Required." />
		<attribute name="objectSelector" default="" description="The object selector to be used with the admin task. Optional. By default, the macrodef tries to construct the objectselector based on the other input attributes. If this is specified, most other attributes like envName etc will be ignored." />
		<attribute name="remotePropsFile" default="${remotePropsFile}" description="The remote properties file. Optional. By default the value of the property remotePropsFile defined will be used." />
		<attribute name="action" default="delete" description="action to pass to admin task. Default is delete." />
		<attribute name="overwrite" default="true" description="overwrite flag passed to the admin task. Optional. Default is true" />
		<attribute name="merge" default="true" description="merge flag passed to the admin task. Optional. Default is true" />
		<attribute name="createIfNotExists" default="true" description="The createIfNotExists flag passed to the admin task. Optional. Default is true" />
		<attribute name="force" default="false" description="force flag passed to the admin task. Optional. Default is false" />
		<attribute name="failOnError" default="true" description="failOnError flag passed to the admin task. Optional. Default is true" />
		<sequential>
			<echo>${line.separator}${line.separator}</echo>
			<echo>Delete the resource instance using:</echo>
			<echo>resourceInstanceName: @{resourceInstanceName}</echo>
			<echo>envName: @{envName}</echo>
			<echo>nodeName: @{nodeName}</echo>
			<echo>hostName: @{hostName}</echo>
			<echo>dataFile: @{dataFile}</echo>
			<echo>remotePropsFile: @{remotePropsFile}</echo>
			<echo>objectSelector: @{objectSelector}</echo>
			<echo>action: @{action}</echo>
			<echo>overwrite: @{overwrite}</echo>
			<echo>merge: @{merge}</echo>
			<echo>createIfNotExists: @{createIfNotExists}</echo>
			<echo>force: @{force}</echo>
			<echo>failOnError: @{failOnError}</echo>
			<if>
				<not>
					<equals arg1="@{objectSelector}" arg2="" />
				</not>
				<then>
					<var name="obj.sel" value="@{objectSelector}" />
				</then>
				<else>
					<if>
						<equals arg1="@{envName}" arg2="" />
						<then>
							<var name="obj.sel" value="Environment" />
						</then>
						<else>
							<var name="obj.sel" value="Environment[@name='@{envName}']" />
						</else>
					</if>

					<if>
						<equals arg1="@{nodeName}" arg2="" />
						<then>
							<var name="obj.sel" value="${obj.sel}/Node" />
						</then>
						<else>
							<var name="obj.sel" value="${obj.sel}/Node[@name='@{nodeName}']" />
						</else>
					</if>
					<if>
						<equals arg1="@{hostName}" arg2="" />
						<then>
							<var name="obj.sel2" value="Host" />
						</then>
						<else>
							<var name="obj.sel2" value="Host[@name='@{hostName}']" />
						</else>
					</if>
					<if>
						<equals arg1="@{resourceInstanceName}" arg2="" />
						<then>
							<var name="obj.sel" value="${obj.sel}/ResourceInstance | ${obj.sel2}/ResourceInstance" />
							<!--<var name="obj.sel2" value="${obj.sel2}/ResourceInstance" />-->
						</then>
						<else>
							<var name="obj.sel" value="${obj.sel}/ResourceInstance[@name='@{resourceInstanceName}'] | ${obj.sel2}/ResourceInstance[@name='@{resourceInstanceName}']" />
							<!--<var name="obj.sel2" value="${obj.sel2}/ResourceInstance[@name='@{resourceInstanceName}']" />-->
						</else>
					</if>
				</else>
			</if>
			<echo message="Invoking Admin task using the objectselector: ${obj.sel}" />
			<AMXAdminTask remote="true" propsFile="@{remotePropsFile}" action="@{action}" dataFile="@{dataFile}" objectSelector="${obj.sel}" overwrite="@{overwrite}" merge="@{merge}" createIfNotExists="@{createIfNotExists}" force="@{force}" failOnError="@{failOnError}" />
			<echo>${line.separator}${line.separator}</echo>
		</sequential>
	</macrodef>


	<macrodef name="uninstall.ri" backtrace="true" description="Uninstall the resource Instance. If objectSelector attribute is specified, some of the input attributes will be ignored.">
		<attribute name="resourceInstanceName" default="" description="Name of the resource instance. Optional. If not specified all the Resource instances in data file are selected." />
		<attribute name="envName" default="" description="the name of the environment. Optional. If not specified all environments in data file are selected." />
		<attribute name="nodeName" default="" description="the name of the node. Optional. If not specified all nodes in data file are selected." />
		<attribute name="hostName" default="" description="The name of the host. Optional. If not specified, all the hosts in the data file are selected." />
		<attribute name="dataFile" description="The data file used as input for this admin CLI task. Required." />
		<attribute name="objectSelector" default="" description="The object selector to be used with the admin task. Optional. By default, the macrodef tries to construct the objectselector based on the other input attributes. If this is specified, most other attributes like envName etc will be ignored." />
		<attribute name="remotePropsFile" default="${remotePropsFile}" description="The remote properties file. Optional. By default the value of the property remotePropsFile defined will be used." />
		<attribute name="action" default="uninstall" description="action to pass to admin task. Default is uninstall." />
		<attribute name="overwrite" default="true" description="overwrite flag passed to the admin task. Optional. Default is true" />
		<attribute name="merge" default="true" description="merge flag passed to the admin task. Optional. Default is true" />
		<attribute name="createIfNotExists" default="true" description="The createIfNotExists flag passed to the admin task. Optional. Default is true" />
		<attribute name="force" default="false" description="force flag passed to the admin task. Optional. Default is false" />
		<attribute name="failOnError" default="true" description="failOnError flag passed to the admin task. Optional. Default is true" />
		<attribute name="timeout" default="120" description="The timeout to use for uninstalling the RI" />
		<sequential>
			<echo>${line.separator}${line.separator}</echo>
			<echo>Uninstall the resource instance using:</echo>
			<echo>resourceInstanceName: @{resourceInstanceName}</echo>
			<echo>envName: @{envName}</echo>
			<echo>nodeName: @{nodeName}</echo>
			<echo>hostName: @{hostName}</echo>
			<echo>dataFile: @{dataFile}</echo>
			<echo>remotePropsFile: @{remotePropsFile}</echo>
			<echo>objectSelector: @{objectSelector}</echo>
			<echo>action: @{action}</echo>
			<echo>overwrite: @{overwrite}</echo>
			<echo>merge: @{merge}</echo>
			<echo>createIfNotExists: @{createIfNotExists}</echo>
			<echo>force: @{force}</echo>
			<echo>failOnError: @{failOnError}</echo>
			<echo>timeout: @{timeout}</echo>
			<if>
				<not>
					<equals arg1="@{objectSelector}" arg2="" />
				</not>
				<then>
					<var name="obj.sel" value="@{objectSelector}" />
				</then>
				<else>
					<if>
						<equals arg1="@{envName}" arg2="" />
						<then>
							<var name="obj.sel" value="Environment" />
						</then>
						<else>
							<var name="obj.sel" value="Environment[@name='@{envName}']" />
						</else>
					</if>

					<if>
						<equals arg1="@{nodeName}" arg2="" />
						<then>
							<var name="obj.sel" value="${obj.sel}/Node" />
						</then>
						<else>
							<var name="obj.sel" value="${obj.sel}/Node[@name='@{nodeName}']" />
						</else>
					</if>
					<if>
						<equals arg1="@{hostName}" arg2="" />
						<then>
							<var name="obj.sel2" value="Host" />
						</then>
						<else>
							<var name="obj.sel2" value="Host[@name='@{hostName}']" />
						</else>
					</if>
					<if>
						<equals arg1="@{resourceInstanceName}" arg2="" />
						<then>
							<var name="obj.sel" value="${obj.sel}/ResourceInstance | ${obj.sel2}/ResourceInstance" />
							<!--<var name="obj.sel2" value="${obj.sel2}/ResourceInstance" />-->
						</then>
						<else>
							<var name="obj.sel" value="${obj.sel}/ResourceInstance[@name='@{resourceInstanceName}'] | ${obj.sel2}/ResourceInstance[@name='@{resourceInstanceName}']" />
							<!--<var name="obj.sel2" value="${obj.sel2}/ResourceInstance[@name='@{resourceInstanceName}']" />-->
						</else>
					</if>
				</else>
			</if>
			<echo message="Invoking Admin task using the objectselector: ${obj.sel}" />
			<AMXAdminTask remote="true" propsFile="@{remotePropsFile}" action="@{action}" dataFile="@{dataFile}" objectSelector="${obj.sel}" overwrite="@{overwrite}" merge="@{merge}" createIfNotExists="@{createIfNotExists}" force="@{force}" failOnError="@{failOnError}" timeout="@{timeout}" />
			<echo>${line.separator}${line.separator}</echo>
		</sequential>
	</macrodef>



	<macrodef name="add.all.svars" backtrace="true" description="Add Svars at at all levels. If objectSelector attribute is specified, some of the input attributes will be ignored.">
		<attribute name="svarName" default="" description="The name of the svar. If this is not specified, then all the svars will be selected." />
		<attribute name="dataFile" description="The data file used as input for this admin CLI task. Required." />
		<attribute name="objectSelector" default="//SVar" description="The object selector to be used with the admin task. Optional. Default is //SVar" />
		<attribute name="remotePropsFile" default="${remotePropsFile}" description="The remote properties file. Optional. By default the value of the property remotePropsFile defined will be used." />
		<attribute name="action" default="add" description="action to pass to admin task. Default is add." />
		<attribute name="overwrite" default="true" description="overwrite flag passed to the admin task. Optional. Default is true" />
		<attribute name="merge" default="true" description="merge flag passed to the admin task. Optional. Default is true" />
		<attribute name="createIfNotExists" default="true" description="The createIfNotExists flag passed to the admin task. Optional. Default is true" />
		<attribute name="force" default="false" description="force flag passed to the admin task. Optional. Default is false" />
		<attribute name="failOnError" default="true" description="failOnError flag passed to the admin task. Optional. Default is true" />
		<sequential>
			<echo>${line.separator}${line.separator}</echo>
			<echo>Add svars at all levels using:</echo>
			<echo>svarName: @{svarName}</echo>
			<echo>dataFile: @{dataFile}</echo>
			<echo>remotePropsFile: @{remotePropsFile}</echo>
			<echo>objectSelector: @{objectSelector}</echo>
			<echo>action: @{action}</echo>
			<echo>overwrite: @{overwrite}</echo>
			<echo>merge: @{merge}</echo>
			<echo>createIfNotExists: @{createIfNotExists}</echo>
			<echo>force: @{force}</echo>
			<echo>failOnError: @{failOnError}</echo>
			<if>
				<not>
					<equals arg1="@{objectSelector}" arg2="" />
				</not>
				<then>
					<var name="obj.sel" value="@{objectSelector}" />
				</then>
				<else>

					<if>
						<equals arg1="@{svarName}" arg2="" />
						<then>
							<var name="obj.sel" value="//SVar" />
						</then>
						<else>
							<var name="obj.sel" value="//SVar[@name='@{svarName}']" />
						</else>
					</if>
				</else>
			</if>
			<echo message="Invoking Admin task using the objectselector: ${obj.sel}" />
			<AMXAdminTask remote="true" propsFile="@{remotePropsFile}" action="@{action}" dataFile="@{dataFile}" objectSelector="${obj.sel}" overwrite="@{overwrite}" merge="@{merge}" createIfNotExists="@{createIfNotExists}" force="@{force}" failOnError="@{failOnError}" />
			<echo>${line.separator}${line.separator}</echo>
		</sequential>
	</macrodef>

	<macrodef name="edit.all.svars" backtrace="true" description="edit Svars at at all levels. If objectSelector attribute is specified, some of the input attributes will be ignored.">
		<attribute name="svarName" default="" description="The name of the svar. If this is not specified, then all the svars will be selected." />
		<attribute name="dataFile" description="The data file used as input for this admin CLI task. Required." />
		<attribute name="objectSelector" default="//SVar" description="The object selector to be used with the admin task. Optional. Default is //SVar" />
		<attribute name="remotePropsFile" default="${remotePropsFile}" description="The remote properties file. Optional. By default the value of the property remotePropsFile defined will be used." />
		<attribute name="action" default="edit" description="action to pass to admin task. Default is edit." />
		<attribute name="overwrite" default="true" description="overwrite flag passed to the admin task. Optional. Default is true" />
		<attribute name="merge" default="true" description="merge flag passed to the admin task. Optional. Default is true" />
		<attribute name="createIfNotExists" default="true" description="The createIfNotExists flag passed to the admin task. Optional. Default is true" />
		<attribute name="force" default="false" description="force flag passed to the admin task. Optional. Default is false" />
		<attribute name="failOnError" default="true" description="failOnError flag passed to the admin task. Optional. Default is true" />
		<sequential>
			<echo>${line.separator}${line.separator}</echo>
			<echo>Edit svars at all levels using:</echo>
			<echo>svarName: @{svarName}</echo>
			<echo>dataFile: @{dataFile}</echo>
			<echo>remotePropsFile: @{remotePropsFile}</echo>
			<echo>objectSelector: @{objectSelector}</echo>
			<echo>action: @{action}</echo>
			<echo>overwrite: @{overwrite}</echo>
			<echo>merge: @{merge}</echo>
			<echo>createIfNotExists: @{createIfNotExists}</echo>
			<echo>force: @{force}</echo>
			<echo>failOnError: @{failOnError}</echo>
			<if>
				<not>
					<equals arg1="@{objectSelector}" arg2="" />
				</not>
				<then>
					<var name="obj.sel" value="@{objectSelector}" />
				</then>
				<else>

					<if>
						<equals arg1="@{svarName}" arg2="" />
						<then>
							<var name="obj.sel" value="//SVar" />
						</then>
						<else>
							<var name="obj.sel" value="//SVar[@name='@{svarName}']" />
						</else>
					</if>
				</else>
			</if>
			<echo message="Invoking Admin task using the objectselector: ${obj.sel}" />
			<AMXAdminTask remote="true" propsFile="@{remotePropsFile}" action="@{action}" dataFile="@{dataFile}" objectSelector="${obj.sel}" overwrite="@{overwrite}" merge="@{merge}" createIfNotExists="@{createIfNotExists}" force="@{force}" failOnError="@{failOnError}" />
			<echo>${line.separator}${line.separator}</echo>
		</sequential>
	</macrodef>

	<macrodef name="set.all.svars" backtrace="true" description="Set Svars at at all levels. If objectSelector attribute is specified, some of the input attributes will be ignored.">
		<attribute name="svarName" default="" description="The name of the svar. If this is not specified, then all the svars will be selected." />
		<attribute name="dataFile" description="The data file used as input for this admin CLI task. Required." />
		<attribute name="objectSelector" default="//SVar" description="The object selector to be used with the admin task. Optional. Default is //SVar" />
		<attribute name="remotePropsFile" default="${remotePropsFile}" description="The remote properties file. Optional. By default the value of the property remotePropsFile defined will be used." />
		<attribute name="action" default="set" description="action to pass to admin task. Default is set." />
		<attribute name="overwrite" default="true" description="overwrite flag passed to the admin task. Optional. Default is true" />
		<attribute name="merge" default="true" description="merge flag passed to the admin task. Optional. Default is true" />
		<attribute name="createIfNotExists" default="true" description="The createIfNotExists flag passed to the admin task. Optional. Default is true" />
		<attribute name="force" default="false" description="force flag passed to the admin task. Optional. Default is false" />
		<attribute name="failOnError" default="true" description="failOnError flag passed to the admin task. Optional. Default is true" />
		<sequential>
			<echo>${line.separator}${line.separator}</echo>
			<echo>Set svars at all levels using:</echo>
			<echo>svarName: @{svarName}</echo>
			<echo>dataFile: @{dataFile}</echo>
			<echo>remotePropsFile: @{remotePropsFile}</echo>
			<echo>objectSelector: @{objectSelector}</echo>
			<echo>action: @{action}</echo>
			<echo>overwrite: @{overwrite}</echo>
			<echo>merge: @{merge}</echo>
			<echo>createIfNotExists: @{createIfNotExists}</echo>
			<echo>force: @{force}</echo>
			<echo>failOnError: @{failOnError}</echo>
			<if>
				<not>
					<equals arg1="@{objectSelector}" arg2="" />
				</not>
				<then>
					<var name="obj.sel" value="@{objectSelector}" />
				</then>
				<else>

					<if>
						<equals arg1="@{svarName}" arg2="" />
						<then>
							<var name="obj.sel" value="//SVar" />
						</then>
						<else>
							<var name="obj.sel" value="//SVar[@name='@{svarName}']" />
						</else>
					</if>
				</else>
			</if>
			<echo message="Invoking Admin task using the objectselector: ${obj.sel}" />
			<AMXAdminTask remote="true" propsFile="@{remotePropsFile}" action="@{action}" dataFile="@{dataFile}" objectSelector="${obj.sel}" overwrite="@{overwrite}" merge="@{merge}" createIfNotExists="@{createIfNotExists}" force="@{force}" failOnError="@{failOnError}" />
			<echo>${line.separator}${line.separator}</echo>
		</sequential>
	</macrodef>

	<macrodef name="delete.all.svars" backtrace="true" description="Delete Svars at at all levels. If objectSelector attribute is specified, some of the input attributes will be ignored.">
		<attribute name="svarName" default="" description="The name of the svar. If this is not specified, then all the svars will be selected." />
		<attribute name="dataFile" description="The data file used as input for this admin CLI task. Required." />
		<attribute name="objectSelector" default="//SVar" description="The object selector to be used with the admin task. Optional. Default is //SVar" />
		<attribute name="remotePropsFile" default="${remotePropsFile}" description="The remote properties file. Optional. By default the value of the property remotePropsFile defined will be used." />
		<attribute name="action" default="delete" description="action to pass to admin task. Default is delete." />
		<attribute name="overwrite" default="true" description="overwrite flag passed to the admin task. Optional. Default is true" />
		<attribute name="merge" default="true" description="merge flag passed to the admin task. Optional. Default is true" />
		<attribute name="createIfNotExists" default="true" description="The createIfNotExists flag passed to the admin task. Optional. Default is true" />
		<attribute name="force" default="false" description="force flag passed to the admin task. Optional. Default is false" />
		<attribute name="failOnError" default="true" description="failOnError flag passed to the admin task. Optional. Default is true" />
		<sequential>
			<echo>${line.separator}${line.separator}</echo>
			<echo>Delete svars at all levels using:</echo>
			<echo>svarName: @{svarName}</echo>
			<echo>dataFile: @{dataFile}</echo>
			<echo>remotePropsFile: @{remotePropsFile}</echo>
			<echo>objectSelector: @{objectSelector}</echo>
			<echo>action: @{action}</echo>
			<echo>overwrite: @{overwrite}</echo>
			<echo>merge: @{merge}</echo>
			<echo>createIfNotExists: @{createIfNotExists}</echo>
			<echo>force: @{force}</echo>
			<echo>failOnError: @{failOnError}</echo>
			<if>
				<not>
					<equals arg1="@{objectSelector}" arg2="" />
				</not>
				<then>
					<var name="obj.sel" value="@{objectSelector}" />
				</then>
				<else>

					<if>
						<equals arg1="@{svarName}" arg2="" />
						<then>
							<var name="obj.sel" value="//SVar" />
						</then>
						<else>
							<var name="obj.sel" value="//SVar[@name='@{svarName}']" />
						</else>
					</if>
				</else>
			</if>
			<echo message="Invoking Admin task using the objectselector: ${obj.sel}" />
			<AMXAdminTask remote="true" propsFile="@{remotePropsFile}" action="@{action}" dataFile="@{dataFile}" objectSelector="${obj.sel}" overwrite="@{overwrite}" merge="@{merge}" createIfNotExists="@{createIfNotExists}" force="@{force}" failOnError="@{failOnError}" />
			<echo>${line.separator}${line.separator}</echo>
		</sequential>
	</macrodef>

	<macrodef name="add.ent.svars" backtrace="true" description="Add Svars at enterprise level. If objectSelector attribute is specified, some of the input attributes will be ignored.">
		<attribute name="svarName" default="" description="The name of the svar. If this is not specified, then all the svars will be selected." />
		<attribute name="description" default="" description="the description value specified for the svar in data file. Optional. If not specified, all the svars are selected. description and svarName attributes are mutually exclusive. If both are specified, svarName will be used." />
		<attribute name="dataFile" description="The data file used as input for this admin CLI task. Required." />
		<attribute name="objectSelector" default="" description="The object selector to be used with the admin task. Optional. By default, the macrodef tries to construct the objectselector based on the other input attributes. If this is specified, most other attributes like envName etc will be ignored." />
		<attribute name="remotePropsFile" default="${remotePropsFile}" description="The remote properties file. Optional. By default the value of the property remotePropsFile defined will be used." />
		<attribute name="action" default="add" description="action to pass to admin task. Default is add." />
		<attribute name="overwrite" default="true" description="overwrite flag passed to the admin task. Optional. Default is true" />
		<attribute name="merge" default="true" description="merge flag passed to the admin task. Optional. Default is true" />
		<attribute name="createIfNotExists" default="true" description="The createIfNotExists flag passed to the admin task. Optional. Default is true" />
		<attribute name="force" default="false" description="force flag passed to the admin task. Optional. Default is false" />
		<attribute name="failOnError" default="true" description="failOnError flag passed to the admin task. Optional. Default is true" />
		<sequential>
			<echo>${line.separator}${line.separator}</echo>
			<echo>Add enterprise level svars using:</echo>
			<echo>svarName: @{svarName}</echo>
			<echo>description: @{description}</echo>
			<echo>dataFile: @{dataFile}</echo>
			<echo>remotePropsFile: @{remotePropsFile}</echo>
			<echo>objectSelector: @{objectSelector}</echo>
			<echo>action: @{action}</echo>
			<echo>overwrite: @{overwrite}</echo>
			<echo>merge: @{merge}</echo>
			<echo>createIfNotExists: @{createIfNotExists}</echo>
			<echo>force: @{force}</echo>
			<echo>failOnError: @{failOnError}</echo>
			<if>
				<not>
					<equals arg1="@{objectSelector}" arg2="" />
				</not>
				<then>
					<var name="obj.sel" value="@{objectSelector}" />
				</then>
				<else>

					<if>
						<equals arg1="@{svarName}" arg2="" />
						<then>
							<var name="obj.sel" value="SVar" />
						</then>
						<else>
							<var name="obj.sel" value="SVar[@name='@{svarName}']" />

						</else>
					</if>
					<if>
						<not>
							<equals arg1="@{description}" arg2="" />
						</not>
						<then>
							<var name="obj.sel" value="SVar[@description='@{description}']" />
						</then>
					</if>
				</else>
			</if>
			<echo message="Invoking Admin task using the objectselector: ${obj.sel}" />
			<AMXAdminTask remote="true" propsFile="@{remotePropsFile}" action="@{action}" dataFile="@{dataFile}" objectSelector="${obj.sel}" overwrite="@{overwrite}" merge="@{merge}" createIfNotExists="@{createIfNotExists}" force="@{force}" failOnError="@{failOnError}" />
			<echo>${line.separator}${line.separator}</echo>
		</sequential>
	</macrodef>

	<macrodef name="edit.ent.svars" backtrace="true" description="edit Svars at enterprise level. If objectSelector attribute is specified, some of the input attributes will be ignored.">
		<attribute name="svarName" default="" description="The name of the svar. If this is not specified, then all the svars will be selected." />
		<attribute name="description" default="" description="the description value specified for the svar in data file. Optional. If not specified, all the svars are selected. description and svarName attributes are mutually exclusive. If both are specified, svarName will be used." />
		<attribute name="dataFile" description="The data file used as input for this admin CLI task. Required." />
		<attribute name="objectSelector" default="" description="The object selector to be used with the admin task. Optional. By default, the macrodef tries to construct the objectselector based on the other input attributes. If this is specified, most other attributes like envName etc will be ignored." />
		<attribute name="remotePropsFile" default="${remotePropsFile}" description="The remote properties file. Optional. By default the value of the property remotePropsFile defined will be used." />
		<attribute name="action" default="edit" description="action to pass to admin task. Default is edit." />
		<attribute name="overwrite" default="true" description="overwrite flag passed to the admin task. Optional. Default is true" />
		<attribute name="merge" default="true" description="merge flag passed to the admin task. Optional. Default is true" />
		<attribute name="createIfNotExists" default="true" description="The createIfNotExists flag passed to the admin task. Optional. Default is true" />
		<attribute name="force" default="false" description="force flag passed to the admin task. Optional. Default is false" />
		<attribute name="failOnError" default="true" description="failOnError flag passed to the admin task. Optional. Default is true" />
		<sequential>
			<echo>${line.separator}${line.separator}</echo>
			<echo>Edit enterprise level svars using:</echo>
			<echo>svarName: @{svarName}</echo>
			<echo>description: @{description}</echo>
			<echo>dataFile: @{dataFile}</echo>
			<echo>remotePropsFile: @{remotePropsFile}</echo>
			<echo>objectSelector: @{objectSelector}</echo>
			<echo>action: @{action}</echo>
			<echo>overwrite: @{overwrite}</echo>
			<echo>merge: @{merge}</echo>
			<echo>createIfNotExists: @{createIfNotExists}</echo>
			<echo>force: @{force}</echo>
			<echo>failOnError: @{failOnError}</echo>
			<if>
				<not>
					<equals arg1="@{objectSelector}" arg2="" />
				</not>
				<then>
					<var name="obj.sel" value="@{objectSelector}" />
				</then>
				<else>

					<if>
						<equals arg1="@{svarName}" arg2="" />
						<then>
							<var name="obj.sel" value="SVar" />
						</then>
						<else>
							<var name="obj.sel" value="SVar[@name='@{svarName}']" />

						</else>
					</if>
					<if>
						<not>
							<equals arg1="@{description}" arg2="" />
						</not>
						<then>
							<var name="obj.sel" value="SVar[@description='@{description}']" />
						</then>
					</if>
				</else>
			</if>
			<echo message="Invoking Admin task using the objectselector: ${obj.sel}" />
			<AMXAdminTask remote="true" propsFile="@{remotePropsFile}" action="@{action}" dataFile="@{dataFile}" objectSelector="${obj.sel}" overwrite="@{overwrite}" merge="@{merge}" createIfNotExists="@{createIfNotExists}" force="@{force}" failOnError="@{failOnError}" />
			<echo>${line.separator}${line.separator}</echo>
		</sequential>
	</macrodef>

	<macrodef name="set.ent.svars" backtrace="true" description="Set Svars at enterprise level. If objectSelector attribute is specified, some of the input attributes will be ignored.">
		<attribute name="svarName" default="" description="The name of the svar. If this is not specified, then all the svars will be selected." />
		<attribute name="description" default="" description="the description value specified for the svar in data file. Optional. If not specified, all the svars are selected. description and svarName attributes are mutually exclusive. If both are specified, svarName will be used." />
		<attribute name="dataFile" description="The data file used as input for this admin CLI task. Required." />
		<attribute name="objectSelector" default="" description="The object selector to be used with the admin task. Optional. By default, the macrodef tries to construct the objectselector based on the other input attributes. If this is specified, most other attributes like envName etc will be ignored." />
		<attribute name="remotePropsFile" default="${remotePropsFile}" description="The remote properties file. Optional. By default the value of the property remotePropsFile defined will be used." />
		<attribute name="action" default="set" description="action to pass to admin task. Default is set." />
		<attribute name="overwrite" default="true" description="overwrite flag passed to the admin task. Optional. Default is true" />
		<attribute name="merge" default="true" description="merge flag passed to the admin task. Optional. Default is true" />
		<attribute name="createIfNotExists" default="true" description="The createIfNotExists flag passed to the admin task. Optional. Default is true" />
		<attribute name="force" default="false" description="force flag passed to the admin task. Optional. Default is false" />
		<attribute name="failOnError" default="true" description="failOnError flag passed to the admin task. Optional. Default is true" />
		<sequential>
			<echo>${line.separator}${line.separator}</echo>
			<echo>Set enterprise level svars using:</echo>
			<echo>svarName: @{svarName}</echo>
			<echo>description: @{description}</echo>
			<echo>dataFile: @{dataFile}</echo>
			<echo>remotePropsFile: @{remotePropsFile}</echo>
			<echo>objectSelector: @{objectSelector}</echo>
			<echo>action: @{action}</echo>
			<echo>overwrite: @{overwrite}</echo>
			<echo>merge: @{merge}</echo>
			<echo>createIfNotExists: @{createIfNotExists}</echo>
			<echo>force: @{force}</echo>
			<echo>failOnError: @{failOnError}</echo>
			<if>
				<not>
					<equals arg1="@{objectSelector}" arg2="" />
				</not>
				<then>
					<var name="obj.sel" value="@{objectSelector}" />
				</then>
				<else>

					<if>
						<equals arg1="@{svarName}" arg2="" />
						<then>
							<var name="obj.sel" value="SVar" />
						</then>
						<else>
							<var name="obj.sel" value="SVar[@name='@{svarName}']" />
						</else>
					</if>
					<if>
						<not>
							<equals arg1="@{description}" arg2="" />
						</not>
						<then>
							<var name="obj.sel" value="SVar[@description='@{description}']" />
						</then>
					</if>
				</else>
			</if>
			<echo message="Invoking Admin task using the objectselector: ${obj.sel}" />
			<AMXAdminTask remote="true" propsFile="@{remotePropsFile}" action="@{action}" dataFile="@{dataFile}" objectSelector="${obj.sel}" overwrite="@{overwrite}" merge="@{merge}" createIfNotExists="@{createIfNotExists}" force="@{force}" failOnError="@{failOnError}" />
			<echo>${line.separator}${line.separator}</echo>
		</sequential>
	</macrodef>

	<macrodef name="delete.ent.svars" backtrace="true" description="Delete Svars at enterprise level. If objectSelector attribute is specified, some of the input attributes will be ignored.">
		<attribute name="svarName" default="" description="The name of the svar. If this is not specified, then all the svars will be selected." />
		<attribute name="description" default="" description="the description value specified for the svar in data file. Optional. If not specified, all the svars are selected. description and svarName attributes are mutually exclusive. If both are specified, svarName will be used." />
		<attribute name="dataFile" description="The data file used as input for this admin CLI task. Required." />
		<attribute name="objectSelector" default="" description="The object selector to be used with the admin task. Optional. By default, the macrodef tries to construct the objectselector based on the other input attributes. If this is specified, most other attributes like envName etc will be ignored." />
		<attribute name="remotePropsFile" default="${remotePropsFile}" description="The remote properties file. Optional. By default the value of the property remotePropsFile defined will be used." />
		<attribute name="action" default="delete" description="action to pass to admin task. Default is delete." />
		<attribute name="overwrite" default="true" description="overwrite flag passed to the admin task. Optional. Default is true" />
		<attribute name="merge" default="true" description="merge flag passed to the admin task. Optional. Default is true" />
		<attribute name="createIfNotExists" default="true" description="The createIfNotExists flag passed to the admin task. Optional. Default is true" />
		<attribute name="force" default="false" description="force flag passed to the admin task. Optional. Default is false" />
		<attribute name="failOnError" default="true" description="failOnError flag passed to the admin task. Optional. Default is true" />
		<sequential>
			<echo>${line.separator}${line.separator}</echo>
			<echo>Delete enterprise level svars using:</echo>
			<echo>svarName: @{svarName}</echo>
			<echo>description: @{description}</echo>
			<echo>dataFile: @{dataFile}</echo>
			<echo>remotePropsFile: @{remotePropsFile}</echo>
			<echo>objectSelector: @{objectSelector}</echo>
			<echo>action: @{action}</echo>
			<echo>overwrite: @{overwrite}</echo>
			<echo>merge: @{merge}</echo>
			<echo>createIfNotExists: @{createIfNotExists}</echo>
			<echo>force: @{force}</echo>
			<echo>failOnError: @{failOnError}</echo>
			<if>
				<not>
					<equals arg1="@{objectSelector}" arg2="" />
				</not>
				<then>
					<var name="obj.sel" value="@{objectSelector}" />
				</then>
				<else>

					<if>
						<equals arg1="@{svarName}" arg2="" />
						<then>
							<var name="obj.sel" value="SVar" />
						</then>
						<else>
							<var name="obj.sel" value="SVar[@name='@{svarName}']" />
						</else>
					</if>
					<if>
						<not>
							<equals arg1="@{description}" arg2="" />
						</not>
						<then>
							<var name="obj.sel" value="SVar[@description='@{description}']" />
						</then>
					</if>
				</else>
			</if>
			<echo message="Invoking Admin task using the objectselector: ${obj.sel}" />
			<AMXAdminTask remote="true" propsFile="@{remotePropsFile}" action="@{action}" dataFile="@{dataFile}" objectSelector="${obj.sel}" overwrite="@{overwrite}" merge="@{merge}" createIfNotExists="@{createIfNotExists}" force="@{force}" failOnError="@{failOnError}" />
			<echo>${line.separator}${line.separator}</echo>
		</sequential>
	</macrodef>

	<macrodef name="add.env.svars" backtrace="true" description="Add Svars at Environment level. If objectSelector attribute is specified, some of the input attributes will be ignored.">
		<attribute name="envName" default="" description="the name of the environment. Optional. If not specified all environments in data file are selected." />
		<attribute name="svarName" default="" description="The name of the svar. If this is not specified, then all the svars will be selected." />
		<attribute name="description" default="" description="the description value specified for the svar in data file. Optional. If not specified, all the svars are selected. description and svarName attributes are mutually exclusive. If both are specified, svarName will be used." />
		<attribute name="dataFile" description="The data file used as input for this admin CLI task. Required." />
		<attribute name="objectSelector" default="" description="The object selector to be used with the admin task. Optional. By default, the macrodef tries to construct the objectselector based on the other input attributes. If this is specified, most other attributes like envName etc will be ignored." />
		<attribute name="remotePropsFile" default="${remotePropsFile}" description="The remote properties file. Optional. By default the value of the property remotePropsFile defined will be used." />
		<attribute name="action" default="add" description="action to pass to admin task. Default is add." />
		<attribute name="overwrite" default="true" description="overwrite flag passed to the admin task. Optional. Default is true" />
		<attribute name="merge" default="true" description="merge flag passed to the admin task. Optional. Default is true" />
		<attribute name="createIfNotExists" default="true" description="The createIfNotExists flag passed to the admin task. Optional. Default is true" />
		<attribute name="force" default="false" description="force flag passed to the admin task. Optional. Default is false" />
		<attribute name="failOnError" default="true" description="failOnError flag passed to the admin task. Optional. Default is true" />
		<sequential>
			<echo>${line.separator}${line.separator}</echo>
			<echo>Add Environment level svars using:</echo>
			<echo>envName: @{envName}</echo>
			<echo>svarName: @{svarName}</echo>
			<echo>description: @{description}</echo>
			<echo>dataFile: @{dataFile}</echo>
			<echo>remotePropsFile: @{remotePropsFile}</echo>
			<echo>objectSelector: @{objectSelector}</echo>
			<echo>action: @{action}</echo>
			<echo>overwrite: @{overwrite}</echo>
			<echo>merge: @{merge}</echo>
			<echo>createIfNotExists: @{createIfNotExists}</echo>
			<echo>force: @{force}</echo>
			<echo>failOnError: @{failOnError}</echo>
			<if>
				<not>
					<equals arg1="@{objectSelector}" arg2="" />
				</not>
				<then>
					<var name="obj.sel" value="@{objectSelector}" />
				</then>
				<else>
					<if>
						<equals arg1="@{envName}" arg2="" />
						<then>
							<var name="obj.sel" value="Environment" />
						</then>
						<else>
							<var name="obj.sel" value="Environment[@name='@{envName}']" />
						</else>
					</if>
					<if>
						<not>
							<equals arg1="@{svarName}" arg2="" />
						</not>
						<then>
							<var name="obj.sel" value="${obj.sel}/SVar[@name='@{svarName}']" />
						</then>
						<elseif>
							<not>
								<equals arg1="@{description}" arg2="" />
							</not>
							<then>
								<var name="obj.sel" value="${obj.sel}/SVar[@description='@{description}']" />
							</then>
						</elseif>
						<else>
							<var name="obj.sel" value="${obj.sel}/SVar" />
						</else>
					</if>
				</else>
			</if>
			<echo message="Invoking Admin task using the objectselector: ${obj.sel}" />
			<AMXAdminTask remote="true" propsFile="@{remotePropsFile}" action="@{action}" dataFile="@{dataFile}" objectSelector="${obj.sel}" overwrite="@{overwrite}" merge="@{merge}" createIfNotExists="@{createIfNotExists}" force="@{force}" failOnError="@{failOnError}" />
			<echo>${line.separator}${line.separator}</echo>
		</sequential>
	</macrodef>

	<macrodef name="edit.env.svars" backtrace="true" description="edit Svars at Environment level. If objectSelector attribute is specified, some of the input attributes will be ignored.">
		<attribute name="envName" default="" description="the name of the environment. Optional. If not specified all environments in data file are selected." />
		<attribute name="svarName" default="" description="The name of the svar. If this is not specified, then all the svars will be selected." />
		<attribute name="description" default="" description="the description value specified for the svar in data file. Optional. If not specified, all the svars are selected. description and svarName attributes are mutually exclusive. If both are specified, svarName will be used." />
		<attribute name="dataFile" description="The data file used as input for this admin CLI task. Required." />
		<attribute name="objectSelector" default="" description="The object selector to be used with the admin task. Optional. By default, the macrodef tries to construct the objectselector based on the other input attributes. If this is specified, most other attributes like envName etc will be ignored." />
		<attribute name="remotePropsFile" default="${remotePropsFile}" description="The remote properties file. Optional. By default the value of the property remotePropsFile defined will be used." />
		<attribute name="action" default="edit" description="action to pass to admin task. Default is edit." />
		<attribute name="overwrite" default="true" description="overwrite flag passed to the admin task. Optional. Default is true" />
		<attribute name="merge" default="true" description="merge flag passed to the admin task. Optional. Default is true" />
		<attribute name="createIfNotExists" default="true" description="The createIfNotExists flag passed to the admin task. Optional. Default is true" />
		<attribute name="force" default="false" description="force flag passed to the admin task. Optional. Default is false" />
		<attribute name="failOnError" default="true" description="failOnError flag passed to the admin task. Optional. Default is true" />
		<sequential>
			<echo>${line.separator}${line.separator}</echo>
			<echo>Edit Environment level svars using:</echo>
			<echo>envName: @{envName}</echo>
			<echo>svarName: @{svarName}</echo>
			<echo>description: @{description}</echo>
			<echo>dataFile: @{dataFile}</echo>
			<echo>remotePropsFile: @{remotePropsFile}</echo>
			<echo>objectSelector: @{objectSelector}</echo>
			<echo>action: @{action}</echo>
			<echo>overwrite: @{overwrite}</echo>
			<echo>merge: @{merge}</echo>
			<echo>createIfNotExists: @{createIfNotExists}</echo>
			<echo>force: @{force}</echo>
			<echo>failOnError: @{failOnError}</echo>
			<if>
				<not>
					<equals arg1="@{objectSelector}" arg2="" />
				</not>
				<then>
					<var name="obj.sel" value="@{objectSelector}" />
				</then>
				<else>
					<if>
						<equals arg1="@{envName}" arg2="" />
						<then>
							<var name="obj.sel" value="Environment" />
						</then>
						<else>
							<var name="obj.sel" value="Environment[@name='@{envName}']" />
						</else>
					</if>
					<if>
						<not>
							<equals arg1="@{svarName}" arg2="" />
						</not>
						<then>
							<var name="obj.sel" value="${obj.sel}/SVar[@name='@{svarName}']" />
						</then>
						<elseif>
							<not>
								<equals arg1="@{description}" arg2="" />
							</not>
							<then>
								<var name="obj.sel" value="${obj.sel}/SVar[@description='@{description}']" />
							</then>
						</elseif>
						<else>
							<var name="obj.sel" value="${obj.sel}/SVar" />
						</else>
					</if>
				</else>
			</if>
			<echo message="Invoking Admin task using the objectselector: ${obj.sel}" />
			<AMXAdminTask remote="true" propsFile="@{remotePropsFile}" action="@{action}" dataFile="@{dataFile}" objectSelector="${obj.sel}" overwrite="@{overwrite}" merge="@{merge}" createIfNotExists="@{createIfNotExists}" force="@{force}" failOnError="@{failOnError}" />
			<echo>${line.separator}${line.separator}</echo>
		</sequential>
	</macrodef>

	<macrodef name="set.env.svars" backtrace="true" description="Set Svars at Environment level. If objectSelector attribute is specified, some of the input attributes will be ignored.">
		<attribute name="envName" default="" description="the name of the environment. Optional. If not specified all environments in data file are selected." />
		<attribute name="svarName" default="" description="The name of the svar. If this is not specified, then all the svars will be selected." />
		<attribute name="description" default="" description="the description value specified for the svar in data file. Optional. If not specified, all the svars are selected. description and svarName attributes are mutually exclusive. If both are specified, svarName will be used." />
		<attribute name="dataFile" description="The data file used as input for this admin CLI task. Required." />
		<attribute name="objectSelector" default="" description="The object selector to be used with the admin task. Optional. By default, the macrodef tries to construct the objectselector based on the other input attributes. If this is specified, most other attributes like envName etc will be ignored." />
		<attribute name="remotePropsFile" default="${remotePropsFile}" description="The remote properties file. Optional. By default the value of the property remotePropsFile defined will be used." />
		<attribute name="action" default="set" description="action to pass to admin task. Default is set." />
		<attribute name="overwrite" default="true" description="overwrite flag passed to the admin task. Optional. Default is true" />
		<attribute name="merge" default="true" description="merge flag passed to the admin task. Optional. Default is true" />
		<attribute name="createIfNotExists" default="true" description="The createIfNotExists flag passed to the admin task. Optional. Default is true" />
		<attribute name="force" default="false" description="force flag passed to the admin task. Optional. Default is false" />
		<attribute name="failOnError" default="true" description="failOnError flag passed to the admin task. Optional. Default is true" />
		<sequential>
			<echo>${line.separator}${line.separator}</echo>
			<echo>Set Environment level svars using:</echo>
			<echo>envName: @{envName}</echo>
			<echo>svarName: @{svarName}</echo>
			<echo>description: @{description}</echo>
			<echo>dataFile: @{dataFile}</echo>
			<echo>remotePropsFile: @{remotePropsFile}</echo>
			<echo>objectSelector: @{objectSelector}</echo>
			<echo>action: @{action}</echo>
			<echo>overwrite: @{overwrite}</echo>
			<echo>merge: @{merge}</echo>
			<echo>createIfNotExists: @{createIfNotExists}</echo>
			<echo>force: @{force}</echo>
			<echo>failOnError: @{failOnError}</echo>
			<if>
				<not>
					<equals arg1="@{objectSelector}" arg2="" />
				</not>
				<then>
					<var name="obj.sel" value="@{objectSelector}" />
				</then>
				<else>
					<if>
						<equals arg1="@{envName}" arg2="" />
						<then>
							<var name="obj.sel" value="Environment" />
						</then>
						<else>
							<var name="obj.sel" value="Environment[@name='@{envName}']" />
						</else>
					</if>
					<if>
						<not>
							<equals arg1="@{svarName}" arg2="" />
						</not>
						<then>
							<var name="obj.sel" value="${obj.sel}/SVar[@name='@{svarName}']" />
						</then>
						<elseif>
							<not>
								<equals arg1="@{description}" arg2="" />
							</not>
							<then>
								<var name="obj.sel" value="${obj.sel}/SVar[@description='@{description}']" />
							</then>
						</elseif>
						<else>
							<var name="obj.sel" value="${obj.sel}/SVar" />
						</else>
					</if>
				</else>
			</if>
			<echo message="Invoking Admin task using the objectselector: ${obj.sel}" />
			<AMXAdminTask remote="true" propsFile="@{remotePropsFile}" action="@{action}" dataFile="@{dataFile}" objectSelector="${obj.sel}" overwrite="@{overwrite}" merge="@{merge}" createIfNotExists="@{createIfNotExists}" force="@{force}" failOnError="@{failOnError}" />
			<echo>${line.separator}${line.separator}</echo>
		</sequential>
	</macrodef>

	<macrodef name="delete.env.svars" backtrace="true" description="Delete Svars at Environment level. If objectSelector attribute is specified, some of the input attributes will be ignored.">
		<attribute name="envName" default="" description="the name of the environment. Optional. If not specified all environments in data file are selected." />
		<attribute name="svarName" default="" description="The name of the svar. If this is not specified, then all the svars will be selected." />
		<attribute name="description" default="" description="the description value specified for the svar in data file. Optional. If not specified, all the svars are selected. description and svarName attributes are mutually exclusive. If both are specified, svarName will be used." />
		<attribute name="dataFile" description="The data file used as input for this admin CLI task. Required." />
		<attribute name="objectSelector" default="" description="The object selector to be used with the admin task. Optional. By default, the macrodef tries to construct the objectselector based on the other input attributes. If this is specified, most other attributes like envName etc will be ignored." />
		<attribute name="remotePropsFile" default="${remotePropsFile}" description="The remote properties file. Optional. By default the value of the property remotePropsFile defined will be used." />
		<attribute name="action" default="delete" description="action to pass to admin task. Default is delete." />
		<attribute name="overwrite" default="true" description="overwrite flag passed to the admin task. Optional. Default is true" />
		<attribute name="merge" default="true" description="merge flag passed to the admin task. Optional. Default is true" />
		<attribute name="createIfNotExists" default="true" description="The createIfNotExists flag passed to the admin task. Optional. Default is true" />
		<attribute name="force" default="false" description="force flag passed to the admin task. Optional. Default is false" />
		<attribute name="failOnError" default="true" description="failOnError flag passed to the admin task. Optional. Default is true" />
		<sequential>
			<echo>${line.separator}${line.separator}</echo>
			<echo>Delete Environment level svars using:</echo>
			<echo>envName: @{envName}</echo>
			<echo>svarName: @{svarName}</echo>
			<echo>description: @{description}</echo>
			<echo>dataFile: @{dataFile}</echo>
			<echo>remotePropsFile: @{remotePropsFile}</echo>
			<echo>objectSelector: @{objectSelector}</echo>
			<echo>action: @{action}</echo>
			<echo>overwrite: @{overwrite}</echo>
			<echo>merge: @{merge}</echo>
			<echo>createIfNotExists: @{createIfNotExists}</echo>
			<echo>force: @{force}</echo>
			<echo>failOnError: @{failOnError}</echo>
			<if>
				<not>
					<equals arg1="@{objectSelector}" arg2="" />
				</not>
				<then>
					<var name="obj.sel" value="@{objectSelector}" />
				</then>
				<else>
					<if>
						<equals arg1="@{envName}" arg2="" />
						<then>
							<var name="obj.sel" value="Environment" />
						</then>
						<else>
							<var name="obj.sel" value="Environment[@name='@{envName}']" />
						</else>
					</if>
					<if>
						<not>
							<equals arg1="@{svarName}" arg2="" />
						</not>
						<then>
							<var name="obj.sel" value="${obj.sel}/SVar[@name='@{svarName}']" />
						</then>
						<elseif>
							<not>
								<equals arg1="@{description}" arg2="" />
							</not>
							<then>
								<var name="obj.sel" value="${obj.sel}/SVar[@description='@{description}']" />
							</then>
						</elseif>
						<else>
							<var name="obj.sel" value="${obj.sel}/SVar" />
						</else>
					</if>
				</else>
			</if>
			<echo message="Invoking Admin task using the objectselector: ${obj.sel}" />
			<AMXAdminTask remote="true" propsFile="@{remotePropsFile}" action="@{action}" dataFile="@{dataFile}" objectSelector="${obj.sel}" overwrite="@{overwrite}" merge="@{merge}" createIfNotExists="@{createIfNotExists}" force="@{force}" failOnError="@{failOnError}" />
			<echo>${line.separator}${line.separator}</echo>
		</sequential>
	</macrodef>


	<macrodef name="add.host.svars" backtrace="true" description="Add Svars at host level. If objectSelector attribute is specified, some of the input attributes will be ignored.">
		<attribute name="hostName" default="" description="The name of the host. Optional. If not specified, all the hosts in the data file are selected." />
		<attribute name="svarName" default="" description="The name of the svar. If this is not specified, then all the svars will be selected." />
		<attribute name="description" default="" description="the description value specified for the svar in data file. Optional. If not specified, all the svars are selected. description and svarName attributes are mutually exclusive. If both are specified, svarName will be used." />
		<attribute name="dataFile" description="The data file used as input for this admin CLI task. Required." />
		<attribute name="objectSelector" default="" description="The object selector to be used with the admin task. Optional. By default, the macrodef tries to construct the objectselector based on the other input attributes. If this is specified, most other attributes like envName etc will be ignored." />
		<attribute name="remotePropsFile" default="${remotePropsFile}" description="The remote properties file. Optional. By default the value of the property remotePropsFile defined will be used." />
		<attribute name="action" default="add" description="action to pass to admin task. Default is add." />
		<attribute name="overwrite" default="true" description="overwrite flag passed to the admin task. Optional. Default is true" />
		<attribute name="merge" default="true" description="merge flag passed to the admin task. Optional. Default is true" />
		<attribute name="createIfNotExists" default="true" description="The createIfNotExists flag passed to the admin task. Optional. Default is true" />
		<attribute name="force" default="false" description="force flag passed to the admin task. Optional. Default is false" />
		<attribute name="failOnError" default="true" description="failOnError flag passed to the admin task. Optional. Default is true" />
		<sequential>
			<echo>${line.separator}${line.separator}</echo>
			<echo>Add host level svars using:</echo>
			<echo>hostName: @{hostName}</echo>
			<echo>svarName: @{svarName}</echo>
			<echo>description: @{description}</echo>
			<echo>dataFile: @{dataFile}</echo>
			<echo>remotePropsFile: @{remotePropsFile}</echo>
			<echo>objectSelector: @{objectSelector}</echo>
			<echo>action: @{action}</echo>
			<echo>overwrite: @{overwrite}</echo>
			<echo>merge: @{merge}</echo>
			<echo>createIfNotExists: @{createIfNotExists}</echo>
			<echo>force: @{force}</echo>
			<echo>failOnError: @{failOnError}</echo>
			<if>
				<not>
					<equals arg1="@{objectSelector}" arg2="" />
				</not>
				<then>
					<var name="obj.sel" value="@{objectSelector}" />
				</then>
				<else>
					<if>
						<equals arg1="@{hostName}" arg2="" />
						<then>
							<var name="obj.sel" value="Host" />
						</then>
						<else>
							<var name="obj.sel" value="Host[@name='@{hostName}']" />
						</else>
					</if>
					<if>
						<not>
							<equals arg1="@{svarName}" arg2="" />
						</not>
						<then>
							<var name="obj.sel" value="${obj.sel}/SVar[@name='@{svarName}']" />
						</then>
						<elseif>
							<not>
								<equals arg1="@{description}" arg2="" />
							</not>
							<then>
								<var name="obj.sel" value="${obj.sel}/SVar[@description='@{description}']" />
							</then>
						</elseif>
						<else>
							<var name="obj.sel" value="${obj.sel}/SVar" />
						</else>
					</if>
				</else>
			</if>
			<echo message="Invoking Admin task using the objectselector: ${obj.sel}" />
			<AMXAdminTask remote="true" propsFile="@{remotePropsFile}" action="@{action}" dataFile="@{dataFile}" objectSelector="${obj.sel}" overwrite="@{overwrite}" merge="@{merge}" createIfNotExists="@{createIfNotExists}" force="@{force}" failOnError="@{failOnError}" />
			<echo>${line.separator}${line.separator}</echo>
		</sequential>
	</macrodef>

	<macrodef name="edit.host.svars" backtrace="true" description="edit Svars at host level. If objectSelector attribute is specified, some of the input attributes will be ignored.">
		<attribute name="hostName" default="" description="The name of the host. Optional. If not specified, all the hosts in the data file are selected." />
		<attribute name="svarName" default="" description="The name of the svar. If this is not specified, then all the svars will be selected." />
		<attribute name="description" default="" description="the description value specified for the svar in data file. Optional. If not specified, all the svars are selected. description and svarName attributes are mutually exclusive. If both are specified, svarName will be used." />
		<attribute name="dataFile" description="The data file used as input for this admin CLI task. Required." />
		<attribute name="objectSelector" default="" description="The object selector to be used with the admin task. Optional. By default, the macrodef tries to construct the objectselector based on the other input attributes. If this is specified, most other attributes like envName etc will be ignored." />
		<attribute name="remotePropsFile" default="${remotePropsFile}" description="The remote properties file. Optional. By default the value of the property remotePropsFile defined will be used." />
		<attribute name="action" default="edit" description="action to pass to admin task. Default is edit." />
		<attribute name="overwrite" default="true" description="overwrite flag passed to the admin task. Optional. Default is true" />
		<attribute name="merge" default="true" description="merge flag passed to the admin task. Optional. Default is true" />
		<attribute name="createIfNotExists" default="true" description="The createIfNotExists flag passed to the admin task. Optional. Default is true" />
		<attribute name="force" default="false" description="force flag passed to the admin task. Optional. Default is false" />
		<attribute name="failOnError" default="true" description="failOnError flag passed to the admin task. Optional. Default is true" />
		<sequential>
			<echo>${line.separator}${line.separator}</echo>
			<echo>Edit host level svars using:</echo>
			<echo>hostName: @{hostName}</echo>
			<echo>svarName: @{svarName}</echo>
			<echo>description: @{description}</echo>
			<echo>dataFile: @{dataFile}</echo>
			<echo>remotePropsFile: @{remotePropsFile}</echo>
			<echo>objectSelector: @{objectSelector}</echo>
			<echo>action: @{action}</echo>
			<echo>overwrite: @{overwrite}</echo>
			<echo>merge: @{merge}</echo>
			<echo>createIfNotExists: @{createIfNotExists}</echo>
			<echo>force: @{force}</echo>
			<echo>failOnError: @{failOnError}</echo>
			<if>
				<not>
					<equals arg1="@{objectSelector}" arg2="" />
				</not>
				<then>
					<var name="obj.sel" value="@{objectSelector}" />
				</then>
				<else>
					<if>
						<equals arg1="@{hostName}" arg2="" />
						<then>
							<var name="obj.sel" value="Host" />
						</then>
						<else>
							<var name="obj.sel" value="Host[@name='@{hostName}']" />
						</else>
					</if>
					<if>
						<not>
							<equals arg1="@{svarName}" arg2="" />
						</not>
						<then>
							<var name="obj.sel" value="${obj.sel}/SVar[@name='@{svarName}']" />
						</then>
						<elseif>
							<not>
								<equals arg1="@{description}" arg2="" />
							</not>
							<then>
								<var name="obj.sel" value="${obj.sel}/SVar[@description='@{description}']" />
							</then>
						</elseif>
						<else>
							<var name="obj.sel" value="${obj.sel}/SVar" />
						</else>
					</if>
				</else>
			</if>
			<echo message="Invoking Admin task using the objectselector: ${obj.sel}" />
			<AMXAdminTask remote="true" propsFile="@{remotePropsFile}" action="@{action}" dataFile="@{dataFile}" objectSelector="${obj.sel}" overwrite="@{overwrite}" merge="@{merge}" createIfNotExists="@{createIfNotExists}" force="@{force}" failOnError="@{failOnError}" />
			<echo>${line.separator}${line.separator}</echo>
		</sequential>
	</macrodef>

	<macrodef name="set.host.svars" backtrace="true" description="Set Svars at host level. If objectSelector attribute is specified, some of the input attributes will be ignored.">
		<attribute name="hostName" default="" description="The name of the host. Optional. If not specified, all the hosts in the data file are selected." />
		<attribute name="svarName" default="" description="The name of the svar. If this is not specified, then all the svars will be selected." />
		<attribute name="description" default="" description="the description value specified for the svar in data file. Optional. If not specified, all the svars are selected. description and svarName attributes are mutually exclusive. If both are specified, svarName will be used." />
		<attribute name="dataFile" description="The data file used as input for this admin CLI task. Required." />
		<attribute name="objectSelector" default="" description="The object selector to be used with the admin task. Optional. By default, the macrodef tries to construct the objectselector based on the other input attributes. If this is specified, most other attributes like envName etc will be ignored." />
		<attribute name="remotePropsFile" default="${remotePropsFile}" description="The remote properties file. Optional. By default the value of the property remotePropsFile defined will be used." />
		<attribute name="action" default="set" description="action to pass to admin task. Default is set." />
		<attribute name="overwrite" default="true" description="overwrite flag passed to the admin task. Optional. Default is true" />
		<attribute name="merge" default="true" description="merge flag passed to the admin task. Optional. Default is true" />
		<attribute name="createIfNotExists" default="true" description="The createIfNotExists flag passed to the admin task. Optional. Default is true" />
		<attribute name="force" default="false" description="force flag passed to the admin task. Optional. Default is false" />
		<attribute name="failOnError" default="true" description="failOnError flag passed to the admin task. Optional. Default is true" />
		<sequential>
			<echo>${line.separator}${line.separator}</echo>
			<echo>Set host level svars using:</echo>
			<echo>hostName: @{hostName}</echo>
			<echo>svarName: @{svarName}</echo>
			<echo>description: @{description}</echo>
			<echo>dataFile: @{dataFile}</echo>
			<echo>remotePropsFile: @{remotePropsFile}</echo>
			<echo>objectSelector: @{objectSelector}</echo>
			<echo>action: @{action}</echo>
			<echo>overwrite: @{overwrite}</echo>
			<echo>merge: @{merge}</echo>
			<echo>createIfNotExists: @{createIfNotExists}</echo>
			<echo>force: @{force}</echo>
			<echo>failOnError: @{failOnError}</echo>
			<if>
				<not>
					<equals arg1="@{objectSelector}" arg2="" />
				</not>
				<then>
					<var name="obj.sel" value="@{objectSelector}" />
				</then>
				<else>
					<if>
						<equals arg1="@{hostName}" arg2="" />
						<then>
							<var name="obj.sel" value="Host" />
						</then>
						<else>
							<var name="obj.sel" value="Host[@name='@{hostName}']" />
						</else>
					</if>
					<if>
						<not>
							<equals arg1="@{svarName}" arg2="" />
						</not>
						<then>
							<var name="obj.sel" value="${obj.sel}/SVar[@name='@{svarName}']" />
						</then>
						<elseif>
							<not>
								<equals arg1="@{description}" arg2="" />
							</not>
							<then>
								<var name="obj.sel" value="${obj.sel}/SVar[@description='@{description}']" />
							</then>
						</elseif>
						<else>
							<var name="obj.sel" value="${obj.sel}/SVar" />
						</else>
					</if>
				</else>
			</if>
			<echo message="Invoking Admin task using the objectselector: ${obj.sel}" />
			<AMXAdminTask remote="true" propsFile="@{remotePropsFile}" action="@{action}" dataFile="@{dataFile}" objectSelector="${obj.sel}" overwrite="@{overwrite}" merge="@{merge}" createIfNotExists="@{createIfNotExists}" force="@{force}" failOnError="@{failOnError}" />
			<echo>${line.separator}${line.separator}</echo>
		</sequential>
	</macrodef>
	
<macrodef name="delete.host.svars" backtrace="true" description="Delete Svars at host level. If objectSelector attribute is specified, some of the input attributes will be ignored.">
		<attribute name="hostName" default="" description="The name of the host. Optional. If not specified, all the hosts in the data file are selected." />
		<attribute name="svarName" default="" description="The name of the svar. If this is not specified, then all the svars will be selected." />
		<attribute name="description" default="" description="the description value specified for the svar in data file. Optional. If not specified, all the svars are selected. description and svarName attributes are mutually exclusive. If both are specified, svarName will be used." />
		<attribute name="dataFile" description="The data file used as input for this admin CLI task. Required." />
		<attribute name="objectSelector" default="" description="The object selector to be used with the admin task. Optional. By default, the macrodef tries to construct the objectselector based on the other input attributes. If this is specified, most other attributes like envName etc will be ignored." />
		<attribute name="remotePropsFile" default="${remotePropsFile}" description="The remote properties file. Optional. By default the value of the property remotePropsFile defined will be used." />
		<attribute name="action" default="delete" description="action to pass to admin task. Default is delete." />
		<attribute name="overwrite" default="true" description="overwrite flag passed to the admin task. Optional. Default is true" />
		<attribute name="merge" default="true" description="merge flag passed to the admin task. Optional. Default is true" />
		<attribute name="createIfNotExists" default="true" description="The createIfNotExists flag passed to the admin task. Optional. Default is true" />
		<attribute name="force" default="false" description="force flag passed to the admin task. Optional. Default is false" />
		<attribute name="failOnError" default="true" description="failOnError flag passed to the admin task. Optional. Default is true" />
		<sequential>
			<echo>${line.separator}${line.separator}</echo>
			<echo>Delete host level svars using:</echo>
			<echo>hostName: @{hostName}</echo>
			<echo>svarName: @{svarName}</echo>
			<echo>description: @{description}</echo>
			<echo>dataFile: @{dataFile}</echo>
			<echo>remotePropsFile: @{remotePropsFile}</echo>
			<echo>objectSelector: @{objectSelector}</echo>
			<echo>action: @{action}</echo>
			<echo>overwrite: @{overwrite}</echo>
			<echo>merge: @{merge}</echo>
			<echo>createIfNotExists: @{createIfNotExists}</echo>
			<echo>force: @{force}</echo>
			<echo>failOnError: @{failOnError}</echo>
			<if>
				<not>
					<equals arg1="@{objectSelector}" arg2="" />
				</not>
				<then>
					<var name="obj.sel" value="@{objectSelector}" />
				</then>
				<else>
					<if>
						<equals arg1="@{hostName}" arg2="" />
						<then>
							<var name="obj.sel" value="Host" />
						</then>
						<else>
							<var name="obj.sel" value="Host[@name='@{hostName}']" />
						</else>
					</if>
					<if>
						<not>
							<equals arg1="@{svarName}" arg2="" />
						</not>
						<then>
							<var name="obj.sel" value="${obj.sel}/SVar[@name='@{svarName}']" />
						</then>
						<elseif>
							<not>
								<equals arg1="@{description}" arg2="" />
							</not>
							<then>
								<var name="obj.sel" value="${obj.sel}/SVar[@description='@{description}']" />
							</then>
						</elseif>
						<else>
							<var name="obj.sel" value="${obj.sel}/SVar" />
						</else>
					</if>
				</else>
			</if>
			<echo message="Invoking Admin task using the objectselector: ${obj.sel}" />
			<AMXAdminTask remote="true" propsFile="@{remotePropsFile}" action="@{action}" dataFile="@{dataFile}" objectSelector="${obj.sel}" overwrite="@{overwrite}" merge="@{merge}" createIfNotExists="@{createIfNotExists}" force="@{force}" failOnError="@{failOnError}" />
			<echo>${line.separator}${line.separator}</echo>
		</sequential>
	</macrodef>

	<macrodef name="add.node.svars" backtrace="true" description="Add Svars at node level. If objectSelector attribute is specified, some of the input attributes will be ignored.">
		<attribute name="envName" default="" description="the name of the environment. Optional. If not specified all environments in data file are selected." />
		<attribute name="nodeName" default="" description="the name of the node. Optional. If not specified all nodes in data file are selected." />
		<attribute name="svarName" default="" description="The name of the svar. If this is not specified, then all the svars will be selected." />
		<attribute name="description" default="" description="the description value specified for the svar in data file. Optional. If not specified, all the svars are selected. description and svarName attributes are mutually exclusive. If both are specified, svarName will be used." />
		<attribute name="dataFile" description="The data file used as input for this admin CLI task. Required." />
		<attribute name="objectSelector" default="" description="The object selector to be used with the admin task. Optional. By default, the macrodef tries to construct the objectselector based on the other input attributes. If this is specified, most other attributes like envName etc will be ignored." />
		<attribute name="remotePropsFile" default="${remotePropsFile}" description="The remote properties file. Optional. By default the value of the property remotePropsFile defined will be used." />
		<attribute name="action" default="add" description="action to pass to admin task. Default is add." />
		<attribute name="overwrite" default="true" description="overwrite flag passed to the admin task. Optional. Default is true" />
		<attribute name="merge" default="true" description="merge flag passed to the admin task. Optional. Default is true" />
		<attribute name="createIfNotExists" default="true" description="The createIfNotExists flag passed to the admin task. Optional. Default is true" />
		<attribute name="force" default="false" description="force flag passed to the admin task. Optional. Default is false" />
		<attribute name="failOnError" default="true" description="failOnError flag passed to the admin task. Optional. Default is true" />
		<sequential>
			<echo>${line.separator}${line.separator}</echo>
			<echo>Add node svars using:</echo>
			<echo>envName: @{envName}</echo>
			<echo>nodeName: @{nodeName}</echo>
			<echo>svarName: @{svarName}</echo>
			<echo>description: @{description}</echo>
			<echo>dataFile: @{dataFile}</echo>
			<echo>remotePropsFile: @{remotePropsFile}</echo>
			<echo>objectSelector: @{objectSelector}</echo>
			<echo>action: @{action}</echo>
			<echo>overwrite: @{overwrite}</echo>
			<echo>merge: @{merge}</echo>
			<echo>createIfNotExists: @{createIfNotExists}</echo>
			<echo>force: @{force}</echo>
			<echo>failOnError: @{failOnError}</echo>
			<if>
				<not>
					<equals arg1="@{objectSelector}" arg2="" />
				</not>
				<then>
					<var name="obj.sel" value="@{objectSelector}" />
				</then>
				<else>
					<if>
						<equals arg1="@{envName}" arg2="" />
						<then>
							<var name="obj.sel" value="Environment" />
						</then>
						<else>
							<var name="obj.sel" value="Environment[@name='@{envName}']" />
						</else>
					</if>
					<if>
						<equals arg1="@{nodeName}" arg2="" />
						<then>
							<var name="obj.sel" value="${obj.sel}/Node" />
						</then>
						<else>
							<var name="obj.sel" value="${obj.sel}/Node[@name='@{nodeName}']" />
						</else>
					</if>
					<if>
						<not>
							<equals arg1="@{svarName}" arg2="" />
						</not>
						<then>
							<var name="obj.sel" value="${obj.sel}/SVar[@name='@{svarName}']" />
						</then>
						<elseif>
							<not>
								<equals arg1="@{description}" arg2="" />
							</not>
							<then>
								<var name="obj.sel" value="${obj.sel}/SVar[@description='@{description}']" />
							</then>
						</elseif>
						<else>
							<var name="obj.sel" value="${obj.sel}/SVar" />
						</else>
					</if>
				</else>
			</if>
			<echo message="Invoking Admin task using the objectselector: ${obj.sel}" />
			<AMXAdminTask remote="true" propsFile="@{remotePropsFile}" action="@{action}" dataFile="@{dataFile}" objectSelector="${obj.sel}" overwrite="@{overwrite}" merge="@{merge}" createIfNotExists="@{createIfNotExists}" force="@{force}" failOnError="@{failOnError}" />
			<echo>${line.separator}${line.separator}</echo>
		</sequential>
	</macrodef>

	<macrodef name="edit.node.svars" backtrace="true" description="edit Svars at node level. If objectSelector attribute is specified, some of the input attributes will be ignored.">
		<attribute name="envName" default="" description="the name of the environment. Optional. If not specified all environments in data file are selected." />
		<attribute name="nodeName" default="" description="the name of the node. Optional. If not specified all nodes in data file are selected." />
		<attribute name="svarName" default="" description="The name of the svar. If this is not specified, then all the svars will be selected." />
		<attribute name="description" default="" description="the description value specified for the svar in data file. Optional. If not specified, all the svars are selected. description and svarName attributes are mutually exclusive. If both are specified, svarName will be used." />
		<attribute name="dataFile" description="The data file used as input for this admin CLI task. Required." />
		<attribute name="objectSelector" default="" description="The object selector to be used with the admin task. Optional. By default, the macrodef tries to construct the objectselector based on the other input attributes. If this is specified, most other attributes like envName etc will be ignored." />
		<attribute name="remotePropsFile" default="${remotePropsFile}" description="The remote properties file. Optional. By default the value of the property remotePropsFile defined will be used." />
		<attribute name="action" default="edit" description="action to pass to admin task. Default is edit." />
		<attribute name="overwrite" default="true" description="overwrite flag passed to the admin task. Optional. Default is true" />
		<attribute name="merge" default="true" description="merge flag passed to the admin task. Optional. Default is true" />
		<attribute name="createIfNotExists" default="true" description="The createIfNotExists flag passed to the admin task. Optional. Default is true" />
		<attribute name="force" default="false" description="force flag passed to the admin task. Optional. Default is false" />
		<attribute name="failOnError" default="true" description="failOnError flag passed to the admin task. Optional. Default is true" />
		<sequential>
			<echo>${line.separator}${line.separator}</echo>
			<echo>Edit node svars using:</echo>
			<echo>envName: @{envName}</echo>
			<echo>nodeName: @{nodeName}</echo>
			<echo>svarName: @{svarName}</echo>
			<echo>description: @{description}</echo>
			<echo>dataFile: @{dataFile}</echo>
			<echo>remotePropsFile: @{remotePropsFile}</echo>
			<echo>objectSelector: @{objectSelector}</echo>
			<echo>action: @{action}</echo>
			<echo>overwrite: @{overwrite}</echo>
			<echo>merge: @{merge}</echo>
			<echo>createIfNotExists: @{createIfNotExists}</echo>
			<echo>force: @{force}</echo>
			<echo>failOnError: @{failOnError}</echo>
			<if>
				<not>
					<equals arg1="@{objectSelector}" arg2="" />
				</not>
				<then>
					<var name="obj.sel" value="@{objectSelector}" />
				</then>
				<else>
					<if>
						<equals arg1="@{envName}" arg2="" />
						<then>
							<var name="obj.sel" value="Environment" />
						</then>
						<else>
							<var name="obj.sel" value="Environment[@name='@{envName}']" />
						</else>
					</if>
					<if>
						<equals arg1="@{nodeName}" arg2="" />
						<then>
							<var name="obj.sel" value="${obj.sel}/Node" />
						</then>
						<else>
							<var name="obj.sel" value="${obj.sel}/Node[@name='@{nodeName}']" />
						</else>
					</if>
					<if>
						<not>
							<equals arg1="@{svarName}" arg2="" />
						</not>
						<then>
							<var name="obj.sel" value="${obj.sel}/SVar[@name='@{svarName}']" />
						</then>
						<elseif>
							<not>
								<equals arg1="@{description}" arg2="" />
							</not>
							<then>
								<var name="obj.sel" value="${obj.sel}/SVar[@description='@{description}']" />
							</then>
						</elseif>
						<else>
							<var name="obj.sel" value="${obj.sel}/SVar" />
						</else>
					</if>
				</else>
			</if>
			<echo message="Invoking Admin task using the objectselector: ${obj.sel}" />
			<AMXAdminTask remote="true" propsFile="@{remotePropsFile}" action="@{action}" dataFile="@{dataFile}" objectSelector="${obj.sel}" overwrite="@{overwrite}" merge="@{merge}" createIfNotExists="@{createIfNotExists}" force="@{force}" failOnError="@{failOnError}" />
			<echo>${line.separator}${line.separator}</echo>
		</sequential>
	</macrodef>

	<macrodef name="set.node.svars" backtrace="true" description="Set Svars at node level. If objectSelector attribute is specified, some of the input attributes will be ignored.">
		<attribute name="envName" default="" description="the name of the environment. Optional. If not specified all environments in data file are selected." />
		<attribute name="nodeName" default="" description="the name of the node. Optional. If not specified all nodes in data file are selected." />
		<attribute name="svarName" default="" description="The name of the svar. If this is not specified, then all the svars will be selected." />
		<attribute name="description" default="" description="the description value specified for the svar in data file. Optional. If not specified, all the svars are selected. description and svarName attributes are mutually exclusive. If both are specified, svarName will be used." />
		<attribute name="dataFile" description="The data file used as input for this admin CLI task. Required." />
		<attribute name="objectSelector" default="" description="The object selector to be used with the admin task. Optional. By default, the macrodef tries to construct the objectselector based on the other input attributes. If this is specified, most other attributes like envName etc will be ignored." />
		<attribute name="remotePropsFile" default="${remotePropsFile}" description="The remote properties file. Optional. By default the value of the property remotePropsFile defined will be used." />
		<attribute name="action" default="set" description="action to pass to admin task. Default is set." />
		<attribute name="overwrite" default="true" description="overwrite flag passed to the admin task. Optional. Default is true" />
		<attribute name="merge" default="true" description="merge flag passed to the admin task. Optional. Default is true" />
		<attribute name="createIfNotExists" default="true" description="The createIfNotExists flag passed to the admin task. Optional. Default is true" />
		<attribute name="force" default="false" description="force flag passed to the admin task. Optional. Default is false" />
		<attribute name="failOnError" default="true" description="failOnError flag passed to the admin task. Optional. Default is true" />
		<sequential>
			<echo>${line.separator}${line.separator}</echo>
			<echo>Set node svars using:</echo>
			<echo>envName: @{envName}</echo>
			<echo>nodeName: @{nodeName}</echo>
			<echo>svarName: @{svarName}</echo>
			<echo>description: @{description}</echo>
			<echo>dataFile: @{dataFile}</echo>
			<echo>remotePropsFile: @{remotePropsFile}</echo>
			<echo>objectSelector: @{objectSelector}</echo>
			<echo>action: @{action}</echo>
			<echo>overwrite: @{overwrite}</echo>
			<echo>merge: @{merge}</echo>
			<echo>createIfNotExists: @{createIfNotExists}</echo>
			<echo>force: @{force}</echo>
			<echo>failOnError: @{failOnError}</echo>
			<if>
				<not>
					<equals arg1="@{objectSelector}" arg2="" />
				</not>
				<then>
					<var name="obj.sel" value="@{objectSelector}" />
				</then>
				<else>
					<if>
						<equals arg1="@{envName}" arg2="" />
						<then>
							<var name="obj.sel" value="Environment" />
						</then>
						<else>
							<var name="obj.sel" value="Environment[@name='@{envName}']" />
						</else>
					</if>
					<if>
						<equals arg1="@{nodeName}" arg2="" />
						<then>
							<var name="obj.sel" value="${obj.sel}/Node" />
						</then>
						<else>
							<var name="obj.sel" value="${obj.sel}/Node[@name='@{nodeName}']" />
						</else>
					</if>
					<if>
						<not>
							<equals arg1="@{svarName}" arg2="" />
						</not>
						<then>
							<var name="obj.sel" value="${obj.sel}/SVar[@name='@{svarName}']" />
						</then>
						<elseif>
							<not>
								<equals arg1="@{description}" arg2="" />
							</not>
							<then>
								<var name="obj.sel" value="${obj.sel}/SVar[@description='@{description}']" />
							</then>
						</elseif>
						<else>
							<var name="obj.sel" value="${obj.sel}/SVar" />
						</else>
					</if>
				</else>
			</if>
			<echo message="Invoking Admin task using the objectselector: ${obj.sel}" />
			<AMXAdminTask remote="true" propsFile="@{remotePropsFile}" action="@{action}" dataFile="@{dataFile}" objectSelector="${obj.sel}" overwrite="@{overwrite}" merge="@{merge}" createIfNotExists="@{createIfNotExists}" force="@{force}" failOnError="@{failOnError}" />
			<echo>${line.separator}${line.separator}</echo>
		</sequential>
	</macrodef>

	<macrodef name="delete.node.svars" backtrace="true" description="Delete Svars at node level. If objectSelector attribute is specified, some of the input attributes will be ignored.">
		<attribute name="envName" default="" description="the name of the environment. Optional. If not specified all environments in data file are selected." />
		<attribute name="nodeName" default="" description="the name of the node. Optional. If not specified all nodes in data file are selected." />
		<attribute name="svarName" default="" description="The name of the svar. If this is not specified, then all the svars will be selected." />
		<attribute name="description" default="" description="the description value specified for the svar in data file. Optional. If not specified, all the svars are selected. description and svarName attributes are mutually exclusive. If both are specified, svarName will be used." />
		<attribute name="dataFile" description="The data file used as input for this admin CLI task. Required." />
		<attribute name="objectSelector" default="" description="The object selector to be used with the admin task. Optional. By default, the macrodef tries to construct the objectselector based on the other input attributes. If this is specified, most other attributes like envName etc will be ignored." />
		<attribute name="remotePropsFile" default="${remotePropsFile}" description="The remote properties file. Optional. By default the value of the property remotePropsFile defined will be used." />
		<attribute name="action" default="delete" description="action to pass to admin task. Default is delete." />
		<attribute name="overwrite" default="true" description="overwrite flag passed to the admin task. Optional. Default is true" />
		<attribute name="merge" default="true" description="merge flag passed to the admin task. Optional. Default is true" />
		<attribute name="createIfNotExists" default="true" description="The createIfNotExists flag passed to the admin task. Optional. Default is true" />
		<attribute name="force" default="false" description="force flag passed to the admin task. Optional. Default is false" />
		<attribute name="failOnError" default="true" description="failOnError flag passed to the admin task. Optional. Default is true" />
		<sequential>
			<echo>${line.separator}${line.separator}</echo>
			<echo>Delete node svars using:</echo>
			<echo>envName: @{envName}</echo>
			<echo>nodeName: @{nodeName}</echo>
			<echo>svarName: @{svarName}</echo>
			<echo>description: @{description}</echo>
			<echo>dataFile: @{dataFile}</echo>
			<echo>remotePropsFile: @{remotePropsFile}</echo>
			<echo>objectSelector: @{objectSelector}</echo>
			<echo>action: @{action}</echo>
			<echo>overwrite: @{overwrite}</echo>
			<echo>merge: @{merge}</echo>
			<echo>createIfNotExists: @{createIfNotExists}</echo>
			<echo>force: @{force}</echo>
			<echo>failOnError: @{failOnError}</echo>
			<if>
				<not>
					<equals arg1="@{objectSelector}" arg2="" />
				</not>
				<then>
					<var name="obj.sel" value="@{objectSelector}" />
				</then>
				<else>
					<if>
						<equals arg1="@{envName}" arg2="" />
						<then>
							<var name="obj.sel" value="Environment" />
						</then>
						<else>
							<var name="obj.sel" value="Environment[@name='@{envName}']" />
						</else>
					</if>
					<if>
						<equals arg1="@{nodeName}" arg2="" />
						<then>
							<var name="obj.sel" value="${obj.sel}/Node" />
						</then>
						<else>
							<var name="obj.sel" value="${obj.sel}/Node[@name='@{nodeName}']" />
						</else>
					</if>
					<if>
						<not>
							<equals arg1="@{svarName}" arg2="" />
						</not>
						<then>
							<var name="obj.sel" value="${obj.sel}/SVar[@name='@{svarName}']" />
						</then>
						<elseif>
							<not>
								<equals arg1="@{description}" arg2="" />
							</not>
							<then>
								<var name="obj.sel" value="${obj.sel}/SVar[@description='@{description}']" />
							</then>
						</elseif>
						<else>
							<var name="obj.sel" value="${obj.sel}/SVar" />
						</else>
					</if>
				</else>
			</if>
			<echo message="Invoking Admin task using the objectselector: ${obj.sel}" />
			<AMXAdminTask remote="true" propsFile="@{remotePropsFile}" action="@{action}" dataFile="@{dataFile}" objectSelector="${obj.sel}" overwrite="@{overwrite}" merge="@{merge}" createIfNotExists="@{createIfNotExists}" force="@{force}" failOnError="@{failOnError}" />
			<echo>${line.separator}${line.separator}</echo>
		</sequential>
	</macrodef>

	<macrodef name="add.app.svars" backtrace="true" description="Add application level svars. If objectSelector attribute is specified, some of the input attributes will be ignored.">
		<attribute name="envName" default="" description="the name of the environment. Optional. If not specified all environments in data file are selected." />
		<attribute name="appName" default="" description="The name of the application. Optional. If not specified all the applications will be selected." />
		<attribute name="svarName" default="" description="The name of the svar. If this is not specified, then all the svars will be selected." />
		<attribute name="description" default="" description="the description value specified for the svar in data file. Optional. If not specified, all the svars are selected. description and svarName attributes are mutually exclusive. If both are specified, svarName will be used." />
		<attribute name="dataFile" description="The data file used as input for this admin CLI task. Required." />
		<attribute name="objectSelector" default="" description="The object selector to be used with the admin task. Optional. By default, the macrodef tries to construct the objectselector based on the other input attributes. If this is specified, most other attributes like envName etc will be ignored." />
		<attribute name="remotePropsFile" default="${remotePropsFile}" description="The remote properties file. Optional. By default the value of the property remotePropsFile defined will be used." />
		<attribute name="action" default="add" description="action to pass to admin task. Default is add." />
		<attribute name="overwrite" default="true" description="overwrite flag passed to the admin task. Optional. Default is true" />
		<attribute name="merge" default="true" description="merge flag passed to the admin task. Optional. Default is true" />
		<attribute name="createIfNotExists" default="true" description="The createIfNotExists flag passed to the admin task. Optional. Default is true" />
		<attribute name="force" default="false" description="force flag passed to the admin task. Optional. Default is false" />
		<attribute name="failOnError" default="true" description="failOnError flag passed to the admin task. Optional. Default is true" />
		<sequential>
			<echo>${line.separator}${line.separator}</echo>
			<echo>Add application level svars using:</echo>
			<echo>envName: @{envName}</echo>
			<echo>appName: @{appName}</echo>
			<echo>svarName: @{svarName}</echo>
			<echo>description: @{description}</echo>
			<echo>dataFile: @{dataFile}</echo>
			<echo>remotePropsFile: @{remotePropsFile}</echo>
			<echo>objectSelector: @{objectSelector}</echo>
			<echo>action: @{action}</echo>
			<echo>overwrite: @{overwrite}</echo>
			<echo>merge: @{merge}</echo>
			<echo>createIfNotExists: @{createIfNotExists}</echo>
			<echo>force: @{force}</echo>
			<echo>failOnError: @{failOnError}</echo>
			<if>
				<not>
					<equals arg1="@{objectSelector}" arg2="" />
				</not>
				<then>
					<var name="obj.sel" value="@{objectSelector}" />
				</then>
				<else>
					<if>
						<equals arg1="@{envName}" arg2="" />
						<then>
							<var name="obj.sel" value="Environment" />
						</then>
						<else>
							<var name="obj.sel" value="Environment[@name='@{envName}']" />
						</else>
					</if>
					<if>
						<equals arg1="@{appName}" arg2="" />
						<then>
							<var name="obj.sel" value="${obj.sel}//Application" />
						</then>
						<else>
							<var name="obj.sel" value="${obj.sel}//Application[@name='@{appName}']" />
						</else>
					</if>
					<if>
						<not>
							<equals arg1="@{svarName}" arg2="" />
						</not>
						<then>
							<var name="obj.sel" value="${obj.sel}/SVar[@name='@{svarName}']" />
						</then>
						<elseif>
							<not>
								<equals arg1="@{description}" arg2="" />
							</not>
							<then>
								<var name="obj.sel" value="${obj.sel}/SVar[@description='@{description}']" />
							</then>
						</elseif>
						<else>
							<var name="obj.sel" value="${obj.sel}/SVar" />
						</else>
					</if>
				</else>
			</if>
			<echo message="Invoking Admin task using the objectselector: ${obj.sel}" />
			<AMXAdminTask remote="true" propsFile="@{remotePropsFile}" action="@{action}" dataFile="@{dataFile}" objectSelector="${obj.sel}" overwrite="@{overwrite}" merge="@{merge}" createIfNotExists="@{createIfNotExists}" force="@{force}" failOnError="@{failOnError}" />
			<echo>${line.separator}${line.separator}</echo>
		</sequential>
	</macrodef>

	<macrodef name="edit.app.svars" backtrace="true" description="edit application level svars. If objectSelector attribute is specified, some of the input attributes will be ignored.">
		<attribute name="envName" default="" description="the name of the environment. Optional. If not specified all environments in data file are selected." />
		<attribute name="appName" default="" description="The name of the application. Optional. If not specified all the applications will be selected." />
		<attribute name="svarName" default="" description="The name of the svar. If this is not specified, then all the svars will be selected." />
		<attribute name="description" default="" description="the description value specified for the svar in data file. Optional. If not specified, all the svars are selected. description and svarName attributes are mutually exclusive. If both are specified, svarName will be used." />
		<attribute name="dataFile" description="The data file used as input for this admin CLI task. Required." />
		<attribute name="objectSelector" default="" description="The object selector to be used with the admin task. Optional. By default, the macrodef tries to construct the objectselector based on the other input attributes. If this is specified, most other attributes like envName etc will be ignored." />
		<attribute name="remotePropsFile" default="${remotePropsFile}" description="The remote properties file. Optional. By default the value of the property remotePropsFile defined will be used." />
		<attribute name="action" default="edit" description="action to pass to admin task. Default is edit." />
		<attribute name="overwrite" default="true" description="overwrite flag passed to the admin task. Optional. Default is true" />
		<attribute name="merge" default="true" description="merge flag passed to the admin task. Optional. Default is true" />
		<attribute name="createIfNotExists" default="true" description="The createIfNotExists flag passed to the admin task. Optional. Default is true" />
		<attribute name="force" default="false" description="force flag passed to the admin task. Optional. Default is false" />
		<attribute name="failOnError" default="true" description="failOnError flag passed to the admin task. Optional. Default is true" />
		<sequential>
			<echo>${line.separator}${line.separator}</echo>
			<echo>Edit application level svars using:</echo>
			<echo>envName: @{envName}</echo>
			<echo>appName: @{appName}</echo>
			<echo>svarName: @{svarName}</echo>
			<echo>description: @{description}</echo>
			<echo>dataFile: @{dataFile}</echo>
			<echo>remotePropsFile: @{remotePropsFile}</echo>
			<echo>objectSelector: @{objectSelector}</echo>
			<echo>action: @{action}</echo>
			<echo>overwrite: @{overwrite}</echo>
			<echo>merge: @{merge}</echo>
			<echo>createIfNotExists: @{createIfNotExists}</echo>
			<echo>force: @{force}</echo>
			<echo>failOnError: @{failOnError}</echo>
			<if>
				<not>
					<equals arg1="@{objectSelector}" arg2="" />
				</not>
				<then>
					<var name="obj.sel" value="@{objectSelector}" />
				</then>
				<else>
					<if>
						<equals arg1="@{envName}" arg2="" />
						<then>
							<var name="obj.sel" value="Environment" />
						</then>
						<else>
							<var name="obj.sel" value="Environment[@name='@{envName}']" />
						</else>
					</if>
					<if>
						<equals arg1="@{appName}" arg2="" />
						<then>
							<var name="obj.sel" value="${obj.sel}//Application" />
						</then>
						<else>
							<var name="obj.sel" value="${obj.sel}//Application[@name='@{appName}']" />
						</else>
					</if>
					<if>
						<not>
							<equals arg1="@{svarName}" arg2="" />
						</not>
						<then>
							<var name="obj.sel" value="${obj.sel}/SVar[@name='@{svarName}']" />
						</then>
						<elseif>
							<not>
								<equals arg1="@{description}" arg2="" />
							</not>
							<then>
								<var name="obj.sel" value="${obj.sel}/SVar[@description='@{description}']" />
							</then>
						</elseif>
						<else>
							<var name="obj.sel" value="${obj.sel}/SVar" />
						</else>
					</if>
				</else>
			</if>
			<echo message="Invoking Admin task using the objectselector: ${obj.sel}" />
			<AMXAdminTask remote="true" propsFile="@{remotePropsFile}" action="@{action}" dataFile="@{dataFile}" objectSelector="${obj.sel}" overwrite="@{overwrite}" merge="@{merge}" createIfNotExists="@{createIfNotExists}" force="@{force}" failOnError="@{failOnError}" />
			<echo>${line.separator}${line.separator}</echo>
		</sequential>
	</macrodef>

	<macrodef name="set.app.svars" backtrace="true" description="Set application level svars. If objectSelector attribute is specified, some of the input attributes will be ignored.">
		<attribute name="envName" default="" description="the name of the environment. Optional. If not specified all environments in data file are selected." />
		<attribute name="appName" default="" description="The name of the application. Optional. If not specified all the applications will be selected." />
		<attribute name="svarName" default="" description="The name of the svar. If this is not specified, then all the svars will be selected." />
		<attribute name="description" default="" description="the description value specified for the svar in data file. Optional. If not specified, all the svars are selected. description and svarName attributes are mutually exclusive. If both are specified, svarName will be used." />
		<attribute name="dataFile" description="The data file used as input for this admin CLI task. Required." />
		<attribute name="objectSelector" default="" description="The object selector to be used with the admin task. Optional. By default, the macrodef tries to construct the objectselector based on the other input attributes. If this is specified, most other attributes like envName etc will be ignored." />
		<attribute name="remotePropsFile" default="${remotePropsFile}" description="The remote properties file. Optional. By default the value of the property remotePropsFile defined will be used." />
		<attribute name="action" default="set" description="action to pass to admin task. Default is set." />
		<attribute name="overwrite" default="true" description="overwrite flag passed to the admin task. Optional. Default is true" />
		<attribute name="merge" default="true" description="merge flag passed to the admin task. Optional. Default is true" />
		<attribute name="createIfNotExists" default="true" description="The createIfNotExists flag passed to the admin task. Optional. Default is true" />
		<attribute name="force" default="false" description="force flag passed to the admin task. Optional. Default is false" />
		<attribute name="failOnError" default="true" description="failOnError flag passed to the admin task. Optional. Default is true" />
		<sequential>
			<echo>${line.separator}${line.separator}</echo>
			<echo>Set application level svars using:</echo>
			<echo>envName: @{envName}</echo>
			<echo>appName: @{appName}</echo>
			<echo>svarName: @{svarName}</echo>
			<echo>description: @{description}</echo>
			<echo>dataFile: @{dataFile}</echo>
			<echo>remotePropsFile: @{remotePropsFile}</echo>
			<echo>objectSelector: @{objectSelector}</echo>
			<echo>action: @{action}</echo>
			<echo>overwrite: @{overwrite}</echo>
			<echo>merge: @{merge}</echo>
			<echo>createIfNotExists: @{createIfNotExists}</echo>
			<echo>force: @{force}</echo>
			<echo>failOnError: @{failOnError}</echo>
			<if>
				<not>
					<equals arg1="@{objectSelector}" arg2="" />
				</not>
				<then>
					<var name="obj.sel" value="@{objectSelector}" />
				</then>
				<else>
					<if>
						<equals arg1="@{envName}" arg2="" />
						<then>
							<var name="obj.sel" value="Environment" />
						</then>
						<else>
							<var name="obj.sel" value="Environment[@name='@{envName}']" />
						</else>
					</if>
					<if>
						<equals arg1="@{appName}" arg2="" />
						<then>
							<var name="obj.sel" value="${obj.sel}//Application" />
						</then>
						<else>
							<var name="obj.sel" value="${obj.sel}//Application[@name='@{appName}']" />
						</else>
					</if>
					<if>
						<not>
							<equals arg1="@{svarName}" arg2="" />
						</not>
						<then>
							<var name="obj.sel" value="${obj.sel}/SVar[@name='@{svarName}']" />
						</then>
						<elseif>
							<not>
								<equals arg1="@{description}" arg2="" />
							</not>
							<then>
								<var name="obj.sel" value="${obj.sel}/SVar[@description='@{description}']" />
							</then>
						</elseif>
						<else>
							<var name="obj.sel" value="${obj.sel}/SVar" />
						</else>
					</if>
				</else>
			</if>
			<echo message="Invoking Admin task using the objectselector: ${obj.sel}" />
			<AMXAdminTask remote="true" propsFile="@{remotePropsFile}" action="@{action}" dataFile="@{dataFile}" objectSelector="${obj.sel}" overwrite="@{overwrite}" merge="@{merge}" createIfNotExists="@{createIfNotExists}" force="@{force}" failOnError="@{failOnError}" />
			<echo>${line.separator}${line.separator}</echo>
		</sequential>
	</macrodef>

	<macrodef name="delete.app.svars" backtrace="true" description="delete application level svars. If objectSelector attribute is specified, some of the input attributes will be ignored.">
		<attribute name="envName" default="" description="the name of the environment. Optional. If not specified all environments in data file are selected." />
		<attribute name="appName" default="" description="The name of the application. Optional. If not specified all the applications will be selected." />
		<attribute name="svarName" default="" description="The name of the svar. If this is not specified, then all the svars will be selected." />
		<attribute name="description" default="" description="the description value specified for the svar in data file. Optional. If not specified, all the svars are selected. description and svarName attributes are mutually exclusive. If both are specified, svarName will be used." />
		<attribute name="dataFile" description="The data file used as input for this admin CLI task. Required." />
		<attribute name="objectSelector" default="" description="The object selector to be used with the admin task. Optional. By default, the macrodef tries to construct the objectselector based on the other input attributes. If this is specified, most other attributes like envName etc will be ignored." />
		<attribute name="remotePropsFile" default="${remotePropsFile}" description="The remote properties file. Optional. By default the value of the property remotePropsFile defined will be used." />
		<attribute name="action" default="delete" description="action to pass to admin task. Default is delete." />
		<attribute name="overwrite" default="true" description="overwrite flag passed to the admin task. Optional. Default is true" />
		<attribute name="merge" default="true" description="merge flag passed to the admin task. Optional. Default is true" />
		<attribute name="createIfNotExists" default="true" description="The createIfNotExists flag passed to the admin task. Optional. Default is true" />
		<attribute name="force" default="false" description="force flag passed to the admin task. Optional. Default is false" />
		<attribute name="failOnError" default="true" description="failOnError flag passed to the admin task. Optional. Default is true" />
		<sequential>
			<echo>${line.separator}${line.separator}</echo>
			<echo>delete application level svars using:</echo>
			<echo>envName: @{envName}</echo>
			<echo>appName: @{appName}</echo>
			<echo>svarName: @{svarName}</echo>
			<echo>description: @{description}</echo>
			<echo>dataFile: @{dataFile}</echo>
			<echo>remotePropsFile: @{remotePropsFile}</echo>
			<echo>objectSelector: @{objectSelector}</echo>
			<echo>action: @{action}</echo>
			<echo>overwrite: @{overwrite}</echo>
			<echo>merge: @{merge}</echo>
			<echo>createIfNotExists: @{createIfNotExists}</echo>
			<echo>force: @{force}</echo>
			<echo>failOnError: @{failOnError}</echo>
			<if>
				<not>
					<equals arg1="@{objectSelector}" arg2="" />
				</not>
				<then>
					<var name="obj.sel" value="@{objectSelector}" />
				</then>
				<else>
					<if>
						<equals arg1="@{envName}" arg2="" />
						<then>
							<var name="obj.sel" value="Environment" />
						</then>
						<else>
							<var name="obj.sel" value="Environment[@name='@{envName}']" />
						</else>
					</if>
					<if>
						<equals arg1="@{appName}" arg2="" />
						<then>
							<var name="obj.sel" value="${obj.sel}//Application" />
						</then>
						<else>
							<var name="obj.sel" value="${obj.sel}//Application[@name='@{appName}']" />
						</else>
					</if>
					<if>
						<not>
							<equals arg1="@{svarName}" arg2="" />
						</not>
						<then>
							<var name="obj.sel" value="${obj.sel}/SVar[@name='@{svarName}']" />
						</then>
						<elseif>
							<not>
								<equals arg1="@{description}" arg2="" />
							</not>
							<then>
								<var name="obj.sel" value="${obj.sel}/SVar[@description='@{description}']" />
							</then>
						</elseif>
						<else>
							<var name="obj.sel" value="${obj.sel}/SVar" />
						</else>
					</if>
				</else>
			</if>
			<echo message="Invoking Admin task using the objectselector: ${obj.sel}" />
			<AMXAdminTask remote="true" propsFile="@{remotePropsFile}" action="@{action}" dataFile="@{dataFile}" objectSelector="${obj.sel}" overwrite="@{overwrite}" merge="@{merge}" createIfNotExists="@{createIfNotExists}" force="@{force}" failOnError="@{failOnError}" />
			<echo>${line.separator}${line.separator}</echo>
		</sequential>
	</macrodef>

	<macrodef name="add.appfragment.svars" backtrace="true" description="Add application fragment level svars. If objectSelector attribute is specified, some of the input attributes will be ignored.">
		<attribute name="envName" default="" description="the name of the environment. Optional. If not specified all environments in data file are selected." />
		<attribute name="appName" default="" description="The name of the application. Optional. If not specified all the applications will be selected." />
		<attribute name="nodeName" default="" description="the name of the node. Optional. If not specified all nodes in data file are selected." />
		<attribute name="svarName" default="" description="The name of the svar. If this is not specified, then all the svars will be selected." />
		<attribute name="description" default="" description="the description value specified for the svar in data file. Optional. If not specified, all the svars are selected. description and svarName attributes are mutually exclusive. If both are specified, svarName will be used." />
		<attribute name="dataFile" description="The data file used as input for this admin CLI task. Required." />
		<attribute name="objectSelector" default="" description="The object selector to be used with the admin task. Optional. By default, the macrodef tries to construct the objectselector based on the other input attributes. If this is specified, most other attributes like envName etc will be ignored." />
		<attribute name="remotePropsFile" default="${remotePropsFile}" description="The remote properties file. Optional. By default the value of the property remotePropsFile defined will be used." />
		<attribute name="action" default="add" description="action to pass to admin task. Default is add." />
		<attribute name="overwrite" default="true" description="overwrite flag passed to the admin task. Optional. Default is true" />
		<attribute name="merge" default="true" description="merge flag passed to the admin task. Optional. Default is true" />
		<attribute name="createIfNotExists" default="true" description="The createIfNotExists flag passed to the admin task. Optional. Default is true" />
		<attribute name="force" default="false" description="force flag passed to the admin task. Optional. Default is false" />
		<attribute name="failOnError" default="true" description="failOnError flag passed to the admin task. Optional. Default is true" />
		<sequential>
			<echo>${line.separator}${line.separator}</echo>
			<echo>Add application fragment level svars using:</echo>
			<echo>envName: @{envName}</echo>
			<echo>appName: @{appName}</echo>
			<echo>nodeName: @{nodeName}</echo>
			<echo>svarName: @{svarName}</echo>
			<echo>description: @{description}</echo>
			<echo>dataFile: @{dataFile}</echo>
			<echo>remotePropsFile: @{remotePropsFile}</echo>
			<echo>objectSelector: @{objectSelector}</echo>
			<echo>action: @{action}</echo>
			<echo>overwrite: @{overwrite}</echo>
			<echo>merge: @{merge}</echo>
			<echo>createIfNotExists: @{createIfNotExists}</echo>
			<echo>force: @{force}</echo>
			<echo>failOnError: @{failOnError}</echo>
			<if>
				<not>
					<equals arg1="@{objectSelector}" arg2="" />
				</not>
				<then>
					<var name="obj.sel" value="@{objectSelector}" />
				</then>
				<else>
					<if>
						<equals arg1="@{envName}" arg2="" />
						<then>
							<var name="obj.sel" value="Environment" />
						</then>
						<else>
							<var name="obj.sel" value="Environment[@name='@{envName}']" />
						</else>
					</if>
					<if>
						<equals arg1="@{appName}" arg2="" />
						<then>
							<var name="obj.sel" value="${obj.sel}//Application" />
						</then>
						<else>
							<var name="obj.sel" value="${obj.sel}//Application[@name='@{appName}']" />
						</else>
					</if>
					<if>
						<equals arg1="@{nodeName}" arg2="" />
						<then>
							<var name="obj.sel" value="${obj.sel}/AppFragment" />
						</then>
						<else>
							<var name="obj.sel" value="${obj.sel}/AppFragment[@nodeName='@{nodeName}']" />
						</else>
					</if>
					<if>
						<not>
							<equals arg1="@{svarName}" arg2="" />
						</not>
						<then>
							<var name="obj.sel" value="${obj.sel}/SVar[@name='@{svarName}']" />
						</then>
						<elseif>
							<not>
								<equals arg1="@{description}" arg2="" />
							</not>
							<then>
								<var name="obj.sel" value="${obj.sel}/SVar[@description='@{description}']" />
							</then>
						</elseif>
						<else>
							<var name="obj.sel" value="${obj.sel}/SVar" />
						</else>
					</if>
				</else>
			</if>
			<echo message="Invoking Admin task using the objectselector: ${obj.sel}" />
			<AMXAdminTask remote="true" propsFile="@{remotePropsFile}" action="@{action}" dataFile="@{dataFile}" objectSelector="${obj.sel}" overwrite="@{overwrite}" merge="@{merge}" createIfNotExists="@{createIfNotExists}" force="@{force}" failOnError="@{failOnError}" />
			<echo>${line.separator}${line.separator}</echo>
		</sequential>
	</macrodef>

	<macrodef name="edit.appfragment.svars" backtrace="true" description="edit application fragment level svars. If objectSelector attribute is specified, some of the input attributes will be ignored.">
		<attribute name="envName" default="" description="the name of the environment. Optional. If not specified all environments in data file are selected." />
		<attribute name="appName" default="" description="The name of the application. Optional. If not specified all the applications will be selected." />
		<attribute name="nodeName" default="" description="the name of the node. Optional. If not specified all nodes in data file are selected." />
		<attribute name="svarName" default="" description="The name of the svar. If this is not specified, then all the svars will be selected." />
		<attribute name="description" default="" description="the description value specified for the svar in data file. Optional. If not specified, all the svars are selected. description and svarName attributes are mutually exclusive. If both are specified, svarName will be used." />
		<attribute name="dataFile" description="The data file used as input for this admin CLI task. Required." />
		<attribute name="objectSelector" default="" description="The object selector to be used with the admin task. Optional. By default, the macrodef tries to construct the objectselector based on the other input attributes. If this is specified, most other attributes like envName etc will be ignored." />
		<attribute name="remotePropsFile" default="${remotePropsFile}" description="The remote properties file. Optional. By default the value of the property remotePropsFile defined will be used." />
		<attribute name="action" default="edit" description="action to pass to admin task. Default is edit." />
		<attribute name="overwrite" default="true" description="overwrite flag passed to the admin task. Optional. Default is true" />
		<attribute name="merge" default="true" description="merge flag passed to the admin task. Optional. Default is true" />
		<attribute name="createIfNotExists" default="true" description="The createIfNotExists flag passed to the admin task. Optional. Default is true" />
		<attribute name="force" default="false" description="force flag passed to the admin task. Optional. Default is false" />
		<attribute name="failOnError" default="true" description="failOnError flag passed to the admin task. Optional. Default is true" />
		<sequential>
			<echo>${line.separator}${line.separator}</echo>
			<echo>edit application fragment level svars using:</echo>
			<echo>envName: @{envName}</echo>
			<echo>appName: @{appName}</echo>
			<echo>nodeName: @{nodeName}</echo>
			<echo>svarName: @{svarName}</echo>
			<echo>description: @{description}</echo>
			<echo>dataFile: @{dataFile}</echo>
			<echo>remotePropsFile: @{remotePropsFile}</echo>
			<echo>objectSelector: @{objectSelector}</echo>
			<echo>action: @{action}</echo>
			<echo>overwrite: @{overwrite}</echo>
			<echo>merge: @{merge}</echo>
			<echo>createIfNotExists: @{createIfNotExists}</echo>
			<echo>force: @{force}</echo>
			<echo>failOnError: @{failOnError}</echo>
			<if>
				<not>
					<equals arg1="@{objectSelector}" arg2="" />
				</not>
				<then>
					<var name="obj.sel" value="@{objectSelector}" />
				</then>
				<else>
					<if>
						<equals arg1="@{envName}" arg2="" />
						<then>
							<var name="obj.sel" value="Environment" />
						</then>
						<else>
							<var name="obj.sel" value="Environment[@name='@{envName}']" />
						</else>
					</if>
					<if>
						<equals arg1="@{appName}" arg2="" />
						<then>
							<var name="obj.sel" value="${obj.sel}//Application" />
						</then>
						<else>
							<var name="obj.sel" value="${obj.sel}//Application[@name='@{appName}']" />
						</else>
					</if>
					<if>
						<equals arg1="@{nodeName}" arg2="" />
						<then>
							<var name="obj.sel" value="${obj.sel}/AppFragment" />
						</then>
						<else>
							<var name="obj.sel" value="${obj.sel}/AppFragment[@nodeName='@{nodeName}']" />
						</else>
					</if>
					<if>
						<not>
							<equals arg1="@{svarName}" arg2="" />
						</not>
						<then>
							<var name="obj.sel" value="${obj.sel}/SVar[@name='@{svarName}']" />
						</then>
						<elseif>
							<not>
								<equals arg1="@{description}" arg2="" />
							</not>
							<then>
								<var name="obj.sel" value="${obj.sel}/SVar[@description='@{description}']" />
							</then>
						</elseif>
						<else>
							<var name="obj.sel" value="${obj.sel}/SVar" />
						</else>
					</if>
				</else>
			</if>
			<echo message="Invoking Admin task using the objectselector: ${obj.sel}" />
			<AMXAdminTask remote="true" propsFile="@{remotePropsFile}" action="@{action}" dataFile="@{dataFile}" objectSelector="${obj.sel}" overwrite="@{overwrite}" merge="@{merge}" createIfNotExists="@{createIfNotExists}" force="@{force}" failOnError="@{failOnError}" />
			<echo>${line.separator}${line.separator}</echo>
		</sequential>
	</macrodef>

	<macrodef name="set.appfragment.svars" backtrace="true" description="Set application fragment level svars. If objectSelector attribute is specified, some of the input attributes will be ignored.">
		<attribute name="envName" default="" description="the name of the environment. Optional. If not specified all environments in data file are selected." />
		<attribute name="appName" default="" description="The name of the application. Optional. If not specified all the applications will be selected." />
		<attribute name="nodeName" default="" description="the name of the node. Optional. If not specified all nodes in data file are selected." />
		<attribute name="svarName" default="" description="The name of the svar. If this is not specified, then all the svars will be selected." />
		<attribute name="description" default="" description="the description value specified for the svar in data file. Optional. If not specified, all the svars are selected. description and svarName attributes are mutually exclusive. If both are specified, svarName will be used." />
		<attribute name="dataFile" description="The data file used as input for this admin CLI task. Required." />
		<attribute name="objectSelector" default="" description="The object selector to be used with the admin task. Optional. By default, the macrodef tries to construct the objectselector based on the other input attributes. If this is specified, most other attributes like envName etc will be ignored." />
		<attribute name="remotePropsFile" default="${remotePropsFile}" description="The remote properties file. Optional. By default the value of the property remotePropsFile defined will be used." />
		<attribute name="action" default="set" description="action to pass to admin task. Default is set." />
		<attribute name="overwrite" default="true" description="overwrite flag passed to the admin task. Optional. Default is true" />
		<attribute name="merge" default="true" description="merge flag passed to the admin task. Optional. Default is true" />
		<attribute name="createIfNotExists" default="true" description="The createIfNotExists flag passed to the admin task. Optional. Default is true" />
		<attribute name="force" default="false" description="force flag passed to the admin task. Optional. Default is false" />
		<attribute name="failOnError" default="true" description="failOnError flag passed to the admin task. Optional. Default is true" />
		<sequential>
			<echo>${line.separator}${line.separator}</echo>
			<echo>Set application fragment level svars using:</echo>
			<echo>envName: @{envName}</echo>
			<echo>appName: @{appName}</echo>
			<echo>nodeName: @{nodeName}</echo>
			<echo>svarName: @{svarName}</echo>
			<echo>description: @{description}</echo>
			<echo>dataFile: @{dataFile}</echo>
			<echo>remotePropsFile: @{remotePropsFile}</echo>
			<echo>objectSelector: @{objectSelector}</echo>
			<echo>action: @{action}</echo>
			<echo>overwrite: @{overwrite}</echo>
			<echo>merge: @{merge}</echo>
			<echo>createIfNotExists: @{createIfNotExists}</echo>
			<echo>force: @{force}</echo>
			<echo>failOnError: @{failOnError}</echo>
			<if>
				<not>
					<equals arg1="@{objectSelector}" arg2="" />
				</not>
				<then>
					<var name="obj.sel" value="@{objectSelector}" />
				</then>
				<else>
					<if>
						<equals arg1="@{envName}" arg2="" />
						<then>
							<var name="obj.sel" value="Environment" />
						</then>
						<else>
							<var name="obj.sel" value="Environment[@name='@{envName}']" />
						</else>
					</if>
					<if>
						<equals arg1="@{appName}" arg2="" />
						<then>
							<var name="obj.sel" value="${obj.sel}//Application" />
						</then>
						<else>
							<var name="obj.sel" value="${obj.sel}//Application[@name='@{appName}']" />
						</else>
					</if>
					<if>
						<equals arg1="@{nodeName}" arg2="" />
						<then>
							<var name="obj.sel" value="${obj.sel}/AppFragment" />
						</then>
						<else>
							<var name="obj.sel" value="${obj.sel}/AppFragment[@nodeName='@{nodeName}']" />
						</else>
					</if>
					<if>
						<not>
							<equals arg1="@{svarName}" arg2="" />
						</not>
						<then>
							<var name="obj.sel" value="${obj.sel}/SVar[@name='@{svarName}']" />
						</then>
						<elseif>
							<not>
								<equals arg1="@{description}" arg2="" />
							</not>
							<then>
								<var name="obj.sel" value="${obj.sel}/SVar[@description='@{description}']" />
							</then>
						</elseif>
						<else>
							<var name="obj.sel" value="${obj.sel}/SVar" />
						</else>
					</if>
				</else>
			</if>
			<echo message="Invoking Admin task using the objectselector: ${obj.sel}" />
			<AMXAdminTask remote="true" propsFile="@{remotePropsFile}" action="@{action}" dataFile="@{dataFile}" objectSelector="${obj.sel}" overwrite="@{overwrite}" merge="@{merge}" createIfNotExists="@{createIfNotExists}" force="@{force}" failOnError="@{failOnError}" />
			<echo>${line.separator}${line.separator}</echo>
		</sequential>
	</macrodef>

	<macrodef name="delete.appfragment.svars" backtrace="true" description="Delete application fragment level svars. If objectSelector attribute is specified, some of the input attributes will be ignored.">
		<attribute name="envName" default="" description="the name of the environment. Optional. If not specified all environments in data file are selected." />
		<attribute name="appName" default="" description="The name of the application. Optional. If not specified all the applications will be selected." />
		<attribute name="nodeName" default="" description="the name of the node. Optional. If not specified all nodes in data file are selected." />
		<attribute name="svarName" default="" description="The name of the svar. If this is not specified, then all the svars will be selected." />
		<attribute name="description" default="" description="the description value specified for the svar in data file. Optional. If not specified, all the svars are selected. description and svarName attributes are mutually exclusive. If both are specified, svarName will be used." />
		<attribute name="dataFile" description="The data file used as input for this admin CLI task. Required." />
		<attribute name="objectSelector" default="" description="The object selector to be used with the admin task. Optional. By default, the macrodef tries to construct the objectselector based on the other input attributes. If this is specified, most other attributes like envName etc will be ignored." />
		<attribute name="remotePropsFile" default="${remotePropsFile}" description="The remote properties file. Optional. By default the value of the property remotePropsFile defined will be used." />
		<attribute name="action" default="delete" description="action to pass to admin task. Default is delete." />
		<attribute name="overwrite" default="true" description="overwrite flag passed to the admin task. Optional. Default is true" />
		<attribute name="merge" default="true" description="merge flag passed to the admin task. Optional. Default is true" />
		<attribute name="createIfNotExists" default="true" description="The createIfNotExists flag passed to the admin task. Optional. Default is true" />
		<attribute name="force" default="false" description="force flag passed to the admin task. Optional. Default is false" />
		<attribute name="failOnError" default="true" description="failOnError flag passed to the admin task. Optional. Default is true" />
		<sequential>
			<echo>${line.separator}${line.separator}</echo>
			<echo>Delete application fragment level svars using:</echo>
			<echo>envName: @{envName}</echo>
			<echo>appName: @{appName}</echo>
			<echo>nodeName: @{nodeName}</echo>
			<echo>svarName: @{svarName}</echo>
			<echo>description: @{description}</echo>
			<echo>dataFile: @{dataFile}</echo>
			<echo>remotePropsFile: @{remotePropsFile}</echo>
			<echo>objectSelector: @{objectSelector}</echo>
			<echo>action: @{action}</echo>
			<echo>overwrite: @{overwrite}</echo>
			<echo>merge: @{merge}</echo>
			<echo>createIfNotExists: @{createIfNotExists}</echo>
			<echo>force: @{force}</echo>
			<echo>failOnError: @{failOnError}</echo>
			<if>
				<not>
					<equals arg1="@{objectSelector}" arg2="" />
				</not>
				<then>
					<var name="obj.sel" value="@{objectSelector}" />
				</then>
				<else>
					<if>
						<equals arg1="@{envName}" arg2="" />
						<then>
							<var name="obj.sel" value="Environment" />
						</then>
						<else>
							<var name="obj.sel" value="Environment[@name='@{envName}']" />
						</else>
					</if>
					<if>
						<equals arg1="@{appName}" arg2="" />
						<then>
							<var name="obj.sel" value="${obj.sel}//Application" />
						</then>
						<else>
							<var name="obj.sel" value="${obj.sel}//Application[@name='@{appName}']" />
						</else>
					</if>
					<if>
						<equals arg1="@{nodeName}" arg2="" />
						<then>
							<var name="obj.sel" value="${obj.sel}/AppFragment" />
						</then>
						<else>
							<var name="obj.sel" value="${obj.sel}/AppFragment[@nodeName='@{nodeName}']" />
						</else>
					</if>
					<if>
						<not>
							<equals arg1="@{svarName}" arg2="" />
						</not>
						<then>
							<var name="obj.sel" value="${obj.sel}/SVar[@name='@{svarName}']" />
						</then>
						<elseif>
							<not>
								<equals arg1="@{description}" arg2="" />
							</not>
							<then>
								<var name="obj.sel" value="${obj.sel}/SVar[@description='@{description}']" />
							</then>
						</elseif>
						<else>
							<var name="obj.sel" value="${obj.sel}/SVar" />
						</else>
					</if>
				</else>
			</if>
			<echo message="Invoking Admin task using the objectselector: ${obj.sel}" />
			<AMXAdminTask remote="true" propsFile="@{remotePropsFile}" action="@{action}" dataFile="@{dataFile}" objectSelector="${obj.sel}" overwrite="@{overwrite}" merge="@{merge}" createIfNotExists="@{createIfNotExists}" force="@{force}" failOnError="@{failOnError}" />
			<echo>${line.separator}${line.separator}</echo>
		</sequential>
	</macrodef>

	<macrodef name="add.ent.permissions" backtrace="true" description="Set Permissions to the Enterprise.">
		<attribute name="dataFile" description="The data file used as input for this admin CLI task. Required." />
		<attribute name="objectSelector" default="TopLevelPermission/Permissions" description="The object selector to be used with the admin task." />
		<attribute name="remotePropsFile" default="${remotePropsFile}" description="The remote properties file." />
		<attribute name="action" default="add" description="action to pass to admin task. Default is add." />
		<attribute name="overwrite" default="true" description="overwrite flag passed to the admin task. Optional. Default is true" />
		<attribute name="merge" default="true" description="merge flag passed to the admin task. Optional. Default is true" />
		<attribute name="createIfNotExists" default="true" description="The createIfNotExists flag passed to the admin task. Optional. Default is true" />
		<attribute name="force" default="false" description="force flag passed to the admin task. Optional. Default is false" />
		<attribute name="failOnError" default="true" description="failOnError flag passed to the admin task. Optional. Default is true" />
		<sequential>
			<echo>${line.separator}${line.separator}</echo>
			<echo>Adding Enterprise Permissions using:</echo>
			<echo>dataFile: @{dataFile}</echo>
			<echo>remotePropsFile: @{remotePropsFile}</echo>
			<echo>objectSelector: @{objectSelector}</echo>
			<echo>action: @{action}</echo>
			<echo>overwrite: @{overwrite}</echo>
			<echo>merge: @{merge}</echo>
			<echo>createIfNotExists: @{createIfNotExists}</echo>
			<echo>force: @{force}</echo>
			<echo>failOnError: @{failOnError}</echo>
			<echo message="Invoking Admin task using the objectselector: @{objectSelector}" />
			<AMXAdminTask remote="true" propsFile="@{remotePropsFile}" action="@{action}" dataFile="@{dataFile}" objectSelector="@{objectSelector}" overwrite="@{overwrite}" merge="@{merge}" createIfNotExists="@{createIfNotExists}" force="@{force}" failOnError="@{failOnError}" />
			<echo>${line.separator}${line.separator}</echo>
		</sequential>
	</macrodef>
	
	<macrodef name="remove.apptemplate" backtrace="true" description="Remove app template from amx administrator. If objectSelector attribute is specified, some of the input attributes will be ignored.">
		<attribute name="dataFile" description="The data file used as input for this admin CLI task. Required." />
		<attribute name="objectSelector" default="AppTemplate" description="The object selector to be used with the admin task. Optional.Default is AppTemplate" />
		<attribute name="remotePropsFile" default="${remotePropsFile}" description="The remote properties file. Optional. By default the value of the property remotePropsFile defined will be used." />
		<attribute name="action" default="delete" description="action to pass to admin task. Default is delete." />
		<attribute name="overwrite" default="true" description="overwrite flag passed to the admin task. Optional. Default is true" />
		<attribute name="merge" default="true" description="merge flag passed to the admin task. Optional. Default is true" />
		<attribute name="createIfNotExists" default="true" description="The createIfNotExists flag passed to the admin task. Optional. Default is true" />
		<attribute name="force" default="false" description="force flag passed to the admin task. Optional. Default is false" />
		<attribute name="failOnError" default="true" description="failOnError flag passed to the admin task. Optional. Default is true" />
		<sequential>
			<echo>${line.separator}${line.separator}</echo>
			<echo>Remove app template using:</echo>
			<echo>dataFile: @{dataFile}</echo>
			<echo>remotePropsFile: @{remotePropsFile}</echo>
			<echo>objectSelector: @{objectSelector}</echo>
			<echo>action: @{action}</echo>
			<echo>overwrite: @{overwrite}</echo>
			<echo>merge: @{merge}</echo>
			<echo>createIfNotExists: @{createIfNotExists}</echo>
			<echo>force: @{force}</echo>
			<echo>failOnError: @{failOnError}</echo>
			<AMXAdminTask remote="true" propsFile="@{remotePropsFile}" action="@{action}" dataFile="@{dataFile}" objectSelector="@{objectSelector}" overwrite="@{overwrite}" merge="@{merge}" createIfNotExists="@{createIfNotExists}" force="@{force}" failOnError="@{failOnError}" />
			<echo>${line.separator}${line.separator}</echo>
		</sequential>
	</macrodef>

	<macrodef name="remove.feature" backtrace="true" description="remove a feature from staging area.">
		<attribute name="dataFile" description="The data file used as input for this admin CLI task. Required." />
		<sequential>
			<echo>${line.separator}${line.separator}</echo>
			<echo>Delete feature using:</echo>
			<echo>dataFile: @{dataFile}</echo>
			<AMXAdminTask remote="true" propsFile="${remotePropsFile}" action="delete" dataFile="@{dataFile}" objectSelector="Feature" overwrite="true" merge="true" createIfNotExists="true" force="true" failOnError="true" />
		</sequential>
	</macrodef>

	<macrodef name="enable.feature" backtrace="true" description="Enable a feature on a node in specified specified environment. If objectSelector attribute is specified, some of the input attributes will be ignored.">
		<attribute name="envName" default="" description="the name of the environment. Optional. If not specified all environments in data file are selected." />
		<attribute name="nodeName" default="" description="the name of the node. Optional. If not specified all nodes in data file are selected." />
		<attribute name="featureName" default="" description="Name of the feature. Optional." />
		<attribute name="dataFile" description="The data file used as input for this admin CLI task. Required." />
		<attribute name="objectSelector" default="" description="The object selector to be used with the admin task. Optional. By default, the macrodef tries to construct the objectselector based on the other input attributes. If this is specified, most other attributes like envName etc will be ignored." />
		<attribute name="remotePropsFile" default="${remotePropsFile}" description="The remote properties file. Optional. By default the value of the property remotePropsFile defined will be used." />
		<attribute name="action" default="enabledfeatures" />
		<attribute name="overwrite" default="true" description="overwrite flag passed to the admin task. Optional. Default is true" />
		<attribute name="merge" default="true" description="merge flag passed to the admin task. Optional. Default is true" />
		<attribute name="createIfNotExists" default="true" description="The createIfNotExists flag passed to the admin task. Optional. Default is true" />
		<attribute name="force" default="false" description="force flag passed to the admin task. Optional. Default is false" />
		<attribute name="failOnError" default="true" description="failOnError flag passed to the admin task. Optional. Default is true" />
		<sequential>
			<echo>${line.separator}${line.separator}</echo>
			<echo>Enable feature on a node using:</echo>
			<echo>envName: @{envName}</echo>
			<echo>nodeName: @{nodeName}</echo>
			<echo>dataFile: @{dataFile}</echo>
			<echo>remotePropsFile: @{remotePropsFile}</echo>
			<echo>objectSelector: @{objectSelector}</echo>
			<echo>action: @{action}</echo>
			<echo>overwrite: @{overwrite}</echo>
			<echo>merge: @{merge}</echo>
			<echo>createIfNotExists: @{createIfNotExists}</echo>
			<echo>force: @{force}</echo>
			<echo>failOnError: @{failOnError}</echo>
			<if>
				<not>
					<equals arg1="@{objectSelector}" arg2="" />
				</not>
				<then>
					<var name="obj.sel" value="@{objectSelector}" />
				</then>
				<else>
					<if>
						<equals arg1="@{envName}" arg2="" />
						<then>
							<var name="obj.sel" value="Environment" />
						</then>
						<else>
							<var name="obj.sel" value="Environment[@name='@{envName}']" />
						</else>
					</if>
					<if>
						<equals arg1="@{nodeName}" arg2="" />
						<then>
							<var name="obj.sel" value="${obj.sel}/Node" />
						</then>
						<else>
							<var name="obj.sel" value="${obj.sel}/Node[@name='@{nodeName}']" />
						</else>
					</if>
					<if>
						<equals arg1="@{featureName}" arg2="" />
						<then>
							<var name="obj.sel" value="${obj.sel}/Feature" />
						</then>
						<else>
							<var name="obj.sel" value="${obj.sel}/Feature[@name='@{featureName}']" />
						</else>
					</if>
				</else>
			</if>
			<echo message="Invoking Admin task using the objectselector: ${obj.sel}" />
			<AMXAdminTask remote="true" propsFile="@{remotePropsFile}" action="@{action}" dataFile="@{dataFile}" objectSelector="${obj.sel}" overwrite="@{overwrite}" merge="@{merge}" createIfNotExists="@{createIfNotExists}" force="@{force}" failOnError="@{failOnError}" />
			<echo>${line.separator}${line.separator}</echo>
		</sequential>
	</macrodef>


	<macrodef name="disable.feature" backtrace="true" description="Desable a feature on a node in specified specified environment. If objectSelector attribute is specified, some of the input attributes will be ignored.">
		<attribute name="envName" default="" description="the name of the environment. Optional. If not specified all environments in data file are selected." />
		<attribute name="nodeName" default="" description="the name of the node. Optional. If not specified all nodes in data file are selected." />
		<attribute name="featureName" default="" description="Name of the feature. Optional." />
		<attribute name="dataFile" description="The data file used as input for this admin CLI task. Required." />
		<attribute name="objectSelector" default="" description="The object selector to be used with the admin task. Optional. By default, the macrodef tries to construct the objectselector based on the other input attributes. If this is specified, most other attributes like envName etc will be ignored." />
		<attribute name="remotePropsFile" default="${remotePropsFile}" description="The remote properties file. Optional. By default the value of the property remotePropsFile defined will be used." />
		<attribute name="action" default="disabledfeatures" />
		<attribute name="overwrite" default="true" description="overwrite flag passed to the admin task. Optional. Default is true" />
		<attribute name="merge" default="true" description="merge flag passed to the admin task. Optional. Default is true" />
		<attribute name="createIfNotExists" default="true" description="The createIfNotExists flag passed to the admin task. Optional. Default is true" />
		<attribute name="force" default="false" description="force flag passed to the admin task. Optional. Default is false" />
		<attribute name="failOnError" default="true" description="failOnError flag passed to the admin task. Optional. Default is true" />
		<sequential>
			<echo>${line.separator}${line.separator}</echo>
			<echo>Disable feature on a node using:</echo>
			<echo>envName: @{envName}</echo>
			<echo>nodeName: @{nodeName}</echo>
			<echo>dataFile: @{dataFile}</echo>
			<echo>remotePropsFile: @{remotePropsFile}</echo>
			<echo>objectSelector: @{objectSelector}</echo>
			<echo>action: @{action}</echo>
			<echo>overwrite: @{overwrite}</echo>
			<echo>merge: @{merge}</echo>
			<echo>createIfNotExists: @{createIfNotExists}</echo>
			<echo>force: @{force}</echo>
			<echo>failOnError: @{failOnError}</echo>
			<if>
				<not>
					<equals arg1="@{objectSelector}" arg2="" />
				</not>
				<then>
					<var name="obj.sel" value="@{objectSelector}" />
				</then>
				<else>
					<if>
						<equals arg1="@{envName}" arg2="" />
						<then>
							<var name="obj.sel" value="Environment" />
						</then>
						<else>
							<var name="obj.sel" value="Environment[@name='@{envName}']" />
						</else>
					</if>
					<if>
						<equals arg1="@{nodeName}" arg2="" />
						<then>
							<var name="obj.sel" value="${obj.sel}/Node" />
						</then>
						<else>
							<var name="obj.sel" value="${obj.sel}/Node[@name='@{nodeName}']" />
						</else>
					</if>
					<if>
						<equals arg1="@{featureName}" arg2="" />
						<then>
							<var name="obj.sel" value="${obj.sel}/Feature" />
						</then>
						<else>
							<var name="obj.sel" value="${obj.sel}/Feature[@name='@{featureName}']" />
						</else>
					</if>
				</else>
			</if>
			<echo message="Invoking Admin task using the objectselector: ${obj.sel}" />
			<AMXAdminTask remote="true" propsFile="@{remotePropsFile}" action="@{action}" dataFile="@{dataFile}" objectSelector="${obj.sel}" overwrite="@{overwrite}" merge="@{merge}" createIfNotExists="@{createIfNotExists}" force="@{force}" failOnError="@{failOnError}" />
			<echo>${line.separator}${line.separator}</echo>
		</sequential>
	</macrodef>


	<macrodef name="set.feature" backtrace="true" description="Set a feature on a node in specified specified environment. If objectSelector attribute is specified, some of the input attributes will be ignored.">
		<attribute name="envName" default="" description="the name of the environment. Optional. If not specified all environments in data file are selected." />
		<attribute name="nodeName" default="" description="the name of the node. Optional. If not specified all nodes in data file are selected." />
		<attribute name="featureName" default="" description="Name of the feature. Optional." />
		<attribute name="dataFile" description="The data file used as input for this admin CLI task. Required." />
		<attribute name="objectSelector" default="" description="The object selector to be used with the admin task. Optional. By default, the macrodef tries to construct the objectselector based on the other input attributes. If this is specified, most other attributes like envName etc will be ignored." />
		<attribute name="remotePropsFile" default="${remotePropsFile}" description="The remote properties file. Optional. By default the value of the property remotePropsFile defined will be used." />
		<attribute name="action" default="setfeatures" />
		<attribute name="overwrite" default="true" description="overwrite flag passed to the admin task. Optional. Default is true" />
		<attribute name="merge" default="true" description="merge flag passed to the admin task. Optional. Default is true" />
		<attribute name="createIfNotExists" default="true" description="The createIfNotExists flag passed to the admin task. Optional. Default is true" />
		<attribute name="force" default="false" description="force flag passed to the admin task. Optional. Default is false" />
		<attribute name="failOnError" default="true" description="failOnError flag passed to the admin task. Optional. Default is true" />
		<sequential>
			<echo>${line.separator}${line.separator}</echo>
			<echo>Set feature on a node using:</echo>
			<echo>envName: @{envName}</echo>
			<echo>nodeName: @{nodeName}</echo>
			<echo>dataFile: @{dataFile}</echo>
			<echo>remotePropsFile: @{remotePropsFile}</echo>
			<echo>objectSelector: @{objectSelector}</echo>
			<echo>action: @{action}</echo>
			<echo>overwrite: @{overwrite}</echo>
			<echo>merge: @{merge}</echo>
			<echo>createIfNotExists: @{createIfNotExists}</echo>
			<echo>force: @{force}</echo>
			<echo>failOnError: @{failOnError}</echo>
			<if>
				<not>
					<equals arg1="@{objectSelector}" arg2="" />
				</not>
				<then>
					<var name="obj.sel" value="@{objectSelector}" />
				</then>
				<else>
					<if>
						<equals arg1="@{envName}" arg2="" />
						<then>
							<var name="obj.sel" value="Environment" />
						</then>
						<else>
							<var name="obj.sel" value="Environment[@name='@{envName}']" />
						</else>
					</if>
					<if>
						<equals arg1="@{nodeName}" arg2="" />
						<then>
							<var name="obj.sel" value="${obj.sel}/Node" />
						</then>
						<else>
							<var name="obj.sel" value="${obj.sel}/Node[@name='@{nodeName}']" />
						</else>
					</if>
					<if>
						<equals arg1="@{featureName}" arg2="" />
						<then>
							<var name="obj.sel" value="${obj.sel}/Feature" />
						</then>
						<else>
							<var name="obj.sel" value="${obj.sel}/Feature[@name='@{featureName}']" />
						</else>
					</if>
				</else>
			</if>
			<echo message="Invoking Admin task using the objectselector: ${obj.sel}" />
			<AMXAdminTask remote="true" propsFile="@{remotePropsFile}" action="@{action}" dataFile="@{dataFile}" objectSelector="${obj.sel}" overwrite="@{overwrite}" merge="@{merge}" createIfNotExists="@{createIfNotExists}" force="@{force}" failOnError="@{failOnError}" />
			<echo>${line.separator}${line.separator}</echo>
		</sequential>
	</macrodef>



	<macrodef name="reprovision.Node" backtrace="true" description="Reprovision a node in specified specified environment. If objectSelector attribute is specified, some of the input attributes will be ignored.">
		<attribute name="envName" default="" description="the name of the environment. Optional. If not specified all environments in data file are selected." />
		<attribute name="nodeName" default="" description="the name of the node. Optional. If not specified all nodes in data file are selected." />
		<!-- <attribute name="featureName" default="" description="Name of the feature. Optional." /> -->
		<attribute name="dataFile" description="The data file used as input for this admin CLI task. Required." />
		<attribute name="objectSelector" default="" description="The object selector to be used with the admin task. Optional. By default, the macrodef tries to construct the objectselector based on the other input attributes. If this is specified, most other attributes like envName etc will be ignored." />
		<attribute name="remotePropsFile" default="${remotePropsFile}" description="The remote properties file. Optional. By default the value of the property remotePropsFile defined will be used." />
		<attribute name="action" default="reprovision" description="Action to set for the admin task. Default is reprovision" />
		<attribute name="overwrite" default="true" description="overwrite flag passed to the admin task. Optional. Default is true" />
		<attribute name="merge" default="true" description="merge flag passed to the admin task. Optional. Default is true" />
		<attribute name="options" default="" description="options flag passed to the admin task. It can be: resolve. And separate with, "/>
		<attribute name="createIfNotExists" default="true" description="The createIfNotExists flag passed to the admin task. Optional. Default is true" />
		<attribute name="force" default="false" description="force flag passed to the admin task. Optional. Default is false" />
		<attribute name="failOnError" default="true" description="failOnError flag passed to the admin task. Optional. Default is true" />
		<sequential>
			<echo>${line.separator}${line.separator}</echo>
			<echo>Reprovision node using:</echo>
			<echo>envName: @{envName}</echo>
			<echo>nodeName: @{nodeName}</echo>
			<echo>dataFile: @{dataFile}</echo>
			<echo>remotePropsFile: @{remotePropsFile}</echo>
			<echo>objectSelector: @{objectSelector}</echo>
			<echo>action: @{action}</echo>
			<echo>overwrite: @{overwrite}</echo>
			<echo>merge: @{merge}</echo>
			<echo>options: @{options}</echo>
			<echo>createIfNotExists: @{createIfNotExists}</echo>
			<echo>force: @{force}</echo>
			<echo>failOnError: @{failOnError}</echo>
			<if>
				<not>
					<equals arg1="@{objectSelector}" arg2="" />
				</not>
				<then>
					<var name="obj.sel" value="@{objectSelector}" />
				</then>
				<else>
					<if>
						<equals arg1="@{envName}" arg2="" />
						<then>
							<var name="obj.sel" value="Environment" />
						</then>
						<else>
							<var name="obj.sel" value="Environment[@name='@{envName}']" />
						</else>
					</if>
					<if>
						<equals arg1="@{nodeName}" arg2="" />
						<then>
							<var name="obj.sel" value="${obj.sel}/Node" />
						</then>
						<else>
							<var name="obj.sel" value="${obj.sel}/Node[@name='@{nodeName}']" />
						</else>
					</if>
				</else>
			</if>
			<echo message="Invoking Admin task using the objectselector: ${obj.sel}" />
			<AMXAdminTask remote="true" propsFile="@{remotePropsFile}" action="@{action}" dataFile="@{dataFile}" objectSelector="${obj.sel}" overwrite="@{overwrite}" merge="@{merge}" options="@{options}" createIfNotExists="@{createIfNotExists}" force="@{force}" failOnError="@{failOnError}" />
			<echo>${line.separator}${line.separator}</echo>
		</sequential>
	</macrodef>



	<macrodef name="run.soapui.test" backtrace="true" description="run the soapUI test using testrunner.">
		<attribute name="soapui.location" description="Location of the folder containing soapUI testrunner script. Required." />
		<attribute name="soapui.project.xml.location" description="soap UI project location. Required." />
		<attribute name="testsuiteName" description="SoapUI test suite name to execute. Required." />
		<attribute name="testcaseId" description="SoapUI test case name to execute. Required." />
		<attribute name="soapui.logs.folder" default="logs" description="location to put soap ui output. Optional. Default is logs folder." />
		<attribute name="webservice.url" description="the webservice url to use for soap ui tests. example: localhost:8080. Required." />
		<attribute name="otherOptions" default="" description="Other options to pass to soapui testrunner script. Optional." />
		<sequential>
			<echo>${line.separator}${line.separator}</echo>
			<echo>Invoking SOAPUI test using:</echo>
			<echo>soapui.location: @{soapui.location}</echo>
			<echo>soapui.project.xml.location: @{soapui.project.xml.location}</echo>
			<echo>testsuiteName: @{testsuiteName}</echo>
			<echo>testcaseId: @{testcaseId}</echo>
			<echo>soapui.logs.folder: @{soapui.logs.folder}</echo>
			<echo>webservice.url: @{webservice.url}</echo>
			<echo>otherOptions: @{otherOptions}</echo>

			<sleep seconds="2" />
			<mkdir dir="@{soapui.logs.folder}" />

			<if>
				<os family="windows" />
				<then>
					<var name="command" value="cmd.exe" />
					<var name="options" value="/c testrunner.bat  -a  -raj  " />
				</then>
				<else>
					<var name="command" value="./testrunner.sh" />
					<var name="options" value=" -a -raj " />
				</else>
			</if>
			<echo>" ${options} @{otherOptions} -h@{webservice.url} -s@{testsuiteName} -f@{soapui.logs.folder}/@{testcaseId} @{soapui.project.xml.location}  " </echo>
			<exec dir="@{soapui.location}" executable="${command}" failonerror="true">
				<arg line=" ${options} @{otherOptions} -h@{webservice.url} -s@{testsuiteName} -f@{soapui.logs.folder}/@{testcaseId} @{soapui.project.xml.location}  " />
			</exec>
		</sequential>

	</macrodef>

	<!-- The following macrodefs are here only for backward compatibility to take care of some existing tests 
	      Not to b used  by any new tests -->

	<macrodef name="add.action" backtrace="true">
		<attribute name="objector" />
		<attribute name="description" />
		<attribute name="dataFile" description="The data file used as input for this admin CLI task. Required." default="${dataFile}" />
		<attribute name="remotePropsFile" default="${remotePropsFile}" description="The remote properties file. Optional. By default the value of the property remotePropsFile defined will be used." />
		<attribute name="overwrite" default="true" description="overwrite flag passed to the admin task. Optional. Default is true" />
		<attribute name="merge" default="true" description="merge flag passed to the admin task. Optional. Default is true" />
		<attribute name="createIfNotExists" default="true" description="The createIfNotExists flag passed to the admin task. Optional. Default is true" />
		<attribute name="force" default="false" description="force flag passed to the admin task. Optional. Default is false" />
		<attribute name="failOnError" default="true" description="failOnError flag passed to the admin task. Optional. Default is true" />
		<element name="def" optional="yes" />
		<sequential>
			<def />
			<echo>${line.separator}${line.separator}</echo>
			<echo>Action name: add</echo>
			<echo>description: @{description}</echo>
			<echo>objector: @{objector}</echo>
			<echo>propsFile: @{remotePropsFile}</echo>
			<echo>dataFile: @{dataFile}</echo>
			<AMXAdminTask remote="true" propsFile="@{remotePropsFile}" action="add" dataFile="@{dataFile}" objectSelector="@{objector}" overwrite="@{overwrite}" merge="@{merge}" createIfNotExists="@{createIfNotExists}" force="@{force}" failOnError="@{failOnError}" />
			<echo>${line.separator}${line.separator}</echo>
		</sequential>
	</macrodef>

	<macrodef name="set.action" backtrace="true">
		<attribute name="objector" />
		<attribute name="description" />
		<attribute name="dataFile" description="The data file used as input for this admin CLI task. Required." default="${dataFile}" />
		<attribute name="remotePropsFile" default="${remotePropsFile}" description="The remote properties file. Optional. By default the value of the property remotePropsFile defined will be used." />
		<attribute name="overwrite" default="true" description="overwrite flag passed to the admin task. Optional. Default is true" />
		<attribute name="merge" default="true" description="merge flag passed to the admin task. Optional. Default is true" />
		<attribute name="createIfNotExists" default="true" description="The createIfNotExists flag passed to the admin task. Optional. Default is true" />
		<attribute name="force" default="false" description="force flag passed to the admin task. Optional. Default is false" />
		<attribute name="failOnError" default="true" description="failOnError flag passed to the admin task. Optional. Default is true" />
		<element name="def" optional="yes" />
		<sequential>
			<def />
			<echo>${line.separator}${line.separator}</echo>
			<echo>Action name: set</echo>
			<echo>description: @{description}</echo>
			<echo>objector: @{objector}</echo>
			<echo>propsFile: @{remotePropsFile}</echo>
			<echo>dataFile: @{dataFile}</echo>
			<AMXAdminTask remote="true" propsFile="@{remotePropsFile}" action="set" dataFile="@{dataFile}" objectSelector="@{objector}" overwrite="@{overwrite}" merge="@{merge}" createIfNotExists="@{createIfNotExists}" force="@{force}" failOnError="@{failOnError}" />
			<echo>${line.separator}${line.separator}</echo>
		</sequential>
	</macrodef>

	<macrodef name="delete.action" backtrace="true">
		<attribute name="objector" />
		<attribute name="description" />
		<attribute name="dataFile" description="The data file used as input for this admin CLI task. Required." default="${dataFile}" />
		<attribute name="remotePropsFile" default="${remotePropsFile}" description="The remote properties file. Optional. By default the value of the property remotePropsFile defined will be used." />
		<attribute name="overwrite" default="true" description="overwrite flag passed to the admin task. Optional. Default is true" />
		<attribute name="merge" default="true" description="merge flag passed to the admin task. Optional. Default is true" />
		<attribute name="createIfNotExists" default="true" description="The createIfNotExists flag passed to the admin task. Optional. Default is true" />
		<attribute name="force" default="false" description="force flag passed to the admin task. Optional. Default is false" />
		<attribute name="failOnError" default="true" description="failOnError flag passed to the admin task. Optional. Default is true" />
		<element name="def" optional="yes" />
		<sequential>
			<def />
			<echo>${line.separator}${line.separator}</echo>
			<echo>Action name: delete</echo>
			<echo>description: @{description}</echo>
			<echo>objector: @{objector}</echo>
			<echo>propsFile: @{remotePropsFile}</echo>
			<echo>dataFile: @{dataFile}</echo>
			<AMXAdminTask remote="true" propsFile="@{remotePropsFile}" action="delete" dataFile="@{dataFile}" objectSelector="@{objector}" overwrite="@{overwrite}" merge="@{merge}" createIfNotExists="@{createIfNotExists}" force="@{force}" failOnError="@{failOnError}" />
			<echo>${line.separator}${line.separator}</echo>
		</sequential>
	</macrodef>

	<macrodef name="setHostsForEnv.action" backtrace="true">
		<attribute name="objector" />
		<attribute name="description" />
		<attribute name="dataFile" description="The data file used as input for this admin CLI task. Required." default="${dataFile}" />
		<attribute name="remotePropsFile" default="${remotePropsFile}" description="The remote properties file. Optional. By default the value of the property remotePropsFile defined will be used." />
		<attribute name="overwrite" default="true" description="overwrite flag passed to the admin task. Optional. Default is true" />
		<attribute name="merge" default="true" description="merge flag passed to the admin task. Optional. Default is true" />
		<attribute name="createIfNotExists" default="true" description="The createIfNotExists flag passed to the admin task. Optional. Default is true" />
		<attribute name="force" default="false" description="force flag passed to the admin task. Optional. Default is false" />
		<attribute name="failOnError" default="true" description="failOnError flag passed to the admin task. Optional. Default is true" />
		<element name="def" optional="yes" />
		<sequential>
			<def />
			<echo>${line.separator}${line.separator}</echo>
			<echo>Action name: setHostsForEnv</echo>
			<echo>description: @{description}</echo>
			<echo>objector: @{objector}</echo>
			<echo>propsFile: @{remotePropsFile}</echo>
			<echo>dataFile: @{dataFile}</echo>
			<AMXAdminTask remote="true" propsFile="@{remotePropsFile}" action="setHostsForEnv" dataFile="@{dataFile}" objectSelector="@{objector}" overwrite="@{overwrite}" merge="@{merge}" createIfNotExists="@{createIfNotExists}" force="@{force}" failOnError="@{failOnError}" />
			<echo>${line.separator}${line.separator}</echo>
		</sequential>
	</macrodef>

	<macrodef name="install.action" backtrace="true">
		<attribute name="objector" />
		<attribute name="description" />
		<attribute name="dataFile" description="The data file used as input for this admin CLI task. Required." default="${dataFile}" />
		<attribute name="remotePropsFile" default="${remotePropsFile}" description="The remote properties file. Optional. By default the value of the property remotePropsFile defined will be used." />
		<attribute name="overwrite" default="true" description="overwrite flag passed to the admin task. Optional. Default is true" />
		<attribute name="merge" default="true" description="merge flag passed to the admin task. Optional. Default is true" />
		<attribute name="createIfNotExists" default="true" description="The createIfNotExists flag passed to the admin task. Optional. Default is true" />
		<attribute name="force" default="false" description="force flag passed to the admin task. Optional. Default is false" />
		<attribute name="failOnError" default="true" description="failOnError flag passed to the admin task. Optional. Default is true" />
		<element name="def" optional="yes" />
		<sequential>
			<def />
			<echo>${line.separator}${line.separator}</echo>
			<echo>Action name: install</echo>
			<echo>description: @{description}</echo>
			<echo>objector: @{objector}</echo>
			<echo>propsFile: @{remotePropsFile}</echo>
			<echo>dataFile: @{dataFile}</echo>
			<AMXAdminTask remote="true" propsFile="@{remotePropsFile}" action="install" dataFile="@{dataFile}" objectSelector="@{objector}" overwrite="@{overwrite}" merge="@{merge}" createIfNotExists="@{createIfNotExists}" force="@{force}" failOnError="@{failOnError}" />
			<echo>${line.separator}${line.separator}</echo>
		</sequential>
	</macrodef>

	<macrodef name="uninstall.action" backtrace="true">
		<attribute name="objector" />
		<attribute name="description" />
		<attribute name="dataFile" description="The data file used as input for this admin CLI task. Required." default="${dataFile}" />
		<attribute name="remotePropsFile" default="${remotePropsFile}" description="The remote properties file. Optional. By default the value of the property remotePropsFile defined will be used." />
		<attribute name="overwrite" default="true" description="overwrite flag passed to the admin task. Optional. Default is true" />
		<attribute name="merge" default="true" description="merge flag passed to the admin task. Optional. Default is true" />
		<attribute name="createIfNotExists" default="true" description="The createIfNotExists flag passed to the admin task. Optional. Default is true" />
		<attribute name="force" default="false" description="force flag passed to the admin task. Optional. Default is false" />
		<attribute name="failOnError" default="true" description="failOnError flag passed to the admin task. Optional. Default is true" />
		<element name="def" optional="yes" />
		<sequential>
			<def />
			<echo>${line.separator}${line.separator}</echo>
			<echo>Action name: uninstall</echo>
			<echo>description: @{description}</echo>
			<echo>objector: @{objector}</echo>
			<echo>propsFile: @{remotePropsFile}</echo>
			<echo>dataFile: @{dataFile}</echo>
			<AMXAdminTask remote="true" propsFile="@{remotePropsFile}" action="uninstall" dataFile="@{dataFile}" objectSelector="@{objector}" overwrite="@{overwrite}" merge="@{merge}" createIfNotExists="@{createIfNotExists}" force="@{force}" failOnError="@{failOnError}" />
			<echo>${line.separator}${line.separator}</echo>
		</sequential>
	</macrodef>

	<macrodef name="deploy.action" backtrace="true">
		<attribute name="objector" />
		<attribute name="description" />
		<attribute name="dataFile" description="The data file used as input for this admin CLI task. Required." default="${dataFile}" />
		<attribute name="remotePropsFile" default="${remotePropsFile}" description="The remote properties file. Optional. By default the value of the property remotePropsFile defined will be used." />
		<attribute name="overwrite" default="true" description="overwrite flag passed to the admin task. Optional. Default is true" />
		<attribute name="merge" default="true" description="merge flag passed to the admin task. Optional. Default is true" />
		<attribute name="createIfNotExists" default="true" description="The createIfNotExists flag passed to the admin task. Optional. Default is true" />
		<attribute name="force" default="false" description="force flag passed to the admin task. Optional. Default is false" />
		<attribute name="failOnError" default="true" description="failOnError flag passed to the admin task. Optional. Default is true" />
		<element name="def" optional="yes" />
		<sequential>
			<def />
			<echo>${line.separator}${line.separator}</echo>
			<echo>Action name: deploy</echo>
			<echo>description: @{description}</echo>
			<echo>objector: @{objector}</echo>
			<echo>propsFile: @{remotePropsFile}</echo>
			<echo>dataFile: @{dataFile}</echo>
			<AMXAdminTask remote="true" propsFile="@{remotePropsFile}" action="deploy" dataFile="@{dataFile}" objectSelector="@{objector}" overwrite="@{overwrite}" merge="@{merge}" createIfNotExists="@{createIfNotExists}" force="@{force}" failOnError="@{failOnError}" />
			<echo>${line.separator}${line.separator}</echo>
		</sequential>
	</macrodef>

	<macrodef name="undeploy.action" backtrace="true">
		<attribute name="objector" />
		<attribute name="description" />
		<attribute name="dataFile" description="The data file used as input for this admin CLI task. Required." default="${dataFile}" />
		<attribute name="remotePropsFile" default="${remotePropsFile}" description="The remote properties file. Optional. By default the value of the property remotePropsFile defined will be used." />
		<attribute name="overwrite" default="true" description="overwrite flag passed to the admin task. Optional. Default is true" />
		<attribute name="merge" default="true" description="merge flag passed to the admin task. Optional. Default is true" />
		<attribute name="createIfNotExists" default="true" description="The createIfNotExists flag passed to the admin task. Optional. Default is true" />
		<attribute name="force" default="false" description="force flag passed to the admin task. Optional. Default is false" />
		<attribute name="failOnError" default="true" description="failOnError flag passed to the admin task. Optional. Default is true" />
		<element name="def" optional="yes" />
		<sequential>
			<def />
			<echo>${line.separator}${line.separator}</echo>
			<echo>Action name: undeploy</echo>
			<echo>description: @{description}</echo>
			<echo>objector: @{objector}</echo>
			<echo>propsFile: @{remotePropsFile}</echo>
			<echo>dataFile: @{dataFile}</echo>
			<AMXAdminTask remote="true" propsFile="@{remotePropsFile}" action="undeploy" dataFile="@{dataFile}" objectSelector="@{objector}" overwrite="@{overwrite}" merge="@{merge}" createIfNotExists="@{createIfNotExists}" force="@{force}" failOnError="@{failOnError}" />
			<echo>${line.separator}${line.separator}</echo>
		</sequential>
	</macrodef>

	<macrodef name="stop.action" backtrace="true">
		<attribute name="objector" />
		<attribute name="description" />
		<attribute name="dataFile" description="The data file used as input for this admin CLI task. Required." default="${dataFile}" />
		<attribute name="remotePropsFile" default="${remotePropsFile}" description="The remote properties file. Optional. By default the value of the property remotePropsFile defined will be used." />
		<attribute name="overwrite" default="true" description="overwrite flag passed to the admin task. Optional. Default is true" />
		<attribute name="merge" default="true" description="merge flag passed to the admin task. Optional. Default is true" />
		<attribute name="createIfNotExists" default="true" description="The createIfNotExists flag passed to the admin task. Optional. Default is true" />
		<attribute name="force" default="false" description="force flag passed to the admin task. Optional. Default is false" />
		<attribute name="failOnError" default="true" description="failOnError flag passed to the admin task. Optional. Default is true" />
		<element name="def" optional="yes" />
		<sequential>
			<def />
			<echo>${line.separator}${line.separator}</echo>
			<echo>Action name: stop</echo>
			<echo>description: @{description}</echo>
			<echo>objector: @{objector}</echo>
			<echo>propsFile: @{remotePropsFile}</echo>
			<echo>dataFile: @{dataFile}</echo>
			<AMXAdminTask remote="true" propsFile="@{remotePropsFile}" action="stop" dataFile="@{dataFile}" objectSelector="@{objector}" overwrite="@{overwrite}" merge="@{merge}" createIfNotExists="@{createIfNotExists}" force="@{force}" failOnError="@{failOnError}" />
			<echo>${line.separator}${line.separator}</echo>
		</sequential>
	</macrodef>

	<macrodef name="start.action" backtrace="true">
		<attribute name="objector" />
		<attribute name="description" />
		<attribute name="dataFile" description="The data file used as input for this admin CLI task. Required." default="${dataFile}" />
		<attribute name="remotePropsFile" default="${remotePropsFile}" description="The remote properties file. Optional. By default the value of the property remotePropsFile defined will be used." />
		<attribute name="overwrite" default="true" description="overwrite flag passed to the admin task. Optional. Default is true" />
		<attribute name="merge" default="true" description="merge flag passed to the admin task. Optional. Default is true" />
		<attribute name="createIfNotExists" default="true" description="The createIfNotExists flag passed to the admin task. Optional. Default is true" />
		<attribute name="force" default="false" description="force flag passed to the admin task. Optional. Default is false" />
		<attribute name="failOnError" default="true" description="failOnError flag passed to the admin task. Optional. Default is true" />
		<element name="def" optional="yes" />
		<sequential>
			<def />
			<echo>${line.separator}${line.separator}</echo>
			<echo>Action name: start</echo>
			<echo>description: @{description}</echo>
			<echo>objector: @{objector}</echo>
			<echo>propsFile: @{remotePropsFile}</echo>
			<echo>dataFile: @{dataFile}</echo>
			<AMXAdminTask remote="true" propsFile="@{remotePropsFile}" action="start" dataFile="@{dataFile}" objectSelector="@{objector}" overwrite="@{overwrite}" merge="@{merge}" createIfNotExists="@{createIfNotExists}" force="@{force}" failOnError="@{failOnError}" />
			<echo>${line.separator}${line.separator}</echo>
		</sequential>
	</macrodef>

	<macrodef name="promote.action" backtrace="true">
		<attribute name="objector" />
		<attribute name="description" />
		<attribute name="dataFile" description="The data file used as input for this admin CLI task. Required." default="${dataFile}" />
		<attribute name="remotePropsFile" default="${remotePropsFile}" description="The remote properties file. Optional. By default the value of the property remotePropsFile defined will be used." />
		<attribute name="overwrite" default="true" description="overwrite flag passed to the admin task. Optional. Default is true" />
		<attribute name="merge" default="true" description="merge flag passed to the admin task. Optional. Default is true" />
		<attribute name="createIfNotExists" default="true" description="The createIfNotExists flag passed to the admin task. Optional. Default is true" />
		<attribute name="force" default="false" description="force flag passed to the admin task. Optional. Default is false" />
		<attribute name="failOnError" default="true" description="failOnError flag passed to the admin task. Optional. Default is true" />
		<element name="def" optional="yes" />
		<sequential>
			<def />
			<echo>${line.separator}${line.separator}</echo>
			<echo>Action name: promote</echo>
			<echo>description: @{description}</echo>
			<echo>objector: @{objector}</echo>
			<echo>propsFile: @{remotePropsFile}</echo>
			<echo>dataFile: @{dataFile}</echo>
			<AMXAdminTask remote="true" propsFile="@{remotePropsFile}" action="promote" dataFile="@{dataFile}" objectSelector="@{objector}" overwrite="@{overwrite}" merge="@{merge}" createIfNotExists="@{createIfNotExists}" force="@{force}" failOnError="@{failOnError}" />
			<echo>${line.separator}${line.separator}</echo>
		</sequential>
	</macrodef>

	<macrodef name="demote.action" backtrace="true">
		<attribute name="objector" />
		<attribute name="description" />
		<attribute name="dataFile" description="The data file used as input for this admin CLI task. Required." default="${dataFile}" />
		<attribute name="remotePropsFile" default="${remotePropsFile}" description="The remote properties file. Optional. By default the value of the property remotePropsFile defined will be used." />
		<attribute name="overwrite" default="true" description="overwrite flag passed to the admin task. Optional. Default is true" />
		<attribute name="merge" default="true" description="merge flag passed to the admin task. Optional. Default is true" />
		<attribute name="createIfNotExists" default="true" description="The createIfNotExists flag passed to the admin task. Optional. Default is true" />
		<attribute name="force" default="false" description="force flag passed to the admin task. Optional. Default is false" />
		<attribute name="failOnError" default="true" description="failOnError flag passed to the admin task. Optional. Default is true" />
		<element name="def" optional="yes" />
		<sequential>
			<def />
			<echo>${line.separator}${line.separator}</echo>
			<echo>Action name: demote</echo>
			<echo>description: @{description}</echo>
			<echo>objector: @{objector}</echo>
			<echo>propsFile: @{remotePropsFile}</echo>
			<echo>dataFile: @{dataFile}</echo>
			<AMXAdminTask remote="true" propsFile="@{remotePropsFile}" action="demote" dataFile="@{dataFile}" objectSelector="@{objector}" overwrite="@{overwrite}" merge="@{merge}" createIfNotExists="@{createIfNotExists}" force="@{force}" failOnError="@{failOnError}" />
			<echo>${line.separator}${line.separator}</echo>
		</sequential>
	</macrodef>

	<macrodef name="edit.action" backtrace="true">
		<attribute name="objector" />
		<attribute name="description" />
		<attribute name="dataFile" description="The data file used as input for this admin CLI task. Required." default="${dataFile}" />
		<attribute name="remotePropsFile" default="${remotePropsFile}" description="The remote properties file. Optional. By default the value of the property remotePropsFile defined will be used." />
		<attribute name="overwrite" default="true" description="overwrite flag passed to the admin task. Optional. Default is true" />
		<attribute name="merge" default="true" description="merge flag passed to the admin task. Optional. Default is true" />
		<attribute name="createIfNotExists" default="true" description="The createIfNotExists flag passed to the admin task. Optional. Default is true" />
		<attribute name="force" default="false" description="force flag passed to the admin task. Optional. Default is false" />
		<attribute name="failOnError" default="true" description="failOnError flag passed to the admin task. Optional. Default is true" />
		<element name="def" optional="yes" />
		<sequential>
			<def />
			<echo>${line.separator}${line.separator}</echo>
			<echo>Action name: edit</echo>
			<echo>description: @{description}</echo>
			<echo>objector: @{objector}</echo>
			<echo>propsFile: @{remotePropsFile}</echo>
			<echo>dataFile: @{dataFile}</echo>
			<AMXAdminTask remote="true" propsFile="@{remotePropsFile}" action="edit" dataFile="@{dataFile}" objectSelector="@{objector}" overwrite="@{overwrite}" merge="@{merge}" createIfNotExists="@{createIfNotExists}" force="@{force}" failOnError="@{failOnError}" />
			<echo>${line.separator}${line.separator}</echo>
		</sequential>
	</macrodef>

	<macrodef name="cli.admin.task" backtrace="true" description="Invoke the admin CLI task">
		<attribute name="objector" />
		<attribute name="description" />
		<attribute name="dataFile" description="The data file used as input for this admin CLI task. Required." default="${dataFile}" />
		<attribute name="remotePropsFile" default="${remotePropsFile}" description="The remote properties file. Optional. By default the value of the property remotePropsFile defined will be used." />
		<attribute name="overwrite" default="true" description="overwrite flag passed to the admin task. Optional. Default is true" />
		<attribute name="merge" default="true" description="merge flag passed to the admin task. Optional. Default is true" />
		<attribute name="createIfNotExists" default="true" description="The createIfNotExists flag passed to the admin task. Optional. Default is true" />
		<attribute name="force" default="false" description="force flag passed to the admin task. Optional. Default is false" />
		<attribute name="failOnError" default="true" description="failOnError flag passed to the admin task. Optional. Default is true" />
		<attribute name="action" />
		<element name="def" optional="yes" />
		<sequential>
			<def />
			<echo>${line.separator}${line.separator}</echo>
			<echo>Action name: @{action}</echo>
			<echo>description: @{description}</echo>
			<echo>objector: @{objector}</echo>
			<echo>propsFile: @{remotePropsFile}</echo>
			<echo>dataFile: @{dataFile}</echo>
			<AMXAdminTask remote="true" propsFile="@{remotePropsFile}" action="@{sction}" dataFile="@{dataFile}" objectSelector="@{objector}" overwrite="@{overwrite}" merge="@{merge}" createIfNotExists="@{createIfNotExists}" force="@{force}" failOnError="@{failOnError}" />
			<echo>${line.separator}${line.separator}</echo>
		</sequential>
	</macrodef>

	<macrodef name="invoke.sds.cli" description="invoke the SDS CLI command using the specified build file and workspace.">
		<attribute name="businessStudioHome" default="${tibcoAmxAdminHome}" description="The location of the Tibco Business studio home." />
		<attribute name="workspace" description="The location of the workspace into which the project should be imported." />
		<attribute name="sdsBuildFile" description="The location of the build file to use." />
		<attribute name="sdsBuildProperties" description="The location of the build properties file to pass to the build file." />
		<attribute name="expectedDaaLocation" default="" description="The location of the build properties file to pass to the build file." />
		<attribute name="vmArgs" default=" -Xms256m -Xmx512m -XX:MaxPermSize=256m " description="The optional vmargs to be specified for invoking the comand. Defaults to -Xms256m -Xmx512m -XX:MaxPermSize=256m" />
		<sequential>
			<def />
			<echo>${line.separator}${line.separator}</echo>
			<echo>businessStudioHome: @{businessStudioHome}</echo>
			<echo>sdsBuildFile: @{sdsBuildFile}</echo>
			<echo>sdsBuildProperties: @{sdsBuildProperties}</echo>
			<echo>workspace: @{workspace}</echo>
			<echo>vmArgs: @{vmArgs}</echo>
			<if>
				<os family="windows" />
				<then>
					<var name="command" value="TIBCOBusinessStudio.exe" />
				</then>
				<else>
					<var name="command" value="TIBCOBusinessStudio" />
				</else>
			</if>
			<echo>
			</echo>
			<exec dir="@{businessStudioHome}/studio/3.3/eclipse/" executable="${command}" failonerror="true">
				<arg line=" -application org.eclipse.ant.core.antRunner -buildfile @{sdsBuildFile} -data @{workspace} -nosplash -vmargs @{vmArgs} " />
			</exec>
			<echo>${line.separator}${line.separator}</echo>
		</sequential>
	</macrodef>

	<macrodef name="create.log.appender" backtrace="true" description="Create the log appender">
		<attribute name="dataFile" description="The data file used as input for this admin CLI task. Required." />
		<attribute name="objectSelector" default="LogAppender" description="the object selector to use. default is LogAppender." />
		<attribute name="remotePropsFile" default="${remotePropsFile}" description="The remote properties file. Optional. By default the value of the property remotePropsFile defined will be used." />
		<attribute name="action" default="add" description="action to pass to admin task. Default is add." />
		<attribute name="overwrite" default="true" description="overwrite flag passed to the admin task. Optional. Default is true" />
		<attribute name="merge" default="true" description="merge flag passed to the admin task. Optional. Default is true" />
		<attribute name="createIfNotExists" default="true" description="The createIfNotExists flag passed to the admin task. Optional. Default is true" />
		<attribute name="force" default="false" description="force flag passed to the admin task. Optional. Default is false" />
		<attribute name="failOnError" default="true" description="failOnError flag passed to the admin task. Optional. Default is true" />
		<sequential>
			<echo>${line.separator}${line.separator}</echo>
			<echo>Create Log Appender using:</echo>
			<echo>dataFile: @{dataFile}</echo>
			<echo>remotePropsFile: @{remotePropsFile}</echo>
			<echo>objectSelector: @{objectSelector}</echo>
			<echo>action: @{action}</echo>
			<echo>overwrite: @{overwrite}</echo>
			<echo>merge: @{merge}</echo>
			<echo>createIfNotExists: @{createIfNotExists}</echo>
			<echo>force: @{force}</echo>
			<echo>failOnError: @{failOnError}</echo>
			<AMXAdminTask remote="true" propsFile="@{remotePropsFile}" action="@{action}" dataFile="@{dataFile}" objectSelector="@{objectSelector}" overwrite="@{overwrite}" merge="@{merge}" createIfNotExists="@{createIfNotExists}" force="@{force}" failOnError="@{failOnError}" />
			<echo>${line.separator}${line.separator}</echo>
		</sequential>
	</macrodef>
	
	<macrodef name="update.log.appender" backtrace="true" description="update the log appender">
		<attribute name="dataFile" description="The data file used as input for this admin CLI task. Required." />
		<attribute name="objectSelector" default="LogAppender" description="the object selector to use. default is LogAppender." />
		<attribute name="remotePropsFile" default="${remotePropsFile}" description="The remote properties file. Optional. By default the value of the property remotePropsFile defined will be used." />
		<attribute name="action" default="edit" description="action to pass to admin task. Default is edit." />
		<attribute name="overwrite" default="true" description="overwrite flag passed to the admin task. Optional. Default is true" />
		<attribute name="merge" default="true" description="merge flag passed to the admin task. Optional. Default is true" />
		<attribute name="createIfNotExists" default="true" description="The createIfNotExists flag passed to the admin task. Optional. Default is true" />
		<attribute name="force" default="false" description="force flag passed to the admin task. Optional. Default is false" />
		<attribute name="failOnError" default="true" description="failOnError flag passed to the admin task. Optional. Default is true" />
		<sequential>
			<echo>${line.separator}${line.separator}</echo>
			<echo>Update Log Appender using:</echo>
			<echo>dataFile: @{dataFile}</echo>
			<echo>remotePropsFile: @{remotePropsFile}</echo>
			<echo>objectSelector: @{objectSelector}</echo>
			<echo>action: @{action}</echo>
			<echo>overwrite: @{overwrite}</echo>
			<echo>merge: @{merge}</echo>
			<echo>createIfNotExists: @{createIfNotExists}</echo>
			<echo>force: @{force}</echo>
			<echo>failOnError: @{failOnError}</echo>
			<AMXAdminTask remote="true" propsFile="@{remotePropsFile}" action="@{action}" dataFile="@{dataFile}" objectSelector="@{objectSelector}" overwrite="@{overwrite}" merge="@{merge}" createIfNotExists="@{createIfNotExists}" force="@{force}" failOnError="@{failOnError}" />
			<echo>${line.separator}${line.separator}</echo>
		</sequential>
	</macrodef>

	<macrodef name="delete.log.appender" backtrace="true" description="delete the log appender">
		<attribute name="dataFile" description="The data file used as input for this admin CLI task. Required." />
		<attribute name="objectSelector" default="LogAppender" description="the object selector to use. default is LogAppender." />
		<attribute name="remotePropsFile" default="${remotePropsFile}" description="The remote properties file. Optional. By default the value of the property remotePropsFile defined will be used." />
		<attribute name="action" default="delete" description="action to pass to admin task. Default is delete." />
		<attribute name="overwrite" default="true" description="overwrite flag passed to the admin task. Optional. Default is true" />
		<attribute name="merge" default="true" description="merge flag passed to the admin task. Optional. Default is true" />
		<attribute name="createIfNotExists" default="true" description="The createIfNotExists flag passed to the admin task. Optional. Default is true" />
		<attribute name="force" default="false" description="force flag passed to the admin task. Optional. Default is false" />
		<attribute name="failOnError" default="true" description="failOnError flag passed to the admin task. Optional. Default is true" />
		<sequential>
			<echo>${line.separator}${line.separator}</echo>
			<echo>Delete Log Appender using:</echo>
			<echo>dataFile: @{dataFile}</echo>
			<echo>remotePropsFile: @{remotePropsFile}</echo>
			<echo>objectSelector: @{objectSelector}</echo>
			<echo>action: @{action}</echo>
			<echo>overwrite: @{overwrite}</echo>
			<echo>merge: @{merge}</echo>
			<echo>createIfNotExists: @{createIfNotExists}</echo>
			<echo>force: @{force}</echo>
			<echo>failOnError: @{failOnError}</echo>
			<AMXAdminTask remote="true" propsFile="@{remotePropsFile}" action="@{action}" dataFile="@{dataFile}" objectSelector="@{objectSelector}" overwrite="@{overwrite}" merge="@{merge}" createIfNotExists="@{createIfNotExists}" force="@{force}" failOnError="@{failOnError}" />
			<echo>${line.separator}${line.separator}</echo>
		</sequential>
	</macrodef>

	<macrodef name="set.logger.to.app" backtrace="true" description="set the logger to the application.">
		<attribute name="envName" default="" description="the name of the environment. Optional. If not specified all environments in data file are selected." />
		<attribute name="appName" default="" description="The name of the application. Optional. If not specified all the applications will be selected." />
		<attribute name="loggerName" default="" description="The name of the logger. Optional. If not specified all the loggers will be selected." />
		<attribute name="dataFile" description="The data file used as input for this admin CLI task. Required." />
		<attribute name="objectSelector" default="" description="The object selector to be used with the admin task. Optional. By default, the macrodef tries to construct the objectselector based on the other input attributes. If this is specified, most other attributes like envName etc will be ignored." />
		<attribute name="remotePropsFile" default="${remotePropsFile}" description="The remote properties file. Optional. By default the value of the property remotePropsFile defined will be used." />
		<attribute name="action" default="set" description="action to pass to admin task. Default is set." />
		<attribute name="overwrite" default="true" description="overwrite flag passed to the admin task. Optional. Default is true" />
		<attribute name="merge" default="true" description="merge flag passed to the admin task. Optional. Default is true" />
		<attribute name="createIfNotExists" default="true" description="The createIfNotExists flag passed to the admin task. Optional. Default is true" />
		<attribute name="force" default="false" description="force flag passed to the admin task. Optional. Default is false" />
		<attribute name="failOnError" default="true" description="failOnError flag passed to the admin task. Optional. Default is true" />
		<sequential>
			<echo>${line.separator}${line.separator}</echo>
			<echo>Set Logger for Application using:</echo>
			<echo>envName: @{envName}</echo>
			<echo>appName: @{appName}</echo>
			<echo>loggerName: @{loggerName}</echo>
			<echo>dataFile: @{dataFile}</echo>
			<echo>remotePropsFile: @{remotePropsFile}</echo>
			<echo>objectSelector: @{objectSelector}</echo>
			<echo>action: @{action}</echo>
			<echo>overwrite: @{overwrite}</echo>
			<echo>merge: @{merge}</echo>
			<echo>createIfNotExists: @{createIfNotExists}</echo>
			<echo>force: @{force}</echo>
			<echo>failOnError: @{failOnError}</echo>
			<if>
				<not>
					<equals arg1="@{objectSelector}" arg2="" />
				</not>
				<then>
					<var name="obj.sel" value="@{objectSelector}" />
				</then>
				<else>
					<if>
						<equals arg1="@{envName}" arg2="" />
						<then>
							<var name="obj.sel" value="Environment" />
						</then>
						<else>
							<var name="obj.sel" value="Environment[@name='@{envName}']" />
						</else>
					</if>
					<if>
						<equals arg1="@{appName}" arg2="" />
						<then>
							<var name="obj.sel" value="${obj.sel}//Application" />
						</then>
						<else>
							<var name="obj.sel" value="${obj.sel}//Application[@name='@{appName}']" />
						</else>
					</if>
					<if>
						<equals arg1="@{loggerName}" arg2="" />
						<then>
							<var name="obj.sel" value="${obj.sel}/Logger" />
						</then>
						<else>
							<var name="obj.sel" value="${obj.sel}/Logger[@name='@{loggerName}']" />
						</else>
					</if>
				</else>
			</if>
			<echo message="Invoking Admin task using the objectselector: ${obj.sel}" />
			<AMXAdminTask remote="true" propsFile="@{remotePropsFile}" action="@{action}" dataFile="@{dataFile}" objectSelector="${obj.sel}" overwrite="@{overwrite}" merge="@{merge}" createIfNotExists="@{createIfNotExists}" force="@{force}" failOnError="@{failOnError}" />
			<echo>${line.separator}${line.separator}</echo>
		</sequential>
	</macrodef>
	
	<macrodef name="set.logger.to.component" backtrace="true" description="set the logger to the component.">
		<attribute name="envName" default="" description="the name of the environment. Optional. If not specified all environments in data file are selected." />
		<attribute name="appName" default="" description="The name of the application. Optional. If not specified all the applications will be selected." />
		<attribute name="compName" default="" description="The name of the component. Optional. If not specified all the components will be selected." />
		<attribute name="loggerName" default="" description="The name of the logger. Optional. If not specified all the loggers will be selected." />
		<attribute name="dataFile" description="The data file used as input for this admin CLI task. Required." />
		<attribute name="objectSelector" default="" description="The object selector to be used with the admin task. Optional. By default, the macrodef tries to construct the objectselector based on the other input attributes. If this is specified, most other attributes like envName etc will be ignored." />
		<attribute name="remotePropsFile" default="${remotePropsFile}" description="The remote properties file. Optional. By default the value of the property remotePropsFile defined will be used." />
		<attribute name="action" default="set" description="action to pass to admin task. Default is set." />
		<attribute name="overwrite" default="true" description="overwrite flag passed to the admin task. Optional. Default is true" />
		<attribute name="merge" default="true" description="merge flag passed to the admin task. Optional. Default is true" />
		<attribute name="createIfNotExists" default="true" description="The createIfNotExists flag passed to the admin task. Optional. Default is true" />
		<attribute name="force" default="false" description="force flag passed to the admin task. Optional. Default is false" />
		<attribute name="failOnError" default="true" description="failOnError flag passed to the admin task. Optional. Default is true" />
		<sequential>
			<echo>${line.separator}${line.separator}</echo>
			<echo>Set Logger for Component using:</echo>
			<echo>envName: @{envName}</echo>
			<echo>appName: @{appName}</echo>
			<echo>compName: @{compName}</echo>
			<echo>loggerName: @{loggerName}</echo>
			<echo>dataFile: @{dataFile}</echo>
			<echo>remotePropsFile: @{remotePropsFile}</echo>
			<echo>objectSelector: @{objectSelector}</echo>
			<echo>action: @{action}</echo>
			<echo>overwrite: @{overwrite}</echo>
			<echo>merge: @{merge}</echo>
			<echo>createIfNotExists: @{createIfNotExists}</echo>
			<echo>force: @{force}</echo>
			<echo>failOnError: @{failOnError}</echo>
			<if>
				<not>
					<equals arg1="@{objectSelector}" arg2="" />
				</not>
				<then>
					<var name="obj.sel" value="@{objectSelector}" />
				</then>
				<else>
					<if>
						<equals arg1="@{envName}" arg2="" />
						<then>
							<var name="obj.sel" value="Environment" />
						</then>
						<else>
							<var name="obj.sel" value="Environment[@name='@{envName}']" />
						</else>
					</if>
					<if>
						<equals arg1="@{appName}" arg2="" />
						<then>
							<var name="obj.sel" value="${obj.sel}//Application" />
						</then>
						<else>
							<var name="obj.sel" value="${obj.sel}//Application[@name='@{appName}']" />
						</else>
					</if>
					<if>
						<equals arg1="@{compName}" arg2="" />
						<then>
							<var name="obj.sel" value="${obj.sel}/Component" />
						</then>
						<else>
							<var name="obj.sel" value="${obj.sel}/Component[@name='@{compName}']" />
						</else>
					</if>
					<if>
						<equals arg1="@{loggerName}" arg2="" />
						<then>
							<var name="obj.sel" value="${obj.sel}/Logger" />
						</then>
						<else>
							<var name="obj.sel" value="${obj.sel}/Logger[@name='@{loggerName}']" />
						</else>
					</if>
				</else>
			</if>
			<echo message="Invoking Admin task using the objectselector: ${obj.sel}" />
			<AMXAdminTask remote="true" propsFile="@{remotePropsFile}" action="@{action}" dataFile="@{dataFile}" objectSelector="${obj.sel}" overwrite="@{overwrite}" merge="@{merge}" createIfNotExists="@{createIfNotExists}" force="@{force}" failOnError="@{failOnError}" />
			<echo>${line.separator}${line.separator}</echo>
		</sequential>
	</macrodef>

	<macrodef name="set.logger.to.node" backtrace="true" description="set logger to node.">
		<attribute name="envName" default="" description="the name of the environment. Optional. If not specified all environments in data file are selected." />
		<attribute name="nodeName" default="" description="the name of the node. Optional. If not specified all nodes in data file are selected." />
		<attribute name="loggerName" default="" description="the name of the logger. Optional. If not specified all loggers are selected." />
		<attribute name="dataFile" description="The data file used as input for this admin CLI task. Required." />
		<attribute name="objectSelector" default="" description="The object selector to be used with the admin task. Optional. By default, the macrodef tries to construct the objectselector based on the other input attributes. If this is specified, most other attributes like envName etc will be ignored." />
		<attribute name="remotePropsFile" default="${remotePropsFile}" description="The remote properties file. Optional. By default the value of the property remotePropsFile defined will be used." />
		<attribute name="action" default="set" description="action to pass to admin task. Default is set." />
		<attribute name="overwrite" default="true" description="overwrite flag passed to the admin task. Optional. Default is true" />
		<attribute name="merge" default="true" description="merge flag passed to the admin task. Optional. Default is true" />
		<attribute name="createIfNotExists" default="true" description="The createIfNotExists flag passed to the admin task. Optional. Default is true" />
		<attribute name="force" default="false" description="force flag passed to the admin task. Optional. Default is false" />
		<attribute name="failOnError" default="true" description="failOnError flag passed to the admin task. Optional. Default is true" />
		<sequential>
			<echo>${line.separator}${line.separator}</echo>
			<echo>Set Logger for Node using:</echo>
			<echo>envName: @{envName}</echo>
			<echo>nodeName: @{nodeName}</echo>
			<echo>loggerName: @{loggerName}</echo>
			<echo>dataFile: @{dataFile}</echo>
			<echo>remotePropsFile: @{remotePropsFile}</echo>
			<echo>objectSelector: @{objectSelector}</echo>
			<echo>action: @{action}</echo>
			<echo>overwrite: @{overwrite}</echo>
			<echo>merge: @{merge}</echo>
			<echo>createIfNotExists: @{createIfNotExists}</echo>
			<echo>force: @{force}</echo>
			<echo>failOnError: @{failOnError}</echo>
			<if>
				<not>
					<equals arg1="@{objectSelector}" arg2="" />
				</not>
				<then>
					<var name="obj.sel" value="@{objectSelector}" />
				</then>
				<else>
					<if>
						<equals arg1="@{envName}" arg2="" />
						<then>
							<var name="obj.sel" value="Environment" />
						</then>
						<else>
							<var name="obj.sel" value="Environment[@name='@{envName}']" />
						</else>
					</if>
					<if>
						<equals arg1="@{nodeName}" arg2="" />
						<then>
							<var name="obj.sel" value="${obj.sel}/Node" />
						</then>
						<else>
							<var name="obj.sel" value="${obj.sel}/Node[@name='@{nodeName}']" />
						</else>
					</if>
					<if>
						<equals arg1="@{loggerName}" arg2="" />
						<then>
							<var name="obj.sel" value="${obj.sel}/Logger" />
						</then>
						<else>
							<var name="obj.sel" value="${obj.sel}/Logger[@name='@{loggerName}']" />
						</else>
					</if>
				</else>
			</if>
			<echo message="Invoking Admin task using the objectselector: ${obj.sel}" />
			<AMXAdminTask remote="true" propsFile="@{remotePropsFile}" action="@{action}" dataFile="@{dataFile}" objectSelector="${obj.sel}" overwrite="@{overwrite}" merge="@{merge}" createIfNotExists="@{createIfNotExists}" force="@{force}" failOnError="@{failOnError}" />
			<echo>${line.separator}${line.separator}</echo>
		</sequential>
	</macrodef>

	<macrodef name="set.logger.to.host" backtrace="true" description="set the logger to host.">
		<attribute name="dataFile" description="The data file used as input for this admin CLI task. Required." />
		<attribute name="hostName" default="" description="The name of the host. Optional. If not specified, all the hosts in the data file are selected." />
		<attribute name="loggerName" default="" description="The name of the logger Optional. If not specified, all the loggers are selected." />
		<attribute name="objectSelector" default="" description="The object selector to be used with the admin task. Optional. By default, the macrodef tries to construct the objectselector based on the other input attributes. If this is specified, most other attributes like envName etc will be ignored." />
		<attribute name="remotePropsFile" default="${remotePropsFile}" description="The remote properties file. Optional. By default the value of the property remotePropsFile defined will be used." />
		<attribute name="action" default="set" description="action to pass to admin task. Default is set." />
		<attribute name="overwrite" default="true" description="overwrite flag passed to the admin task. Optional. Default is true" />
		<attribute name="merge" default="true" description="merge flag passed to the admin task. Optional. Default is true" />
		<attribute name="createIfNotExists" default="true" description="The createIfNotExists flag passed to the admin task. Optional. Default is true" />
		<attribute name="force" default="false" description="force flag passed to the admin task. Optional. Default is false" />
		<attribute name="failOnError" default="true" description="failOnError flag passed to the admin task. Optional. Default is true" />
		<sequential>
			<echo>${line.separator}${line.separator}</echo>
			<echo>Set Logger for Host using:</echo>
			<echo>dataFile: @{dataFile}</echo>
			<echo>hostName: @{hostName}</echo>
			<echo>loggerName: @{loggerName}</echo>
			<echo>remotePropsFile: @{remotePropsFile}</echo>
			<echo>objectSelector: @{objectSelector}</echo>
			<echo>action: @{action}</echo>
			<echo>overwrite: @{overwrite}</echo>
			<echo>merge: @{merge}</echo>
			<echo>createIfNotExists: @{createIfNotExists}</echo>
			<echo>force: @{force}</echo>
			<echo>failOnError: @{failOnError}</echo>
			<if>
				<not>
					<equals arg1="@{objectSelector}" arg2="" />
				</not>
				<then>
					<var name="obj.sel" value="@{objectSelector}" />
				</then>
				<else>
					<if>
						<equals arg1="@{hostName}" arg2="" />
						<then>
							<var name="obj.sel" value="Host" />
						</then>
						<else>
							<var name="obj.sel" value="Host[@name='@{hostName}']" />
						</else>
					</if>
					<if>
						<equals arg1="@{loggerName}" arg2="" />
						<then>
							<var name="obj.sel" value="${obj.sel}/Logger" />
						</then>
						<else>
							<var name="obj.sel" value="${obj.sel}/Logger[@name='@{loggerName}']" />
						</else>
					</if>
				</else>
			</if>
			<echo message="Invoking Admin task using the objectselector: ${obj.sel}" />
			<AMXAdminTask remote="true" propsFile="@{remotePropsFile}" action="@{action}" dataFile="@{dataFile}" objectSelector="${obj.sel}" overwrite="@{overwrite}" merge="@{merge}" createIfNotExists="@{createIfNotExists}" force="@{force}" failOnError="@{failOnError}" />
			<echo>${line.separator}${line.separator}</echo>
		</sequential>
	</macrodef>

	<macrodef name="add.tcs.user" backtrace="true" description="Create new TIBCO Credential Server user from specified data file. 
		If objectSelector attribute is specified, the some attributes are ignored.">
		<attribute name="userName" default="" description="the name of the user. Optional. If not specified all users in data file are selected." />
		<attribute name="dataFile" description="The data file used as input for this admin CLI task. Required." />
		<attribute name="remotePropsFile" default="${remotePropsFile}" description="The remote properties file. Optional. By default the value of the property remotePropsFile defined will be used." />
		<attribute name="action" default="add" description="action to pass to admin task. Default is add." />
		<attribute name="overwrite" default="true" description="overwrite flag passed to the admin task. Optional. Default is true" />
		<attribute name="merge" default="true" description="merge flag passed to the admin task. Optional. Default is true" />
		<attribute name="createIfNotExists" default="true" description="The createIfNotExists flag passed to the admin task. Optional. Default is true" />
		<attribute name="force" default="false" description="force flag passed to the admin task. Optional. Default is false" />
		<attribute name="failOnError" default="true" description="failOnError flag passed to the admin task. Optional. Default is true" />
		<attribute name="objectSelector" default="" description="The object selector to be used with the admin task. Optional. By default, the macrodef tries to construct the objectselector based on the other input attributes. If this is specified, most other attributes like envName etc will be ignored." />
		<sequential>
			<if>
				<not>
					<equals arg1="@{objectSelector}" arg2="" />
				</not>
				<then>
					<var name="obj.sel" value="@{objectSelector}" />
				</then>
				<elseif>
					<not>
						<equals arg1="@{userName}" arg2="" />
					</not>
					<then>
						<var name="obj.sel" value="declare namespace cs='http://tibco.com/trinity/server/credentialserver/cmdline/credentialserver'; cs:User[@UserName='@{userName}']" />
					</then>
				</elseif>
				<else>
					<var name="obj.sel" value="declare namespace cs='http://tibco.com/trinity/server/credentialserver/cmdline/credentialserver'; cs:User" />
				</else>
			</if>
			<echo>${line.separator}${line.separator}</echo>
			<echo>Creating TCS User using:</echo>
			<echo>userName: @{userName}</echo>
			<echo>dataFile: @{dataFile}</echo>
			<echo>remotePropsFile: @{remotePropsFile}</echo>
			<echo>objectSelector: ${obj.sel}</echo>
			<echo>action: @{action}</echo>
			<echo>overwrite: @{overwrite}</echo>
			<echo>merge: @{merge}</echo>
			<echo>createIfNotExists: @{createIfNotExists}</echo>
			<echo>force: @{force}</echo>
			<echo>failOnError: @{failOnError}</echo>
			<AMXAdminTask remote="true" propsFile="@{remotePropsFile}" action="@{action}" dataFile="@{dataFile}" objectSelector="${obj.sel}" overwrite="@{overwrite}" merge="@{merge}" createIfNotExists="@{createIfNotExists}" force="@{force}" failOnError="@{failOnError}" />
			<echo>${line.separator}${line.separator}</echo>
		</sequential>
	</macrodef>
	
	<macrodef name="delete.tcs.user" backtrace="true" description="Create new TIBCO Credential Server user from specified data file. 
		If objectSelector attribute is specified, the some attributes are ignored.">
		<attribute name="userName" default="" description="the name of the user. Optional. If not specified all users in data file are selected." />
		<attribute name="dataFile" description="The data file used as input for this admin CLI task. Required." />
		<attribute name="remotePropsFile" default="${remotePropsFile}" description="The remote properties file. Optional. By default the value of the property remotePropsFile defined will be used." />
		<attribute name="action" default="delete" description="action to pass to admin task. Default is add." />
		<attribute name="overwrite" default="true" description="overwrite flag passed to the admin task. Optional. Default is true" />
		<attribute name="merge" default="true" description="merge flag passed to the admin task. Optional. Default is true" />
		<attribute name="createIfNotExists" default="true" description="The createIfNotExists flag passed to the admin task. Optional. Default is true" />
		<attribute name="force" default="false" description="force flag passed to the admin task. Optional. Default is false" />
		<attribute name="failOnError" default="true" description="failOnError flag passed to the admin task. Optional. Default is true" />
		<attribute name="objectSelector" default="" description="The object selector to be used with the admin task. Optional. By default, the macrodef tries to construct the objectselector based on the other input attributes. If this is specified, most other attributes like envName etc will be ignored." />
		<sequential>
			<if>
				<not>
					<equals arg1="@{objectSelector}" arg2="" />
				</not>
				<then>
					<var name="obj.sel" value="@{objectSelector}" />
				</then>
				<elseif>
					<not>
						<equals arg1="@{userName}" arg2="" />
					</not>
					<then>
						<var name="obj.sel" value="declare namespace cs='http://tibco.com/trinity/server/credentialserver/cmdline/credentialserver'; cs:User[@UserName='@{userName}']" />
					</then>
				</elseif>
				<else>
					<var name="obj.sel" value="declare namespace cs='http://tibco.com/trinity/server/credentialserver/cmdline/credentialserver'; cs:User" />
				</else>
			</if>
			<echo>${line.separator}${line.separator}</echo>
			<echo>Deleting TCS User using:</echo>
			<echo>userName: @{userName}</echo>
			<echo>dataFile: @{dataFile}</echo>
			<echo>remotePropsFile: @{remotePropsFile}</echo>
			<echo>objectSelector: ${obj.sel}</echo>
			<echo>action: @{action}</echo>
			<echo>overwrite: @{overwrite}</echo>
			<echo>merge: @{merge}</echo>
			<echo>createIfNotExists: @{createIfNotExists}</echo>
			<echo>force: @{force}</echo>
			<echo>failOnError: @{failOnError}</echo>
			<AMXAdminTask remote="true" propsFile="@{remotePropsFile}" action="@{action}" dataFile="@{dataFile}" objectSelector="${obj.sel}" overwrite="@{overwrite}" merge="@{merge}" createIfNotExists="@{createIfNotExists}" force="@{force}" failOnError="@{failOnError}" />
			<echo>${line.separator}${line.separator}</echo>
		</sequential>
	</macrodef>
	
	
	<macrodef name="create.host" backtrace="true" description="Create a host in specified specified environment. If objectSelector attribute is specified, some of the input attributes will be ignored.">
		<attribute name="envName" default="" description="the name of the environment. Optional. If not specified all environments in data file are selected." />
		<attribute name="hostName" default="" description="the name of the host. Optional. If not specified all nodes in data file are selected." />
		<attribute name="dataFile" description="The data file used as input for this admin CLI task. Required." />
		<attribute name="objectSelector" default="" description="The object selector to be used with the admin task. Optional. By default, the macrodef tries to construct the objectselector based on the other input attributes. If this is specified, most other attributes like envName etc will be ignored." />
		<attribute name="remotePropsFile" default="${remotePropsFile}" description="The remote properties file. Optional. By default the value of the property remotePropsFile defined will be used." />
		<attribute name="action" default="add" description="action to pass to admin task. Default is add." />
		<attribute name="overwrite" default="true" description="overwrite flag passed to the admin task. Optional. Default is true" />
		<attribute name="merge" default="true" description="merge flag passed to the admin task. Optional. Default is true" />
		<attribute name="createIfNotExists" default="true" description="The createIfNotExists flag passed to the admin task. Optional. Default is true" />
		<attribute name="force" default="false" description="force flag passed to the admin task. Optional. Default is false" />
		<attribute name="failOnError" default="true" description="failOnError flag passed to the admin task. Optional. Default is true" />
		<sequential>
			<echo>${line.separator}${line.separator}</echo>
			<echo>Create Host using create target:</echo>
			<echo>dataFile: @{dataFile}</echo>
			<echo>remotePropsFile: @{remotePropsFile}</echo>
			<echo>objectSelector: @{objectSelector}</echo>
			<echo>action: @{action}</echo>
			<echo>overwrite: @{overwrite}</echo>
			<echo>merge: @{merge}</echo>
			<echo>createIfNotExists: @{createIfNotExists}</echo>
			<echo>force: @{force}</echo>
			<echo>failOnError: @{failOnError}</echo>
			<if>
				<not>
					<equals arg1="@{objectSelector}" arg2="" />
				</not>
				<then>
					<var name="obj.sel" value="@{objectSelector}" />
				</then>
				<else>
					<if>
						<equals arg1="@{envName}" arg2="" />
						<then>
							<var name="obj.sel" value="Environment" />
						</then>
						<else>
							<var name="obj.sel" value="Environment[@name='@{envName}']" />
						</else>
					</if>
					<if>
						<equals arg1="@{nodeName}" arg2="" />
						<then>
							<var name="obj.sel" value="${obj.sel}/Node" />
						</then>
						<else>
							<var name="obj.sel" value="${obj.sel}/Node[@name='@{nodeName}']" />
						</else>
					</if>
				</else>
			</if>
			<echo message="Invoking Admin task using the objectselector: ${obj.sel}" />
			<AMXAdminTask remote="true" propsFile="@{remotePropsFile}" action="@{action}" dataFile="@{dataFile}" objectSelector="${obj.sel}" overwrite="@{overwrite}" merge="@{merge}" createIfNotExists="@{createIfNotExists}" force="@{force}" failOnError="@{failOnError}" />
			<echo>${line.separator}${line.separator}</echo>
		</sequential>
	</macrodef>
	
	
	
	
	<macrodef name="update.host" backtrace="true" description="Update a host in specified  environment. If objectSelector attribute is specified, some of the input attributes will be ignored.">
		<attribute name="envName" default="" description="the name of the environment. Optional. If not specified all environments in data file are selected." />
		<attribute name="hostName" default="" description="the name of the host. Optional. If not specified all nodes in data file are selected." />
		<attribute name="dataFile" description="The data file used as input for this admin CLI task. Required." />
		<attribute name="objectSelector" default="" description="The object selector to be used with the admin task. Optional. By default, the macrodef tries to construct the objectselector based on the other input attributes. If this is specified, most other attributes like envName etc will be ignored." />
		<attribute name="remotePropsFile" default="${remotePropsFile}" description="The remote properties file. Optional. By default the value of the property remotePropsFile defined will be used." />
		<attribute name="action" default="add" description="action to pass to admin task. Default is add." />
		<attribute name="overwrite" default="true" description="overwrite flag passed to the admin task. Optional. Default is true" />
		<attribute name="merge" default="true" description="merge flag passed to the admin task. Optional. Default is true" />
		<attribute name="createIfNotExists" default="true" description="The createIfNotExists flag passed to the admin task. Optional. Default is true" />
		<attribute name="force" default="false" description="force flag passed to the admin task. Optional. Default is false" />
		<attribute name="failOnError" default="true" description="failOnError flag passed to the admin task. Optional. Default is true" />
		<sequential>
			<echo>${line.separator}${line.separator}</echo>
			<echo>Update Host using update target:</echo>
			<echo>dataFile: @{dataFile}</echo>
			<echo>remotePropsFile: @{remotePropsFile}</echo>
			<echo>objectSelector: @{objectSelector}</echo>
			<echo>action: @{action}</echo>
			<echo>overwrite: @{overwrite}</echo>
			<echo>merge: @{merge}</echo>
			<echo>createIfNotExists: @{createIfNotExists}</echo>
			<echo>force: @{force}</echo>
			<echo>failOnError: @{failOnError}</echo>
			<if>
				<not>
					<equals arg1="@{objectSelector}" arg2="" />
				</not>
				<then>
					<var name="obj.sel" value="@{objectSelector}" />
				</then>
				<else>
					<if>
						<equals arg1="@{envName}" arg2="" />
						<then>
							<var name="obj.sel" value="Environment" />
						</then>
						<else>
							<var name="obj.sel" value="Environment[@name='@{envName}']" />
						</else>
					</if>
					<if>
						<equals arg1="@{nodeName}" arg2="" />
						<then>
							<var name="obj.sel" value="${obj.sel}/Node" />
						</then>
						<else>
							<var name="obj.sel" value="${obj.sel}/Node[@name='@{nodeName}']" />
						</else>
					</if>
				</else>
			</if>
			<echo message="Invoking Admin task using the objectselector: ${obj.sel}" />
			<AMXAdminTask remote="true" propsFile="@{remotePropsFile}" action="@{action}" dataFile="@{dataFile}" objectSelector="${obj.sel}" overwrite="@{overwrite}" merge="@{merge}" createIfNotExists="@{createIfNotExists}" force="@{force}" failOnError="@{failOnError}" />
			<echo>${line.separator}${line.separator}</echo>
		</sequential>
	</macrodef>
	
	
		
	
	
	<macrodef name="delete.host" backtrace="true" description="Delete a host in specified specified environment. If objectSelector attribute is specified, some of the input attributes will be ignored.">
		<attribute name="hostName" default="" description="the name of the host which you want to delete" />
		<attribute name="dataFile" description="The data file used as input for this admin CLI task. Required." />
		<attribute name="objectSelector" default="" description="The object selector to be used with the admin task. Optional. By default, the macrodef tries to construct the objectselector based on the other input attributes. If this is specified, most other attributes like envName etc will be ignored." />
		<attribute name="remotePropsFile" default="${remotePropsFile}" description="The remote properties file. Optional. By default the value of the property remotePropsFile defined will be used." />
		<attribute name="action" default="delete" description="action to pass to admin task. Default is delete." />
		<attribute name="overwrite" default="true" description="overwrite flag passed to the admin task. Optional. Default is true" />
		<attribute name="merge" default="true" description="merge flag passed to the admin task. Optional. Default is true" />
		<attribute name="createIfNotExists" default="true" description="The createIfNotExists flag passed to the admin task. Optional. Default is true" />
		<attribute name="force" default="false" description="force flag passed to the admin task. Optional. Default is false" />
		<attribute name="failOnError" default="true" description="failOnError flag passed to the admin task. Optional. Default is true" />
		<sequential>
			<echo>${line.separator}${line.separator}</echo>
			<echo>Delete Host using delete target:</echo>
			<echo>dataFile: @{dataFile}</echo>
			<echo>remotePropsFile: @{remotePropsFile}</echo>
			<echo>objectSelector: @{objectSelector}</echo>
			<echo>action: @{action}</echo>
			<echo>overwrite: @{overwrite}</echo>
			<echo>merge: @{merge}</echo>
			<echo>createIfNotExists: @{createIfNotExists}</echo>
			<echo>force: @{force}</echo>
			<echo>failOnError: @{failOnError}</echo>
			<if>
				<not>
					<equals arg1="@{objectSelector}" arg2="" />
				</not>
				<then>
					<var name="obj.sel" value="@{objectSelector}" />
				</then>
				<else>
					<if>
						<equals arg1="@{envName}" arg2="" />
						<then>
							<var name="obj.sel" value="Environment" />
						</then>
						<else>
							<var name="obj.sel" value="Environment[@name='@{envName}']" />
						</else>
					</if>
					<if>
						<equals arg1="@{nodeName}" arg2="" />
						<then>
							<var name="obj.sel" value="${obj.sel}/Node" />
						</then>
						<else>
							<var name="obj.sel" value="${obj.sel}/Node[@name='@{nodeName}']" />
						</else>
					</if>
				</else>
			</if>
			<echo message="Invoking Admin task using the objectselector: ${obj.sel}" />
			<AMXAdminTask remote="true" propsFile="@{remotePropsFile}" action="@{action}" dataFile="@{dataFile}" objectSelector="${obj.sel}" overwrite="@{overwrite}" merge="@{merge}" createIfNotExists="@{createIfNotExists}" force="@{force}" failOnError="@{failOnError}" />
			<echo>${line.separator}${line.separator}</echo>
		</sequential>
	</macrodef>
	
	
	
	
	<macrodef name="install.host" backtrace="true" description="Install a host in specified specified environment. If objectSelector attribute is specified, some of the input attributes will be ignored.">
		<attribute name="hostName" default="" description="the name of the host." />
		<attribute name="dataFile" description="The data file used as input for this admin CLI task. Required." />
		<attribute name="objectSelector" default="" description="The object selector to be used with the admin task. Optional. By default, the macrodef tries to construct the objectselector based on the other input attributes. If this is specified, most other attributes like envName etc will be ignored." />
		<attribute name="remotePropsFile" default="${remotePropsFile}" description="The remote properties file. Optional. By default the value of the property remotePropsFile defined will be used." />
		<attribute name="action" default="install" description="action to pass to admin task. Default is install." />
		<attribute name="overwrite" default="true" description="overwrite flag passed to the admin task. Optional. Default is true" />
		<attribute name="merge" default="true" description="merge flag passed to the admin task. Optional. Default is true" />
		<attribute name="createIfNotExists" default="true" description="The createIfNotExists flag passed to the admin task. Optional. Default is true" />
		<attribute name="force" default="false" description="force flag passed to the admin task. Optional. Default is false" />
		<attribute name="failOnError" default="true" description="failOnError flag passed to the admin task. Optional. Default is true" />
		<attribute name="timeout" default="120" />
		<sequential>
			<echo>${line.separator}${line.separator}</echo>
			<echo>Install Host using install target:</echo>
			<echo>dataFile: @{dataFile}</echo>
			<echo>remotePropsFile: @{remotePropsFile}</echo>
			<echo>objectSelector: @{objectSelector}</echo>
			<echo>action: @{action}</echo>
			<echo>overwrite: @{overwrite}</echo>
			<echo>merge: @{merge}</echo>
			<echo>createIfNotExists: @{createIfNotExists}</echo>
			<echo>force: @{force}</echo>
			<echo>failOnError: @{failOnError}</echo>
			<echo>timeout: @{timeout}</echo>
			<if>
				<not>
					<equals arg1="@{objectSelector}" arg2="" />
				</not>
				<then>
					<var name="obj.sel" value="@{objectSelector}" />
				</then>
				<else>
					<if>
						<equals arg1="@{envName}" arg2="" />
						<then>
							<var name="obj.sel" value="Environment" />
						</then>
						<else>
							<var name="obj.sel" value="Environment[@name='@{envName}']" />
						</else>
					</if>
					<if>
						<equals arg1="@{nodeName}" arg2="" />
						<then>
							<var name="obj.sel" value="${obj.sel}/Node" />
						</then>
						<else>
							<var name="obj.sel" value="${obj.sel}/Node[@name='@{nodeName}']" />
						</else>
					</if>
				</else>
			</if>
			<echo message="Invoking Admin task using the objectselector: ${obj.sel}" />
			<AMXAdminTask remote="true" propsFile="@{remotePropsFile}" action="@{action}" dataFile="@{dataFile}" objectSelector="${obj.sel}" overwrite="@{overwrite}" merge="@{merge}" createIfNotExists="@{createIfNotExists}" force="@{force}" failOnError="@{failOnError}" timeout="@{timeout}" />
			<echo>${line.separator}${line.separator}</echo>
		</sequential>
	</macrodef>
	
	
	
		
	
	
	<macrodef name="uninstall.host" backtrace="true" description="Uninstall a host in specified specified environment. If objectSelector attribute is specified, some of the input attributes will be ignored.">
		<attribute name="dataFile" description="The data file used as input for this admin CLI task. Required." />
		<attribute name="objectSelector" default="" description="The object selector to be used with the admin task. Optional. By default, the macrodef tries to construct the objectselector based on the other input attributes. If this is specified, most other attributes like envName etc will be ignored." />
		<attribute name="remotePropsFile" default="${remotePropsFile}" description="The remote properties file. Optional. By default the value of the property remotePropsFile defined will be used." />
		<attribute name="action" default="uninstall" description="action to pass to admin task. Default is uninstall." />
		<attribute name="overwrite" default="true" description="overwrite flag passed to the admin task. Optional. Default is true" />
		<attribute name="merge" default="true" description="merge flag passed to the admin task. Optional. Default is true" />
		<attribute name="createIfNotExists" default="true" description="The createIfNotExists flag passed to the admin task. Optional. Default is true" />
		<attribute name="force" default="false" description="force flag passed to the admin task. Optional. Default is false" />
		<attribute name="failOnError" default="true" description="failOnError flag passed to the admin task. Optional. Default is true" />
		<attribute name="timeout" default="120" />
		<sequential>
			<echo>${line.separator}${line.separator}</echo>
			<echo>Uninstall host using Uninstall target:</echo>
			<echo>dataFile: @{dataFile}</echo>
			<echo>remotePropsFile: @{remotePropsFile}</echo>
			<echo>objectSelector: @{objectSelector}</echo>
			<echo>action: @{action}</echo>
			<echo>overwrite: @{overwrite}</echo>
			<echo>merge: @{merge}</echo>
			<echo>createIfNotExists: @{createIfNotExists}</echo>
			<echo>force: @{force}</echo>
			<echo>failOnError: @{failOnError}</echo>
			<echo>timeout: @{timeout}</echo>
			<if>
				<not>
					<equals arg1="@{objectSelector}" arg2="" />
				</not>
				<then>
					<var name="obj.sel" value="@{objectSelector}" />
				</then>
				<else>
					<if>
						<equals arg1="@{envName}" arg2="" />
						<then>
							<var name="obj.sel" value="Environment" />
						</then>
						<else>
							<var name="obj.sel" value="Environment[@name='@{envName}']" />
						</else>
					</if>
					<if>
						<equals arg1="@{nodeName}" arg2="" />
						<then>
							<var name="obj.sel" value="${obj.sel}/Node" />
						</then>
						<else>
							<var name="obj.sel" value="${obj.sel}/Node[@name='@{nodeName}']" />
						</else>
					</if>
				</else>
			</if>
			<echo message="Invoking Admin task using the objectselector: ${obj.sel}" />
			<AMXAdminTask remote="true" propsFile="@{remotePropsFile}" action="@{action}" dataFile="@{dataFile}" objectSelector="${obj.sel}" overwrite="@{overwrite}" merge="@{merge}" createIfNotExists="@{createIfNotExists}" force="@{force}" failOnError="@{failOnError}" timeout="@{timeout}" />
			<echo>${line.separator}${line.separator}</echo>
		</sequential>
	</macrodef>
	
	
		
	
	<macrodef name="start.host" backtrace="true" description="start a host in specified specified environment. If objectSelector attribute is specified, some of the input attributes will be ignored.">
		<attribute name="dataFile" description="The data file used as input for this admin CLI task. Required." />
		<attribute name="objectSelector" default="" description="The object selector to be used with the admin task. Optional. By default, the macrodef tries to construct the objectselector based on the other input attributes. If this is specified, most other attributes like envName etc will be ignored." />
		<attribute name="remotePropsFile" default="${remotePropsFile}" description="The remote properties file. Optional. By default the value of the property remotePropsFile defined will be used." />
		<attribute name="action" default="start" description="action to pass to admin task. Default is start." />
		<attribute name="overwrite" default="true" description="overwrite flag passed to the admin task. Optional. Default is true" />
		<attribute name="merge" default="true" description="merge flag passed to the admin task. Optional. Default is true" />
		<attribute name="createIfNotExists" default="true" description="The createIfNotExists flag passed to the admin task. Optional. Default is true" />
		<attribute name="force" default="false" description="force flag passed to the admin task. Optional. Default is false" />
		<attribute name="failOnError" default="true" description="failOnError flag passed to the admin task. Optional. Default is true" />
		<attribute name="timeout" default="240" />
		<sequential>
			<echo>${line.separator}${line.separator}</echo>
			<echo>Start Host using start target:</echo>
			<echo>dataFile: @{dataFile}</echo>
			<echo>remotePropsFile: @{remotePropsFile}</echo>
			<echo>objectSelector: @{objectSelector}</echo>
			<echo>action: @{action}</echo>
			<echo>overwrite: @{overwrite}</echo>
			<echo>merge: @{merge}</echo>
			<echo>createIfNotExists: @{createIfNotExists}</echo>
			<echo>force: @{force}</echo>
			<echo>failOnError: @{failOnError}</echo>
			<echo>timeout: @{timeout}</echo>
			<if>
				<not>
					<equals arg1="@{objectSelector}" arg2="" />
				</not>
				<then>
					<var name="obj.sel" value="@{objectSelector}" />
				</then>
				<else>
					<if>
						<equals arg1="@{envName}" arg2="" />
						<then>
							<var name="obj.sel" value="Environment" />
						</then>
						<else>
							<var name="obj.sel" value="Environment[@name='@{envName}']" />
						</else>
					</if>
					<if>
						<equals arg1="@{nodeName}" arg2="" />
						<then>
							<var name="obj.sel" value="${obj.sel}/Node" />
						</then>
						<else>
							<var name="obj.sel" value="${obj.sel}/Node[@name='@{nodeName}']" />
						</else>
					</if>
				</else>
			</if>
			<echo message="Invoking Admin task using the objectselector: ${obj.sel}" />
			<AMXAdminTask remote="true" propsFile="@{remotePropsFile}" action="@{action}" dataFile="@{dataFile}" objectSelector="${obj.sel}" overwrite="@{overwrite}" merge="@{merge}" createIfNotExists="@{createIfNotExists}" force="@{force}" failOnError="@{failOnError}" timeout="@{timeout}" />
			<echo>${line.separator}${line.separator}</echo>
		</sequential>
	</macrodef>

		
	
	
	<macrodef name="stop.host" backtrace="true" description="Stop a host in specified specified environment. If objectSelector attribute is specified, some of the input attributes will be ignored.">
		<attribute name="dataFile" description="The data file used as input for this admin CLI task. Required." />
		<attribute name="objectSelector" default="" description="The object selector to be used with the admin task. Optional. By default, the macrodef tries to construct the objectselector based on the other input attributes. If this is specified, most other attributes like envName etc will be ignored." />
		<attribute name="remotePropsFile" default="${remotePropsFile}" description="The remote properties file. Optional. By default the value of the property remotePropsFile defined will be used." />
		<attribute name="action" default="stop" description="action to pass to admin task. Default is stop." />
		<attribute name="overwrite" default="true" description="overwrite flag passed to the admin task. Optional. Default is true" />
		<attribute name="merge" default="true" description="merge flag passed to the admin task. Optional. Default is true" />
		<attribute name="createIfNotExists" default="true" description="The createIfNotExists flag passed to the admin task. Optional. Default is true" />
		<attribute name="force" default="false" description="force flag passed to the admin task. Optional. Default is false" />
		<attribute name="failOnError" default="true" description="failOnError flag passed to the admin task. Optional. Default is true" />
		<attribute name="timeout" default="120" />
		<sequential>
			<echo>${line.separator}${line.separator}</echo>
			<echo>Stop Node in an environment using:</echo>
			<echo>envName: @{envName}</echo>
			<echo>nodeName: @{nodeName}</echo>
			<echo>dataFile: @{dataFile}</echo>
			<echo>remotePropsFile: @{remotePropsFile}</echo>
			<echo>objectSelector: @{objectSelector}</echo>
			<echo>action: @{action}</echo>
			<echo>overwrite: @{overwrite}</echo>
			<echo>merge: @{merge}</echo>
			<echo>createIfNotExists: @{createIfNotExists}</echo>
			<echo>force: @{force}</echo>
			<echo>failOnError: @{failOnError}</echo>
			<echo>timeout: @{timeout}</echo>
			<if>
				<not>
					<equals arg1="@{objectSelector}" arg2="" />
				</not>
				<then>
					<var name="obj.sel" value="@{objectSelector}" />
				</then>
				<else>
					<if>
						<equals arg1="@{envName}" arg2="" />
						<then>
							<var name="obj.sel" value="Environment" />
						</then>
						<else>
							<var name="obj.sel" value="Environment[@name='@{envName}']" />
						</else>
					</if>
					<if>
						<equals arg1="@{nodeName}" arg2="" />
						<then>
							<var name="obj.sel" value="${obj.sel}/Node" />
						</then>
						<else>
							<var name="obj.sel" value="${obj.sel}/Node[@name='@{nodeName}']" />
						</else>
					</if>
				</else>
			</if>
			<echo message="Invoking Admin task using the objectselector: ${obj.sel}" />
			<AMXAdminTask remote="true" propsFile="@{remotePropsFile}" action="@{action}" dataFile="@{dataFile}" objectSelector="${obj.sel}" overwrite="@{overwrite}" merge="@{merge}" createIfNotExists="@{createIfNotExists}" force="@{force}" failOnError="@{failOnError}" timeout="@{timeout}" options="normal" />
			<echo>${line.separator}${line.separator}</echo>
		</sequential>
	</macrodef>

</project>


<?xml version="1.0" ?>


<!-- Test Case created by LISA Test Editor -->
<!-- On: Tue Jul 13 11:35:30 PDT 2010 -->


<TestCase name="StopTibcoHost" version="2">
<id>aa488cd</id>
<Documentation>Stops TIBCOHost.&#13;&#10;This sub-process performs first a tibcohost -stop&#13;&#10;It can be executed on a remote TIBCOHost as well as long as there is a LISA simulator running on the remote host.&#13;&#10;&#13;&#10;Note: LISA simulator port must be 2001 on the remote machine.</Documentation>
<sig>ZWQ9MiZ0Y3Y9MiZsaXNhdj00LjYuNyAoNC42LjcuMTYpJm5vZGVzPS0xNzE4MTMyODQ1</sig>
<rootNode>log</rootNode>
<subprocess>true</subprocess>

<initState>
    <Parameter>
    <key>host</key>
    <value>localhost</value>
    <name>Host on which to stop the TIBCOHost</name>
    </Parameter>
    <Parameter>
    <key>tibcoHostinstance</key>
    <value>{{TIBCO_HOST_CONFIG}}/&lt;yourTHInstanceFolder&gt;/host</value>
    <name>TIBCOHost instance directory</name>
    </Parameter>
    <Parameter>
    <key>mode</key>
    <value></value>
    <name>Stop mode used for stopping the node (normal - immediate - abort). Default is normal.</name>
    </Parameter>
    <Parameter>
    <key>wait</key>
    <value></value>
    <name>If set to true the wait becomes synchronous and only returns when all node processes were stopped. Default is false</name>
    </Parameter>
    <Parameter>
    <key>timeout</key>
    <value>180</value>
    <name>Max number of seconds to wait to allow the TIBCOHost to stop</name>
    </Parameter>
</initState>

<resultState>
    <Parameter>
    <key>lisa.fail.rsp</key>
    <value>Set in Step fail</value>
    </Parameter>
    <Parameter>
    <key>lisa.fail.rsp.time</key>
    <value>Set in Step fail</value>
    </Parameter>
    <Parameter>
    <key>lisa.end.rsp.time</key>
    <value>Set in Step end</value>
    </Parameter>
    <Parameter>
    <key>lisa.stopTibcoHost.rsp.time</key>
    <value>Set in Step stopTibcoHost</value>
    </Parameter>
    <Parameter>
    <key>lisa.startTibcoHost.rsp</key>
    <value>Set in Step startTibcoHost</value>
    </Parameter>
    <Parameter>
    <key>lisa.getSimulator.rsp</key>
    <value>Set in Step getSimulator</value>
    </Parameter>
    <Parameter>
    <key>lisa.getSimulator.rsp.time</key>
    <value>Set in Step getSimulator</value>
    </Parameter>
    <Parameter>
    <key>simulator</key>
    <value>Set in Step getSimulator</value>
    </Parameter>
    <Parameter>
    <key>simulatorPort</key>
    <value>Property From Config</value>
    </Parameter>
    <Parameter>
    <key>lisa.validateInputVariables.rsp</key>
    <value>Set in Step validateInputVariables</value>
    </Parameter>
    <Parameter>
    <key>lisa.validateInputVariables.rsp.time</key>
    <value>Set in Step validateInputVariables</value>
    </Parameter>
    <Parameter>
    <key>lisa.log.rsp</key>
    <value>Set in Step log</value>
    </Parameter>
    <Parameter>
    <key>lisa.stopTibcoHost.rsp</key>
    <value>Set in Step stopTibcoHost</value>
    </Parameter>
    <Parameter>
    <key>lisa.end.rsp</key>
    <value>Set in Step end</value>
    </Parameter>
    <Parameter>
    <key>lisa.buildStopCommand.rsp</key>
    <value>Set in Step buildStopCommand</value>
    </Parameter>
    <Parameter>
    <key>lisa.buildStopCommand.rsp.time</key>
    <value>Set in Step buildStopCommand</value>
    </Parameter>
    <Parameter>
    <key>stopCommand</key>
    <value>Set in Step buildStopCommand</value>
    </Parameter>
</resultState>

<Configurations>
<Configuration>
<name>default</name>
<external>false</external>
<props>
    <Parameter>
    <key>simulatorPort</key>
    <value>2001</value>
    <name>Name</name>
    </Parameter>
</props>
</Configuration>
</Configurations>
    <Node name="log" log=""
          type="com.itko.lisa.test.TestNodeLogger" 
          version="1" 
          think="0-0" 
 useFilters="true" 
 quiet="false" 
          next="getSimulator" > 

<graphx>301</graphx>
<graphy>938</graphy>
      <log>Stopping TIBCOHost on host {{host}} at {{tibcoHostinstance}} ...</log>
    </Node>


    <Node name="getSimulator" log="get the simulator for the host on which tibcohost should be stopped."
          type="com.itko.lisa.test.ScriptNode" 
          version="1" 
          think="0-0" 
 useFilters="true" 
 quiet="true" 
          next="validateInputVariables" > 

<graphx>366</graphx>
<graphy>0</graphy>
<onerror>fail</onerror>
<script>if (host == null || host.equals(&quot;&quot;))&#13;&#10; throw new Exception(&quot;host is empty!&quot;);&#13;&#10;&#13;&#10;if (host.equalsIgnoreCase(LISA_HOST) || host.equals(&quot;localhost&quot;) || host.equals(&quot;127.0.0.1&quot;))&#13;&#10; return &quot;local&quot;;&#13;&#10;else&#13;&#10; return &quot;rmi://&quot; + host + &quot;:&quot; + simulatorPort + &quot;/&quot; + host;</script>

      <!-- Filters -->
      <Filter type="com.itko.lisa.test.FilterSaveResponse">
        <valueToFilterKey>lisa.getSimulator.rsp</valueToFilterKey>
      <prop>simulator</prop>
      </Filter>


      <!-- Result Elements -->
<CheckResult assertTrue="true" name="Any Exception Then Fail" type="com.itko.lisa.dynexec.CheckInvocationEx">
<log>Getting Simulators has thrown Exception</log>
<then>fail</then>
<valueToAssertKey></valueToAssertKey>
        <param>.*</param>
</CheckResult>

    </Node>


    <Node name="validateInputVariables" log=""
          type="com.itko.lisa.test.ScriptNode" 
          version="1" 
          think="0-0" 
 useFilters="true" 
 quiet="false" 
          next="buildStopCommand" > 

<graphx>10</graphx>
<graphy>10</graphy>
<remoteServer>{{simulator}}</remoteServer>
<onerror>fail</onerror>
<script>import java.io.File;&#13;&#10;&#13;&#10;String errorMsg = &quot;TIBCOHost Stop Error&quot;;&#13;&#10;&#13;&#10;String checkInputVariables() {&#13;&#10;&#9;File thFile = null;&#13;&#10;&#13;&#10;    if ((tibcoHostinstance == null) || (tibcoHostinstance.equals(&quot;&quot;))) {&#13;&#10;&#9;&#9;return errorMsg + &quot;: tibcoHostinstance is required&quot;;&#13;&#10;&#9;}&#13;&#10;&#9;if ((host == null) || (host.equals(&quot;&quot;))) {&#13;&#10;&#9;&#9;return errorMsg + &quot;: host is required&quot;;&#13;&#10;&#9;}&#13;&#10;&#9;if ((timeout == null) || (timeout.equals(&quot;&quot;))) {&#13;&#10;&#9;&#9;return errorMsg + &quot;: timeout is required&quot;;&#13;&#10;&#9;}&#13;&#10;&#13;&#10;    thFile = new File(testExec.parseInState(tibcoHostinstance).replace(&apos;\\&apos;, &apos;/&apos;));&#13;&#10;&#13;&#10;&#9;if (!thFile.exists()) {&#13;&#10;&#9;&#9;return errorMsg + &quot;: tibcoHostinstance is not found.&quot;;&#13;&#10;&#9;}&#13;&#10;    if (!thFile.canRead()) {&#13;&#10;&#9;&#9;return errorMsg + &quot;: tibcoHostinstance cannot be read.&quot;;&#13;&#10;&#9;}&#13;&#10;&#9;if (!thFile.isDirectory()) {&#13;&#10;&#9;&#9;return errorMsg + &quot;tibcoHostinstance is not a directory.&quot;;&#13;&#10;&#9;}&#13;&#10;&#13;&#10;&#9;return &quot;TIBCOHost Start-up Validation Success&quot;;&#13;&#10;}&#13;&#10;&#13;&#10;return checkInputVariables();</script>

      <!-- Result Elements -->
<CheckResult assertTrue="true" name="Any Exception Then Fail" type="com.itko.lisa.dynexec.CheckInvocationEx">
<log>Assert [Any Exception Then Fail] fired true of type Assert on Invocation Exception</log>
<then>fail</then>
<valueToAssertKey></valueToAssertKey>
        <param>.*</param>
</CheckResult>

<CheckResult assertTrue="true" name="Assert215" type="com.itko.lisa.test.CheckResultContains">
<log>{{LASTRESPONSE}}</log>
<then>fail</then>
<valueToAssertKey></valueToAssertKey>
        <param>TIBCOHost Stop Error</param>
</CheckResult>

    </Node>


    <Node name="buildStopCommand" log=""
          type="com.itko.lisa.test.ScriptNode" 
          version="1" 
          think="0-0" 
 useFilters="true" 
 quiet="false" 
          next="stopTibcoHost" > 

<graphx>10</graphx>
<graphy>10</graphy>
<onerror>fail</onerror>
<script>String str = &quot;stop&quot;;&#13;&#10;if (!mode.equals(&quot;&quot;))&#13;&#10;    str = str + &quot; -mode &quot; + mode;&#13;&#10;if (!wait.equals(&quot;&quot;))&#13;&#10;    str = str + &quot; -wait &quot; + wait;&#13;&#10;&#13;&#10;return str;</script>

      <!-- Filters -->
      <Filter type="com.itko.lisa.test.FilterSaveResponse">
        <valueToFilterKey>lisa.buildStopCommand.rsp</valueToFilterKey>
      <prop>stopCommand</prop>
      </Filter>


      <!-- Result Elements -->
<CheckResult assertTrue="true" name="Any Exception Then Fail" type="com.itko.lisa.dynexec.CheckInvocationEx">
<log>Assert [Any Exception Then Fail] fired true of type Assert on Invocation Exception</log>
<then>fail</then>
<valueToAssertKey></valueToAssertKey>
        <param>.*</param>
</CheckResult>

    </Node>


    <Node name="stopTibcoHost" log="Stop the tibcohost."
          type="com.itko.lisa.utils.ExecSubProcessNode" 
          version="1" 
          think="0-0" 
 useFilters="true" 
 quiet="false" 
          next="end" > 

<graphx>37</graphx>
<graphy>301</graphy>
<remoteServer>{{simulator}}</remoteServer>
<Subprocess>{{TIBCO_COMMON_LIBRARY}}/com/tibco/lisa/util/JVMWrapper.tst</Subprocess>
<getEvents>0</getEvents>
<sendConfig>true</sendConfig>
<fullyParseProps>true</fullyParseProps>
<sendCommonState>false</sendCommonState>
<getCommonState>false</getCommonState>
<onFail>fail</onFail>
<Parameters>
    <Parameter>
    <key>wrapperName</key>
    <value>{{tibcoHostinstance}}/bin/tibcohost</value>
    <name>Absolute path to the wrapper application</name>
    </Parameter>
    <Parameter>
    <key>command</key>
    <value></value>
    <name>One of the following command switches: --install, --uninstall, --update, --start, --stop, --run</name>
    </Parameter>
    <Parameter>
    <key>propFile</key>
    <value>{{tibcoHostinstance}}/bin/tibcohost.tra</value>
    <name>Absolute path to the tra file used to launch the wrapper</name>
    </Parameter>
    <Parameter>
    <key>extraCommand</key>
    <value>{{stopCommand}}</value>
    <name>Extra command a specific wrapper might need</name>
    </Parameter>
    <Parameter>
    <key>startInDir</key>
    <value>{{tibcoHostinstance}}/bin</value>
    <name>Execute from directory</name>
    </Parameter>
    <Parameter>
    <key>waitForCompletion</key>
    <value>true</value>
    <name>Wait for the command to complete (true or false)</name>
    </Parameter>
    <Parameter>
    <key>waitBeforeOnWindows</key>
    <value>0</value>
    <name>Number of seconds to sleep on Windows platforms before starting the JVM wrapper</name>
    </Parameter>
    <Parameter>
    <key>waitBeforeOnUnix</key>
    <value>0</value>
    <name>Number of seconds to sleep on Unix platforms before starting the JVM wrapper</name>
    </Parameter>
    <Parameter>
    <key>waitAfterOnWindows</key>
    <value>{{timeout}}</value>
    <name>Number of seconds to sleep on Windows platforms after starting the JVM wrapper</name>
    </Parameter>
    <Parameter>
    <key>waitAfterOnUnix</key>
    <value>{{timeout}}</value>
    <name>Number of seconds to sleep on Unix platforms after starting the JVM wrapper</name>
    </Parameter>
</Parameters>
<SaveProps>
</SaveProps>

      <!-- Result Elements -->
<CheckResult assertTrue="true" name="Assert159" type="com.itko.lisa.test.CheckResultContains">
<log>Verify if the tibcohost.exe is present</log>
<then>fail</then>
<valueToAssertKey></valueToAssertKey>
        <param>does not exist.</param>
</CheckResult>

<CheckResult assertTrue="true" name="Assert124" type="com.itko.lisa.test.CheckResultContains">
<log>Assert [Assert124] fired true of type Result as String Contains Given String</log>
<then>fail</then>
<valueToAssertKey></valueToAssertKey>
        <param>Exception</param>
</CheckResult>

<CheckResult assertTrue="true" name="Assert160" type="com.itko.lisa.test.CheckResultContains">
<log>Assert [Assert160] fired true of type Result as String Contains Given String</log>
<then>fail</then>
<valueToAssertKey></valueToAssertKey>
        <param>Try &quot;help&quot;</param>
</CheckResult>

<CheckResult assertTrue="false" name="Assert204" type="com.itko.lisa.test.CheckResultContains">
<log>Assert [Assert204] fired false of type Result as String Contains Given String</log>
<then>fail</then>
<valueToAssertKey></valueToAssertKey>
        <param>Stopped TIBCO Host</param>
</CheckResult>

    </Node>


    <Node name="fail" log=""
          type="com.itko.lisa.test.Abend" 
          version="1" 
          think="0-0" 
 useFilters="true" 
 quiet="true" 
          next="unknown" > 

<graphx>488</graphx>
<graphy>976</graphy>
    </Node>


    <Node name="end" log=""
          type="com.itko.lisa.test.NormalEnd" 
          version="1" 
          think="0-0" 
 useFilters="true" 
 quiet="true" 
          next="fail" > 

<graphx>674</graphx>
<graphy>938</graphy>
    </Node>


</TestCase>
